{"version":3,"file":"js/474-b77b08417ef0db5a40d0.js","mappings":"2FAAA,IAAIA,EAAM,CACT,yBAA0B,CACzB,KACA,KAED,yBAA0B,CACzB,EACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,KAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,GAGD,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,KAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,GAClC,EACD,CACAX,EAAoBa,KAAO,WAAa,OAAOC,OAAOD,KAAKd,EAAM,EACjEC,EAAoBW,GAAK,IACzBI,EAAOC,QAAUhB,C,iFCxBF,MAAMiB,EACnBC,WAAAA,CAAYC,GACVC,KAAKD,IAAMA,EACXE,EAAAA,aAAaC,KAAK,YAAaF,KACjC,CAEAG,SAAAA,CAAUC,GACR,GACO,cADCA,EAEJJ,KAAKD,IAAIM,UAAUC,OAAO,gBAG1BN,KAAKD,IAAIM,UAAUE,IAAI,UAG7B,E,yHCba,MAAMC,UAA2BC,EAAAA,QAU9CX,WAAAA,CACEY,EACAC,EACAC,EAAkB,MAClBC,EAAiB,GACjBC,EAAe,KACfC,GAAS,GAETC,MAAMC,EAAAA,oBAAoBC,MAAOR,EAASC,EAAYG,GAGtDd,KAAKmB,KAAKd,UAAUE,IAAI,wCACxBP,KAAKoB,QAAUL,EACXA,GAAQf,KAAKmB,KAAKd,UAAUE,IAAI,SACpCP,KAAKmB,KAAKE,QAAQC,cAAgBT,EAAeU,OACjDvB,KAAKmB,KAAKK,UAAY,iFAItBxB,KAAKyB,uBAAyBzB,KAAKmB,KAAKO,cACtC,qCAEF1B,KAAK2B,WAAa3B,KAAKmB,KAAKO,cAAc,uBAG1C,IAAK,MAAME,KAAiBf,EAC1Bb,KAAK2B,WAAWE,OAAOD,EAAc7B,KACrC6B,EAAcjB,WAAaX,KAI7BA,KAAKyB,uBAAuBJ,QAAQS,SAAWlB,EAI1CG,GACHf,KAAKmB,KAAKY,iBAAiB,QAAS/B,KAAKgC,iBAAiB9B,KAAKF,OAEjEA,KAAKyB,uBAAuBM,iBAAiB,QAAU5C,IACrDA,EAAE8C,2BACFjC,KAAKyB,uBAAuBJ,QAAQS,SAAW,CAAEI,IAAK,KAAMC,GAAI,OAC9DnC,KAAKyB,uBAAuBJ,QAAQS,UAEtC9B,KAAKoC,iBAGPpC,KAAKqC,kBAAoBrC,KAAKsC,0BAChC,CAEAF,YAAAA,GACEpC,KAAKuC,SAASC,iBAChB,CAIAC,YAAAA,GACE,MAAMC,EAAUC,SAASC,cAAc,OAEvC,OADA5C,KAAKmB,KAAKU,OAAOa,GACVA,CACT,CAMAG,mBAAAA,CAAoBC,EAAeC,EAASjC,EAAe,MAQzD,OAPsB,IAAIkC,IAAJ,CACpBhD,KAAKuC,SACLvC,KACA8C,EACAC,EACAjC,EAGJ,CAOAmC,oBAAAA,CAAqBpC,EAAgBC,GAQnC,OAP2B,IAAIN,EAC7BR,KAAKuC,SACLvC,KACA,KACAa,EACAC,EAGJ,CAKAoC,OAAAA,GACE,MAAMrC,EAAiBsC,MAAMC,KAC3BpD,KAAK2B,WAAW0B,iBACd,6CAGJrD,KAAKW,WAAW2C,kBAAkBzC,EAAgBb,KAAKD,KACvDC,KAAKM,QACP,CAOAgD,iBAAAA,CAAkBzC,EAAgBC,GAChC,IAAK,MAAMyC,KAAQ1C,EACjBb,KAAK2B,WAAW6B,aAAaD,EAAMzC,EAEvC,CAMA2C,mBAAAA,CAAoB7B,GAClB5B,KAAK2B,WAAW+B,YAAY9B,EAAc7B,IAC5C,CAEAO,MAAAA,GACEN,KAAKqC,kBAAkBsB,aACvB3C,MAAMV,QACR,CAYAgC,wBAAAA,GACE,MAWMsB,EAAW,IAAIC,iBAVJ,SAAUC,GACzB,IAAK,MAAMC,KAAYD,EACrB,GAAsB,cAAlBC,EAASC,KAAsB,CACjC,MAAM1C,EAAgBtB,KAAKiE,eAC3BjE,KAAKmB,KAAKE,QAAQC,cAAgBA,GAE7BtB,KAAKoB,SAAWE,GAAiB,GAAGtB,KAAKkD,SAChD,CAEJ,EAC+ChD,KAAKF,OAEpD,OADA4D,EAASM,QAAQlE,KAAK2B,WAZP,CAAEwC,YAAY,EAAOC,WAAW,EAAMC,SAAS,IAavDT,CACT,CAIA,SAAIU,GACF,MAAMC,EAAWpB,MAAMC,KACrBpD,KAAK2B,WAAW0B,iBACd,6CAGJ,OAAQrD,KAAKiE,gBACX,KAAK,EACH,MAAO,CAAC,EACV,KAAK,EACH,OAAOM,EAAS,GAAGC,SAASF,MAC9B,QACE,MAAO,CACL,CAACtE,KAAKyB,uBAAuBJ,QAAQS,UAAWyC,EAAS5F,IACtD8F,GAAOA,EAAGD,SAASF,QAI9B,CAEA,aAAII,GACF,OAAO1E,KAAK2B,UACd,CAEA,cAAIgD,GACF,OAAOxB,MAAMC,KAAKpD,KAAK2B,WAAWiD,YAAYjG,IAAK8F,GAAOA,EAAGD,SAC/D,CAEA,kBAAIP,GACF,OAAOjE,KAAK2B,WAAW0B,iBACrB,4CACA9B,MACJ,E,cC1Ma,MAAMsD,EACnB/E,WAAAA,CAAY0E,EAAU9B,GACpB1C,KAAK8E,UAAYN,EAEjB9B,EAAQrC,UAAUE,IAAI,2BA+BtBmC,EAAQlB,UAAY,mGAKZ9B,OAAOD,KAAKsF,EAAAA,qBACXpG,IACC,CAACqG,EAAKC,IAAU,gFAC+CD,qBAC7DC,EAAQ,uBAEPF,EAAAA,oBAAoBC,GAAKE,qFAE5BD,EAAQ,0CAKTE,KAAK,0CA9CG,CACf,CACEC,QAAS,QACTF,MAAO,QACPG,SAAU,CAAC,KAEb,CACED,QAAS,UACTF,MAAO,UACPG,SAAU,CAAC,GAAI,KAYjB,CACED,QAAS,SACTF,MAAO,SACPG,SAAU,CAAC,MAyBF1G,IACRyG,GAAY,6CACqBA,EAAQA,yBAExCA,EAAQF,mEACoDI,OAAOC,gBAChEH,EAAQC,8CAIbF,KAAK,8BAQTzC,EAAQW,iBAAiB,YAAYmC,QAASJ,IAC5CA,EAAQrD,iBAAiB,QAAU5C,IAEjC,OADAA,EAAE8C,2BACMmD,EAAQ/D,QAAQ+D,SACtB,IAAK,gBACHpF,KAAK8E,UAAUW,aAAaL,EAAQ/D,QAAQqE,UAAWvG,EAAEwG,QACzD,MACF,IAAK,QACH3F,KAAK8E,UAAU5D,QACf,MACF,IAAK,UACHlB,KAAK8E,UAAU5B,UACf,MACF,IAAK,OACHlD,KAAK8E,UAAUc,OACf,MACF,IAAK,OACH5F,KAAK8E,UAAUe,OACf,MACF,IAAK,SACH7F,KAAK8E,UAAUgB,aAKzB,CAIAC,SAAAA,CAAUC,GACJA,EAAKhG,KAAKiG,cAAc5F,UAAUC,OAAO,aACxCN,KAAKiG,cAAc5F,UAAUE,IAAI,YACxC,E,cCzGa,MAAM2F,EAMnBpG,WAAAA,CAAYqG,EAAMzF,GAChBV,KAAKuC,SAAW7B,EAChBV,KAAKoG,eAAiB,IAAIC,EAAAA,EAAc,CACtCC,MAAO,iBACPC,WAAY,CAAC,8BACbC,YAAa,CACX,uIACA,uIAEFC,WAAY,CAAC,QACbC,QAAS,SACTC,UAAW,CAAEC,OAAO,KAEtB5G,KAAKoG,eAAeS,SA2CtB,CAIAC,0BAAAA,GACE,MAAMC,EAAe/G,KAAKoG,eAAeY,eACzC,GAAID,EAAaxF,OAAS,EAAG,CAE3B,MAAM0F,EAAa9D,MAAMC,KAAK2D,EAAa,GAAGG,WAAWtC,YACzDmC,EAAaI,KACX,CAACC,EAAKC,IAAQJ,EAAWK,QAAQF,GAAOH,EAAWK,QAAQD,GAE/D,CACA,OAAON,EAAapI,IAAK8F,GAAOA,EAAGD,SACrC,CAEA+C,qBAAAA,GACE,IAAK,MAAM9C,KAAMzE,KAAKoG,eAAeY,eACnCvC,EAAGD,SAASgD,WAEdxH,KAAKoG,eAAeqB,gBACtB,CAMAC,mBAAAA,CAAoB9F,EAAe+F,GAAoB,GACjDA,GAAmB3H,KAAKuH,wBAG5B,MAAMK,EAAyB5H,KAAK8G,6BAC9Be,EAAWjG,EAAckG,YAC/BF,EAAuBpC,QAASjC,KACM,IAAhCsE,EAASP,QAAQ/D,EAAKxD,MAAaC,KAAK+H,sBAAsBxE,KAGpE3B,EAAcoG,SACdhI,KAAKoG,eAAe4B,OAAOpG,EAAc7B,KACzCC,KAAKoG,eAAe6B,gBACpBjI,KAAKuC,SAAS2F,uBACZlI,KAAKoG,eAAeY,eAAerI,IAAK8F,GAAOA,EAAGD,UAEtD,CAEAuD,qBAAAA,CAAsBnG,GACpBA,EAAc4F,WACdxH,KAAKoG,eAAeoB,SAAS5F,EAAc7B,KAC3CC,KAAKuC,SAAS2F,uBACZlI,KAAKoG,eAAeY,eAAerI,IAAK8F,GAAOA,EAAGD,UAEtD,EC5Ga,MAAM2D,EACnBrI,WAAAA,CAAYC,GACVC,KAAKmB,KAAOpB,EACZC,KAAK2B,WAAa5B,EAAI2B,cAAc,mBACpC1B,KAAKoI,WAAa,IAAI5H,EAAmBR,KAAMA,KAAM,MAAO,GAAI,MAAM,GAGtEA,KAAKqI,SAAW,IAAIxD,EAClB7E,KACAA,KAAKoI,WAAW3F,gBAKlBzC,KAAKsI,gBAGLtI,KAAKuI,WAAa,IAAIrC,EAAwBlG,KAAKoI,WAAWrI,IAAKC,KACrE,CAYAkI,sBAAAA,CAAuBrH,GAErB,IAAI2H,GAAa,EACbC,GAAU,EACgB,IAA1B5H,EAAeU,SACjBiH,EAAa3H,EAAe,GAAGmD,OAAS/C,EAAAA,oBAAoBC,MAC5DuH,EAAU5H,EAAe,GAAGmD,OAAS/C,EAAAA,oBAAoByE,WAG3D1F,KAAKmB,KAAKE,QAAQqH,UAAY7H,EAAeU,OAAS,EAEtDvB,KAAKmB,KAAKE,QAAQsH,SAChB9H,EAAeU,OAAS,GACxBV,EAAe,GAAGiH,YAAYvG,OAASV,EAAeU,OAExDvB,KAAKmB,KAAKE,QAAQmH,WAAaA,EAE/BxI,KAAKmB,KAAKE,QAAQoH,QAAUA,CAG9B,CAcAjG,eAAAA,GACgBxC,KAAKoI,WAAW9D,MAC9BtE,KAAK4I,QACP,CAEA1H,KAAAA,GACE,MAAML,EAAiBb,KAAKuI,WAAWzB,6BACjC+B,EAAkBhI,EAAe,GAAGF,WAEpCmI,EAAeD,EAAgBlE,WACrC,IAAIoE,EAAWC,IACblI,EAAe,KACjBD,EAAe2E,QAASjC,IACtB,MAAM0B,EAAQ6D,EAAaxB,QAAQ/D,GAC/B0B,EAAQ8D,IACVA,EAAW9D,EACXnE,EAAeyC,EAAKxD,OAIxB,MAAMkJ,EAAqBJ,EAAgB5F,qBACzCpC,EACAC,GAEFd,KAAKuI,WAAWb,oBAAoBuB,GAAoB,GACxDjJ,KAAKwC,iBACP,CAEAU,OAAAA,GACE,MAAMrC,EAAiBb,KAAKuI,WAAWzB,6BAEvCjG,EAAe2E,QAAS5D,IACtB5B,KAAKuI,WAAWR,sBAAsBnG,KAGxCf,EAAe,GAAGqC,UAClBlD,KAAKwC,iBACP,CAkBAsD,OAAOoD,GACL,MAAMrI,EACJqI,GAASlJ,KAAKuI,WAAWzB,6BAC3B,IAAK,MAAMvD,KAAQ1C,EACjB0C,EAAKjD,SACLN,KAAKuI,WAAWR,sBAAsBxE,GAExCvD,KAAKwC,iBACP,CAEAoG,MAAAA,GACE,MAAMtE,EAAQtE,KAAKoI,WAAW9D,OAE9B6E,EAAAA,EAAAA,4BAA2B7E,EAC7B,CAGAmB,YAAAA,CAAa3C,EAAeC,GAE1B,MAAMqG,EACJpJ,KAAKuI,WAAWzB,6BACZuC,EACJD,EAAwB7H,OAAS,EAC7B6H,EAAwB,GACxBpJ,KAAKoI,WAMX,OAHApI,KAAKuI,WAAWhB,wBAGR8B,EAAuBrF,MAC7B,KAAK/C,EAAAA,oBAAoByE,UAEvB,MACF,KAAKzE,EAAAA,oBAAoBC,MACvBmI,EAAuBxG,oBAAoBC,EAAeC,GAGhE,CAIAuF,aAAAA,GACE,IAAIgB,EAAOC,EACXvJ,KAAKmB,KAAKY,iBAAiB,YAAc5C,KACtCmK,EAAOC,GAAS,CAACpK,EAAEqK,EAAGrK,EAAEsK,KAE3BzJ,KAAKmB,KAAKY,iBAAiB,QAAU5C,IAC/BuK,KAAKC,IAAIL,EAAQnK,EAAEqK,GAAK,GAAKE,KAAKC,IAAIJ,EAAQpK,EAAEsK,GAAK,IACzDtK,EAAE8C,2BACFjC,KAAKuI,WAAWhB,0BAEpB,CAIA,OAAIxH,GACF,OAAOC,KAAKmB,IACd,CAEA,aAAIuD,GACF,OAAO1E,KAAK2B,UACd,CAEA,aAAIiI,GACF,OAAO5J,KAAKuI,UACd,E,4FC3La,MAAMsB,EAMnB/J,WAAAA,CAAYC,EAAK+J,EAAInL,EAAKoL,GAExB/J,KAAKgK,IAAMF,EACX9J,KAAKiK,KAAOtL,EACZqB,KAAKmB,KAAOpB,EAEZC,KAAKmB,KAAKK,UAAY,sDAEFxB,KAAKgK,kPAWzBhK,KAAKkK,gBAAkBlK,KAAKmB,KAAKO,cAAc,4BAC/C1B,KAAKmK,eAAiBnK,KAAKmB,KAAKO,cAAc,2BAC9C1B,KAAKoK,gBAAkBpK,KAAKmB,KAAKO,cAAc,4BAG/C,MAAM2I,EAAS1L,EAAI2L,OAAO,CAACC,EAAKC,IACX,IAAfD,EAAIhJ,QAAgBgJ,EAAIA,EAAIhJ,OAAS,GAAGkJ,OAASD,EAAQC,MAC3DF,EAAIG,KAAK,CACPD,KAAMD,EAAQC,KACdE,MAAOH,EAAQG,MACfC,IAAKJ,EAAQI,MAERL,IAEPA,EAAIA,EAAIhJ,OAAS,GAAGqJ,IAAMJ,EAAQI,IAC3BL,GAER,IAGHvK,KAAK6K,QAAUlM,EAAIA,EAAI4C,OAAS,GAAGqJ,IACnC5K,KAAK8K,KAAO9K,KAAKmB,KAAKO,cAAc,kBACpC,MAIEqJ,GAHEhL,EAAIiL,aACJjL,EAAI2B,cAAc,UAAUsJ,aAC5BC,KACyCjL,KAAK6K,QAAUd,GAC1DmB,EAAOH,EAAmB/K,KAAK6K,QACjC7K,KAAK8K,KAAKK,MAAMC,OAAS,GAAGL,EAAmBE,OAC/C,IAAII,EAAO,o/DAgDX,IAAK,MAAMb,KAAWxK,KAAKiK,KACzBoB,GAAQ,2DAGOb,EAAQC,iCACJD,EAAQA,iCACXA,EAAQG,6BACVH,EAAQI,mCAEXJ,EAAQA,gEAEMA,EAAQc,6CAExB5B,KAAK6B,MArHJ,EAqHoBf,EAAQG,MAAQO,0BAChCxB,KAAK8B,MAAMhB,EAAQI,IAAMJ,EAAQG,OAASO,oDAO1D,IAAK,MAAMT,KAAQJ,EACjBgB,GAAQ,wDAGOZ,EAAKA,8BACJA,EAAKE,6BACPF,EAAKG,4CAnIT,EAqIEH,EAAKE,MAAQO,EAAO,4CAI3BT,EAAKG,IAAMH,EAAKE,OAASO,EAAO,GAAM,uBACnBT,EAAKA,wCACTA,EAAKG,IAAMH,EAAKE,OAASO,EAAO,QAAQxB,KAAK+B,OAC9DhB,EAAKG,IAAMH,EAAKE,OAASO,EAAO,8CAKrClL,KAAK8K,KAAKtJ,UAAY6J,EAAO,OAG7BpL,EAAAA,aAAaC,KAAK,gCAAiCF,MAGnDA,KAAKmB,KACFO,cAAc,yBACdK,iBAAiB,QAAS,KACzB/B,KAAK0L,YAAY1L,KAAKgK,IAAK,EAAGhK,KAAK6K,WAIvC7K,KAAK2L,UAAYxI,MAAMC,KAAKpD,KAAK8K,KAAKzH,iBAAiB,cACvDrD,KAAK2L,UAAUnG,QAASoG,IACtBA,EAAQ7J,iBAAiB,QAAS,KAChC/B,KAAK0L,YAAY1L,KAAKgK,IAAK4B,EAAQvK,QAAQsJ,MAAOiB,EAAQvK,QAAQuJ,SAKtE5K,KAAK6L,OAAS7L,KAAK8K,KAAKzH,iBAAiB,UACzCrD,KAAK6L,OAAOrG,QAASiF,IACnB,GAAIA,EAAKpJ,QAAQsJ,MAAO,CACtB,MAAOA,EAAOC,GAAO,EAAEH,EAAKpJ,QAAQsJ,OAAQF,EAAKpJ,QAAQuJ,KACnDkB,EAAmB9L,KAAK2L,UAAUI,OACrCH,GACCjB,IAAUiB,EAAQvK,QAAQsJ,QAAUiB,EAAQvK,QAAQuJ,KAAOA,GAE/DH,EAAK1I,iBAAiB,QAAS,KAC7B/B,KAAK0L,YAAY1L,KAAKgK,IAAKS,EAAKpJ,QAAQsJ,MAAOF,EAAKpJ,QAAQuJ,OAE9DH,EAAK1I,iBAAiB,aAAc,KAClC+J,EAAiBtG,QAASoG,GACxBA,EAAQvL,UAAUE,IAAI,aAG1BkK,EAAK1I,iBAAiB,aAAc,KAClC+J,EAAiBtG,QAASoG,GACxBA,EAAQvL,UAAUC,OAAO,YAG/B,IAGFN,KAAK8K,KAAKpJ,aACZ,CAEAgK,WAAAA,CAAYM,EAAKrB,EAAOC,GACtB,OAAQ3K,EAAAA,aAAagM,QAAQ,eAC3B,IAAK,UACHC,EAAAA,EAAAA,0BAAyB,OAAQ,GAAGF,KAAOrB,KAASC,KACpD,MACF,IAAK,WACHjI,SACGwJ,eAAe,6BACfzK,cACC,2IAED0K,cACC,IAAIC,YAAY,QAAS,CAAE1G,OAAQ,CAAEqG,MAAKrB,QAAOC,UAW3D,CAEA0B,6BAAAA,CAA8BC,GAC5B,GAAIA,EAAkBvM,KAAKgK,KAAM,CAE/BhK,KAAKmK,eAAe9J,UAAUE,IAAI,UAClC,MAAMiM,EAAgBD,EAAkBvM,KAAKgK,KAE3CkB,GADuBlL,KAAK8K,KAAK2B,aAAexB,IAClBjL,KAAK6K,QACnC6B,EAAeF,EAAc5B,IAAM4B,EAAc7B,MACnD3K,KAAKmK,eAAegB,MAAMwB,IAAM,GAAGjD,KAAK6B,MAlO9B,EAmOEiB,EAAc7B,MAAQO,OAElClL,KAAKmK,eAAegB,MAAMC,OAAS,GAAG1B,KAAK8B,KAAKkB,EAAexB,MACjE,MACElL,KAAKmK,eAAe9J,UAAUC,OAAO,SAEzC,CAEAsM,uBAAAA,CAAwBC,GACtB7M,KAAK2L,UAAUnG,QAASoG,IACtB,MAAOjB,EAAOC,GAAO,EAAEgB,EAAQvK,QAAQsJ,OAAQiB,EAAQvK,QAAQuJ,KAC/D,IAAIkC,EAAe,EACnBD,EAAUrH,QAASuD,IACjB+D,GAAgB9M,KAAK+M,cAAchE,EAAU,CAAC4B,EAAOC,MAEnDkC,EAAe,EAAGlB,EAAQvL,UAAUE,IAAI,aACvCqL,EAAQvL,UAAUC,OAAO,eAEhCN,KAAK6L,OAAOrG,QAASiF,IACnB,MAAOE,EAAOC,GAAO,EAAEH,EAAKpJ,QAAQsJ,OAAQF,EAAKpJ,QAAQuJ,KACzD,IAAIkC,EAAe,EACnBD,EAAUrH,QAASuD,IACjB+D,GAAgB9M,KAAK+M,cAAchE,EAAU,CAAC4B,EAAOC,MAEnDkC,EAAe,EAAGrC,EAAKpK,UAAUE,IAAI,aACpCkK,EAAKpK,UAAUC,OAAO,cAE/B,CAEAyM,aAAAA,CAAcC,EAAQC,GACpB,OAAOD,EAAO,IAAMC,EAAO,IAAMA,EAAO,IAAMD,EAAO,EAOvD,CAEA,MAAIlD,GACF,OAAO9J,KAAKgK,GACd,E,2CC/JF,UAvGA,MAIElK,WAAAA,CAAYoN,EAAYtL,GAEtB5B,KAAKmN,YAAcD,EAEnBlN,KAAKoN,eAAiBxL,EAEtB5B,KAAKqN,eAAiBzL,EAAckB,aACtC,CAOAwK,cAAAA,CAAeC,EAAWlC,GACxBrL,KAAKwN,IAAM7K,SAASC,cAAc,WAClC5C,KAAKwN,IAAInN,UAAUE,IAAIgN,GACvBvN,KAAKwN,IAAInM,QAAQyB,cAAgB9C,KAAKqN,eACtCrN,KAAKwN,IAAIhM,UAAY6J,EACrBrL,KAAKmN,YAAYM,SAAS5L,OAAO7B,KAAKwN,KACtCxN,KAAK0N,MAAQ1N,KAAKwN,IAAI9L,cAAc,iBACtC,CAUAiM,aAAAA,CAAcC,EAAO1I,EAAO2I,GAAS,EAAOC,GAAmB,GAC7D,MAAMC,EAAWF,EAAS,GAAK,gBAAgBD,MAC/C,IAAII,EAAYhO,KAAKiO,eAAevM,cAClC,4BAA4BqM,KAY9B,OATKC,IACHA,EAAYrL,SAASC,cAAc,6BACnCoL,EAAUlL,cAAgB9C,KAAKqN,eAC/BW,EAAUE,aAAeJ,EAEzB9N,KAAKiO,eAAepM,OAAOmM,IAE7BA,EAAU9I,MAAQA,EAClB8I,EAAUJ,MAAQA,EACXI,CACT,CAIAG,gBAAAA,GACEnO,KAAKoO,YAAY5I,QAASwI,IACxBA,EAAU1N,UAEd,CAKA+N,iBAAAA,CAAkBC,GAChBtO,KAAKoO,YAAY5I,QAASwI,IACxBA,EAAU1N,WAEZN,KAAKiO,eAAepM,UAAUyM,EAChC,CAKAC,gBAAAA,CAAiBX,GACf,MAAMG,EAAWH,EAAQ,gBAAgBA,MAAY,GAC/CI,EAAYhO,KAAKiO,eAAevM,cACpC,4BAA4BqM,KAE1BC,GACFA,EAAU1N,QAEd,CAMA,kBAAI2N,GACF,OAAOjO,KAAKmN,YAAYvL,cAAc4M,aACxC,CAKA,eAAIJ,GAIF,OAHmBjL,MAAMC,KACvBpD,KAAKiO,eAAe5K,iBAAiB,sCAGzC,E,yGC1Ga,MAAMoL,UAAuCC,EAAAA,QAI1D5O,WAAAA,CAAYoN,EAAYtL,GACtBZ,MAAMkM,EAAYtL,GAGlB,MAAM+M,EAAS5J,EAAAA,oBAAoB/E,KAAKqN,gBACxCrN,KAAKsN,eACH,yBACA,wBACetN,KAAKqN,4NAKQsB,EAAOC,OAChCjQ,IACEiP,GAAU,2BACGA,EAAMA,2FAIXA,EAAMA,iCACDA,EAAM1I,UAAU0I,EAAM1I,wCAIrCC,KAAK,wBAMkB,iBAAxBnF,KAAKqN,gBACPrN,KAAKwN,IAAI9L,cAAc,uBAAuBpB,SAIhDN,KAAK6O,YAAc1L,MAAMC,KACvBpD,KAAKwN,IAAInK,iBAAiB,qCAI5BrD,KAAK6O,YAAYrJ,QAASsJ,IACxBA,EAAS/M,iBAAiB,SAAU,KAClC/B,KAAK+O,cAGT/O,KAAKwN,IACFnK,iBAAiB,8BACjBmC,QAAQ,CAACwJ,EAAQ/J,KAChB+J,EAAOjN,iBAAiB,QAAS,KAC/B/B,KAAK6O,YAAYrJ,QAASsJ,GAAcA,EAASG,SAAWhK,GAC5DjF,KAAK+O,aAGb,CAIAG,cAAAA,GACElP,KAAKmP,YAAchM,MAAMC,KACvBpD,KAAKmN,YAAYvL,cAAc4M,cAAcnL,iBAC3C,uCAEF1E,IAAKiP,GAAUA,EAAMA,MACzB,CAEAwB,OAAAA,GACEpP,KAAK6O,YAAYrJ,QAASsJ,IACxB,MAAMlB,EAAQ5N,KAAKmP,YAAYE,KAAMzB,GAAUA,IAAUkB,EAASlB,OAClEkB,EAASG,aAAoBK,IAAV1B,IAErB5N,KAAK+O,SACP,CAEA,WAAIQ,GACF,OAAOvP,KAAK6O,YAAYW,KAAMV,GAAaA,EAASG,QACtD,CAIAF,OAAAA,GAEE/O,KAAK6O,YAAYrJ,QAASsJ,IACpBA,EAASG,QACXjP,KAAK2N,cAAcmB,EAASlB,MAAOkB,EAASzN,QAAQ6D,OAEpDlF,KAAKuO,iBAAiBO,EAASlB,SAKnC5N,KAAKmN,YAAYsC,OAAOzP,KAAK0P,YAC/B,CAEAA,SAAAA,GACE,OAAO1P,KAAKuP,OACd,E,mHCpGF,MAAMI,EAA+B,CACnCC,aAAa,EACbC,SAAS,GAGAC,EAAAA,QAII,MAAMC,UAAoCrB,EAAAA,QAIvD5O,WAAAA,CAAYoN,EAAYtL,GACtBZ,MAAMkM,EAAYtL,GAElB5B,KAAKgQ,MAAQhQ,KAAKiQ,eAClBjQ,KAAKkQ,2BACHP,EAA6B3P,KAAKqN,gBAGpCrN,KAAKsN,eACH,sBACA,wBACetN,KAAKqN,yIAMtBrN,KAAKmQ,SAAWnQ,KAAK0N,MAAMhM,cAAc,qBACzC1B,KAAKoQ,aAAepQ,KAAK0N,MAAMhM,cAAc,yBAC7C1B,KAAKqQ,aACP,CAIAnB,cAAAA,GACElP,KAAKmP,YAAcnP,KAAKgQ,MACrBjE,OAAQuE,GAAUA,EAAM1C,OAAS0C,EAAMrB,SACvCtQ,IAAK2R,GAAUA,EAAM1C,MAC1B,CAEAwB,OAAAA,GACEpP,KAAKgQ,MAAMxK,QACR8K,GAAWA,EAAMrB,SAAqD,IAA3CjP,KAAKmP,YAAY7H,QAAQgJ,EAAM1C,QAE7D5N,KAAK+O,SACP,CAEA,WAAIQ,GACF,OAAOvP,KAAKoO,YAAY7M,OAAS,CACnC,CAIA0O,YAAAA,GACE,OAAQjQ,KAAKqN,gBACX,KAAKkD,EAAAA,eAAeX,YACpB,KAAKW,EAAAA,eAAelP,QAClB,OAAO0D,EAAAA,oBAAoB/E,KAAKqN,gBAAgBuB,OAAOjQ,IAAKiP,GAC1DlO,OAAO8Q,OAAO,CAAEvB,SAAS,GAASrB,IAEtC,KAAK2C,EAAAA,eAAeV,QAClB,MAAO,GAEb,CAEAQ,WAAAA,CAAYI,GACVzQ,KAAK0Q,UAAUD,GAAUvR,KAAMyR,IAE7B,MAAMC,EAASjO,SAASC,cAAc,OACtCgO,EAAOvQ,UAAUE,IAAI,UACrBqQ,EAAOvP,QAAQwP,MACb7Q,KAAKmQ,SAAS9M,iBAAiB,oBAAoB9B,OACrDvB,KAAKmQ,SAAStO,OAAO+O,GACrBA,EAAOpP,UAAY,6BAEbmP,EACChS,IAAKmS,GACG,sBACLA,EAAKvR,GAAK,YAAYuR,EAAKvR,MAAQ,qBACnCuR,EAAKlD,MAAQ,eAAekD,EAAKlD,SAAW,qBAC5CkD,EAAKC,OAAS,gBAAgBD,EAAKC,UAAY,sGAK7C/Q,KAAKqN,iBAAmBkD,EAAAA,eAAelP,QACnC,4CAA4CyP,EAAKlD,iBACjD,6BAEEkD,EAAK5L,4DAGKoK,IAAlBwB,EAAKvM,SACD,GACA,+BAA+BuM,EAAKvR,mCAI3C4F,KAAK,qBAKZ,IAAK,MAAM2L,KAAQF,EAAOvN,iBACxB,oCAEAyN,EAAK/O,iBAAiB,SAAW5C,IAE/B,MAAM6R,EAAK7R,EAAE8R,OAAOC,QAAQ,MACtBZ,EAAQtQ,KAAKgQ,MAAMX,KAAMiB,GAAUA,EAAM/Q,IAAMyR,EAAG3P,QAAQ9B,IAChE+Q,EAAMrB,QAAU9P,EAAE8R,OAAOhC,QAErBqB,EAAM/L,UAAUvE,KAAKmR,gBAAgBb,EAAM/Q,GAAIJ,EAAE8R,OAAOhC,SAC5DjP,KAAK+O,QAAQuB,EAAM/Q,MAIvB,IAAK,MAAMuR,KAAQF,EAAOvN,iBAAiB,6BACzCyN,EAAK/O,iBAAiB,QAAU5C,IAC9B,MAAM2R,EAAO3R,EAAE8R,OAAOC,QAAQ,MAE9BJ,EAAK5J,WACFxF,cAAc,wBACbrB,UAAUC,OAAO,aACrB,MAAMuQ,EAAQO,SAASN,EAAKI,QAAQ,WAAW7P,QAAQwP,OACvD,IAAK,MAAMD,KAAUE,EAClBI,QAAQ,YACR7N,iBAAiB,oBACd+N,SAASR,EAAOvP,QAAQwP,OAASA,GACnCD,EAAO1J,WAAWxD,YAAYkN,GAGlCE,EAAKzQ,UAAUE,IAAI,aACnBP,KAAKqQ,aAAalR,EAAE8R,OAAO5P,QAAQ9B,MAGvCS,KAAK+O,UAGL,MAAMsC,EAAOrR,KAAK0N,MAAM4D,YAActR,KAAK0N,MAAM6D,YAC7CF,EAAO,GACTrR,KAAK0N,MAAM8D,SAAS,CAClB7E,IAAK,EACL0E,KAAMA,EACNI,SAAU,YAIlB,CAEAf,SAAAA,CAAUD,GACR,OAAO,IAAIzR,QAAQ,CAACC,EAASyS,KAE3B,GAAQ1R,KAAKqN,iBACNkD,EAAAA,eAAeX,YAClB3Q,EAAQe,KAAKgQ,MAAMjE,OAAQuE,GAAUA,EAAMS,SAAWN,SAGtDiB,EAAO,IAAItS,MAAM,mDAGzB,CAEA+R,eAAAA,CAAgB5R,EAAI0P,GAElB,IAAKjP,KAAKkQ,2BAA4B,OACrBlQ,KAAKgQ,MAAMjE,OAAQuE,GAAUA,EAAMS,QAAUxR,GACrDiG,QAASmM,IAChBA,EAAM1C,QAAUA,EAChBjP,KAAKmR,gBAAgBQ,EAAMpS,GAAI0P,IAEnC,CAEA2C,oBAAAA,GAGE,MAAMC,EAAevB,IACnB,IAAKA,EAAM/L,UAAsC,IAA1B+L,EAAM/L,SAAShD,OAAc,OACpD,IASI0N,EAAS6C,EATTC,EAAkB,EAUtB,OATAzB,EAAM/L,SAASiB,QAASmM,IACtB,MAAMK,EAAahS,KAAKgQ,MAAMX,KAAMiB,GAAUA,EAAM/Q,KAAOoS,GACvDK,EAAWzN,SACbwN,GAAmBF,EAAYG,GAE/BD,GAAmBC,EAAW/C,WAI1B,GACN,KAAyB,IAApB8C,EACH9C,GAAU,EACV6C,GAAgB,EAChB,MACF,KAAKC,IAAoBzB,EAAM/L,SAAShD,OACtC0N,GAAU,EACV6C,GAAgB,EAChB,MACF,QACE7C,GAAU,EACV6C,GAAgB,EAGpB,MAAMhD,EAAW9O,KAAKmQ,SAASzO,cAC7B,eAAe4O,EAAM/Q,wBAMvB,OAJIuP,IACFA,EAASG,QAAUA,EACnBH,EAASgD,cAAgBA,GAEpB7C,GAAW6C,GAIE9R,KAAKgQ,MAAMjE,OAC9BuE,QAA2BhB,IAAjBgB,EAAMS,QAELvL,QAAS8K,GAAUuB,EAAYvB,GAC/C,CAEAvB,OAAAA,GAEE/O,KAAKgQ,MAAMxK,QAAS8K,IAClB,MAAMxB,EAAW9O,KAAKmQ,SAASzO,cAC7B,eAAe4O,EAAM/Q,wBAEnBuP,IAAUA,EAASG,QAAUqB,EAAMrB,WAGzCjP,KAAK4R,uBAGL5R,KAAKgQ,MAAMxK,QAAS8K,IACbA,EAAM1C,QACP0C,EAAMrB,QACRjP,KAAK2N,cAAc2C,EAAM1C,MAAO0C,EAAMpL,OAEtClF,KAAKuO,iBAAiB+B,EAAM1C,UAKhC5N,KAAKmN,YAAYsC,OAAOzP,KAAK0P,YAC/B,CAEAA,SAAAA,GACE,OAAO1P,KAAKuP,OACd,E,yGC3PK,MAAM0C,UAAmBC,EAAAA,WAQ9B,iBAAOC,GACL,MAAO,CACLC,YAAa,CAAEpO,KAAMsB,QAEzB,CAEAxF,WAAAA,GACEkB,SAASqR,WACTrS,KAAKsS,aAAe,EACtB,CAEAC,MAAAA,GACE,OAAOlH,EAAAA,IAAI;;aAEFrL,KAAKsS;;KAGhB,EAzBWL,EACJO,OAASC,EAAAA,GAAG;;;;;IA2BrBC,eAAeC,OAAO,cAAeV,G,kCC3BrC,MAAMW,EAAoB,IAAIC,IAC9B,MAAMC,UAAaC,EAAAA,eAAejT,WAAAA,IAAAkT,GAAA,SAAAA,GAAA,KAChCjC,YAAM,OACNkC,aAAO,OACPC,kBAAY,OACZ3T,QAAE,OACF4T,KAAO,GAAE,KACTC,WAAa,IAAI,CAEjBb,MAAAA,GACE,OAAOc,EAAAA,OACT,CAEA5D,MAAAA,CACE6D,IAEE,GACE/T,EAAc,KACd4T,EAAO,GAAE,QACTpQ,EAAU,CAAC,EAAC,OACZwQ,EAAkB,iBAClBC,EAAmB,MACjB,CAAC,IAyCP,OAtCAxT,KAAKT,GAAKA,EACVS,KAAKmT,KAAOA,EACZnT,KAAKuT,OAASA,EACdvT,KAAKwT,iBAAmBA,EAGR,SAAdxT,KAAKmT,MACLnT,KAAKT,KAAOS,KAAKuT,QACL,kBAAZvT,KAAKT,IACO,UAAZS,KAAKT,KAGLqT,EAAkBa,IAAIzT,KAAKT,GAAI+T,EAAKL,QAAQS,yBAC5C1T,KAAKM,UAGW,SAAdN,KAAKmT,MAAoBP,EAAkBe,IAAI3T,KAAKT,KACtDqT,EAAkBa,IAAIzT,KAAKT,GAAI,CAAEkK,EAAG,EAAGD,EAAG,EAAGoK,MAAO,EAAGxI,OAAQ,IAGjEpL,KAAK+C,QAAU,IACV/C,KAAK+C,WACLA,GAGD/C,KAAKiT,UAAYK,EAAKL,UACxBjT,KAAKiT,QAAUK,EAAKL,QAEpBjT,KAAK+Q,OACH/Q,KAAKiT,QAAQY,eACb7T,KAAKiT,QAAQa,cAAcpS,cAAc,YAGzC1B,KAAKkT,eACPlT,KAAKkT,aAAelT,KAAKiT,QAAQS,yBAGnC1U,QAAQC,UAAUC,KAAK,IAAMc,KAAK+T,iBAC3BC,EAAAA,QACT,CAEAD,aAAAA,GACO/T,KAAKkT,eACRlT,KAAKkT,aAAeN,EAAkBe,IAAI3T,KAAKT,IAC3CqT,EAAkBqB,IAAIjU,KAAKT,IAC3BS,KAAKiT,QAAQS,wBACjBd,EAAkB9M,OAAO9F,KAAKT,KAGhCS,KAAKkU,MACP,CAEAA,IAAAA,CAAKC,EAAUC,GACb,IAAIC,EAAWrU,KAAKkT,aAEhBlT,KAAKT,KAAOS,KAAKuT,SACnBc,EAAWrU,KAAKwT,kBAGlBxT,KAAKkT,aAAelT,KAAKiT,QAAQS,wBAEjC,MAAMY,GAAUD,GAAU5K,GAAK,IAAMzJ,KAAKkT,cAAczJ,GAAK,GAE7D,IAAK6K,IAAWF,EACd,OAGF,MAAMG,EAAoBC,IACpBA,EAAMvD,SAAWjR,KAAKiT,UACxBkB,EAASK,GACTxU,KAAKiT,QAAQwB,oBAAoB,gBAAiBF,KAItDvU,KAAKiT,QAAQlR,iBAAiB,gBAAiBwS,GAE/CvU,KAAKiT,QAAQyB,QACX,CACE,CACEC,UAAW,gBAAgBL,QAE7B,CACEK,UAAW,mBAGf3U,KAAK+C,QAGT,CAEAzC,MAAAA,GACEN,KAAKiT,QAAQyB,QACX,CACE,CACEE,QAAS,EAETD,UAAW,iBAEb,CACEC,QAAS,EAETD,UAAW,cACT3U,KAAKiT,QAAQS,wBAAwBjK,EAAI,WAI/CzJ,KAAK+C,SACL8R,SAAW,KACPjC,EAAkBe,IAAI3T,KAAKT,KAC7BqT,EAAkB9M,OAAO9F,KAAKT,IAEhCS,KAAKiT,QAAQ3S,SAEjB,CAEAwU,YAAAA,GACoB,SAAd9U,KAAKmT,MACPnT,KAAKM,SAGPN,KAAKkT,aAAelT,KAAKiT,QAAQS,6BACV,IAAZ1T,KAAKT,KACdqT,EAAkBa,IAAIzT,KAAKT,GAAIS,KAAKkT,cACpC6B,sBAAsB,KAChBnC,EAAkBe,IAAI3T,KAAKT,KAC7BS,KAAKM,WAIb,EAGK,MAAM4T,GAAOc,EAAAA,EAAAA,WAAUlC,GC7JxBmC,EAAW,CACf1V,GAAI,CACF2V,KAAM,QACNC,KAAM,mCAERC,IAAK,CACHF,KAAM,SACNC,KAAM,yCAIH,MAAME,UAAqBnD,EAAAA,WAChC,qBAAWC,GACT,MAAO,CACLmD,KAAM,CAAEtR,KAAMtE,OAAQ6V,OAAO,GAC7BC,OAAQ,CAAExR,KAAMyR,QAASC,WAAW,GACpCnW,GAAI,CAAEyE,KAAMsB,OAAQoQ,WAAW,EAAMC,SAAS,GAC9CC,KAAM,CACJ5R,KAAMsB,OACNiQ,OAAO,GAETM,MAAO,CACL7R,KAAMsB,OACNiQ,OAAO,GAETO,SAAU,CACR9R,KAAMtE,OACN6V,OAAO,GAGb,CAEAQ,YAAAA,GAME,MALqB,UAAjB/V,KAAKsV,KAAK/V,GACZS,KAAKwV,QAAS,EAEdxV,KAAKwV,QAAS,GAET,CACT,CAEA1V,WAAAA,GACEkB,QACAhB,KAAKsV,KAAO,CAAC,EACbtV,KAAKwV,QAAS,EACdxV,KAAK4V,KAAO,GACZ5V,KAAK6V,MAAQ,GACb7V,KAAK8V,SAAW,CAAEtM,EAAG,EAAGC,EAAG,EAAGmK,MAAO,EAAGxI,OAAQ,GAChDpL,KAAKgW,UAAY,CAAC,QAAS,WAAY,UAAW,OAAQ,QAC1DhW,KAAKiW,SAAUC,EAAAA,EAAAA,aACflW,KAAKmW,gBAAkBD,EAAAA,UACvBlW,KAAKoW,uBAAyB,GAC9BpW,KAAKqW,wBAA0B,EACjC,CAgQAC,UAAAA,CAAWC,GACS,SAAdvW,KAAK4V,KACH5V,KAAKsV,KAAKkB,KACZxW,KAAKoW,uBAAyB,cACrBpW,KAAKsV,KAAKmB,OAGnBzW,KAAKoW,uBAAyB,cAF9BpW,KAAKqW,wBAA0B,eAKV,aAAdrW,KAAK4V,KACd5V,KAAKoW,uBAAyB,IAAIpW,KAAK4V,QAAQ5V,KAAK6V,QAC7B,YAAd7V,KAAK4V,OACd5V,KAAKqW,wBAA0B,IAAIrW,KAAK4V,QAAQ5V,KAAK6V,SAGvD7V,KAAK0W,SAAWH,EAAWtC,IAAI,QACV,UAAjBjU,KAAKsV,KAAK/V,KACZS,KAAKoW,uBAAyB,GAC9BpW,KAAKqW,wBAA0B,GAEnC,CAEAM,OAAAA,GACE,MAAMC,EAAY,CAChBC,SAAU,IACVC,OAAQ,YAGV,GAAkB,SAAd9W,KAAK4V,KAAiB,CACxB,IAAImB,EAAY,CACd,CACE3L,OAAQ,GAAGpL,KAAK8V,UAAU1K,QAAU,MACpC4L,SAAU,UAEZ,CACE5L,OAAQ,GACNpL,KAAKiW,SAASrI,MAAM8F,wBAAwBtI,QAAU,QAK5D2L,EAAU,GAAGE,gBAAkBjX,KAAKkX,eACpCH,EAAU,GAAGE,gBAAkBjX,KAAKmX,gBAEpCnX,KAAKiW,QAAQrI,MAAM8G,QAAQqC,EAAWH,EACxC,CACF,CAEAQ,YAAAA,GACEpX,KAAKkX,eAAiBG,iBAAiBrX,KAAKiW,QAAQrI,OAAO0J,iBACzD,sBAEFtX,KAAKmX,gBAAkBE,iBACrBrX,KAAKiW,QAAQrI,OACb0J,iBAAiB,sBACrB,CAEA/E,MAAAA,GACE,OAAOlH,EAAAA,IAAI;;gCAEiBrL,KAAKoW;;aAEzBmB,EAAAA,EAAAA,KAAIvX,KAAKiW;iCACYjW,KAAKwV,OAAS,SAAW,MAChD,SADsDxV,KAAK4V,KAEvD,WACA;;;kBAGI5V,KAAKsV,MAAMpQ,OAAS;cACV,SAAdlF,KAAK4V,KACHvK,EAAAA,IAAI;;;;0BAIM3L,OAAOD,KAAKO,KAAKsV,MAChBvJ,OAAQ/G,IAAShF,KAAKgW,UAAUwB,SAASxS,IACzCrG,IAAKqG,GACGqG,EAAAA,IAAI;;kDAEW4J,EAASjQ,GAAKkQ;;;;4CAIpBD,EAASjQ,GAAKmQ,OAAOnV,KAAKsV,KAChCtQ;;uCAGChF,KAAKsV,KAAKtQ;;;;;;;;kBAUjCqO,EAAAA;;;gCAGgBrT,KAAKqW;;KAGnC,EAnZWhB,EA4CJ7C,OAASC,EAAAA,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0WrBC,eAAeC,OAAO,gBAAiB0C,GC5ZxB,MAAMoC,UAAevF,EAAAA,WAsBlC,qBAAWC,GACT,MAAO,CACLuF,MAAO,CAAE1T,KAAMb,MAAOoS,OAAO,GAC7BpC,KAAM,CAAEnP,KAAMsB,OAAQiQ,OAAO,GAC7BhC,OAAQ,CACNvP,KAAMsB,OACNiQ,OAAO,GAET/B,iBAAkB,CAAExP,KAAMtE,OAAQ6V,OAAO,GACzCoC,iBAAkB,CAAE3T,KAAMtE,OAAQ6V,OAAO,GAE7C,CACAzV,WAAAA,GACEkB,QACAhB,KAAK0X,MAAQ,GACb1X,KAAKuT,YAASjE,EACdtP,KAAKmT,KAAO,GACZnT,KAAKwT,iBAAmB,KACxBxT,KAAK2X,iBAAmB,CAAC,CAC3B,CAEAC,YAAAA,CAAazY,GACc,kBAArBA,EAAE8R,OAAO4G,SAIX7X,KAAKoM,cACH,IAAIC,YAAY,eAAgB,CAC9B1G,OAAQ,CACNpG,GAAIJ,EAAE8R,OAAO1R,GACb4T,KAAMnT,KAAKmT,KACX2E,KAAM3Y,EAAE8R,OAAOyC,yBAEjBqE,SAAS,EACTC,UAAU,IAIlB,CAEAzF,MAAAA,GACE,OAAOlH,EAAAA,IAAI;;;kBAGwB,UAArBrL,KAAK0X,MAAM,GAAGnY,GAAiB,KAAOS,KAAK4X;;UAEnD5X,KAAK0X,MAAMnW,OACT8J,EAAAA,IAAI;iBACA4M,EAAAA,EAAAA,GACAjY,KAAK0X,MACJQ,GAASA,EAAK3Y,GACf,CAAC2Y,EAAMjT,IACEoG,EAAAA,IAAI;2BACF6M,EAAK3Y;0BACN2Y,EAAK3Y;4BACH2Y;4BACAlY,KAAKmT;gCACDnT,KAAKwT;6BACc,IAAtBxT,KAAK0X,MAAMnW,OAChB,SACU,IAAV0D,EACA,QACAA,IAAUjF,KAAK0X,MAAMnW,OAAS,EAC9B,OACA;sBACF2S,EAAK,CACL3U,GAAI2Y,EAAK3Y,GACTgU,OAAQvT,KAAKuT,OACbJ,KAAMnT,KAAKmT,KACXK,iBAAkBxT,KAAKwT,iBACvBzQ,QAAS/C,KAAK2X;;cAMxBtE,EAAAA;;KAGV,EArGmBoE,EACZjF,OAASC,EAAAA,GAAG;;;;;;;;;;;;;;;;;;;IAuGrBC,eAAeC,OAAO,kBAAmB8E,G,uBCpGzC,MAAMU,UAAkBjG,EAAAA,WA6CtBpS,WAAAA,GACEkB,QAAQ,KA7CVoX,SAAUlC,EAAAA,EAAAA,aAAW,KACrBmC,SAAUnC,EAAAA,EAAAA,aAAW,KACrBoC,SAAUpC,EAAAA,EAAAA,aAAW,KACrBqC,SAAW,GAAE,KACbC,UAAY,EAAC,KACbC,WAAa,EAAC,KACdC,UAAY,EAAC,KACbC,IAAM,EAAC,KACPjE,QAAU,KAAI,KACdkE,aAAe,KAAI,KACnBC,IAAM,IAAIC,EAAAA,YAAY,GAAGhJ,EAAAA,uBAAsB,KAC/CiJ,YAAc,CACZC,SAAU,GACVC,QAAS,GACTC,KAAM,GACN3U,SAAU,GACV4U,UAAW,IACZ,KACDxB,iBAAmB,CACjBd,SAAU,IACVC,OAAQ,eA0BR9W,KAAKoZ,IAAM,GACXpZ,KAAKmQ,SAAW,CAAC,UAAW,OAAQ,YACpCnQ,KAAKsV,KAAO,CAAC,CACf,CAEA,qBAAWnD,GACT,MAAO,CACLmD,KAAM,CAAEtR,KAAMtE,OAAQ6V,OAAO,GAC7B6D,IAAK,CAAEpV,KAAMsB,OAAQoQ,UAAW,MAChCvF,SAAU,CACRnM,KAAMb,MACNoS,OAAO,GAGb,CAEA,OAAI6D,CAAI7Z,GACFS,KAAKsV,MAAM/V,KAAOA,IACpBS,KAAKqZ,kBACLrZ,KAAK6Y,IAAI5E,IAAI,iBAAiB1U,KAAML,KAAK,EAAGoW,WAC1CtV,KAAKsV,KAAOA,EAEZtV,KAAKsZ,kBAGX,CAEAhD,UAAAA,CAAWiD,GACT,GAAIA,EAAkB5F,IAAI,SACpB4F,EAAkBtF,IAAI,SACpBjU,KAAKsV,KAAK/V,IAAMga,EAAkBtF,IAAI,QAAQ1U,KAAOS,KAAKsV,KAAK/V,GAAI,CAQrE,GANAS,KAAK+Y,YAAYC,SAAWO,EAAkBtF,IAAI,SAC9CgF,SAAW,CAAC,CAAE1Z,GAAI,QAAS2F,MAAO,UAEtClF,KAAK+Y,YAAYI,UAAYI,EAAkBtF,IAAI,SAC/C1P,UAAY,CAAC,CAAEhF,GAAI,QAAS2F,MAAO,UAEV,IAAzBlF,KAAKmQ,SAAS5O,OAAc,CAC9B,IAAIgX,EAEFA,EADEvY,KAAKmQ,SAASqH,SAAS,YACd,OACFxX,KAAKmQ,SAASqH,SAAS,aACrB,QAEA,GAII,SAAbe,EACFvY,KAAK+Y,YAAYG,KAAOlZ,KAAK+Y,YAAYI,UACnB,UAAbZ,IACTvY,KAAK+Y,YAAYG,KAAOlZ,KAAK+Y,YAAYC,SAE7C,MACEhZ,KAAK+Y,YAAYG,KAAO,CAAClZ,KAAKsV,MAIhCtV,KAAK+Y,YAAYE,QAAUjZ,KAAKsV,MAAM2D,SAAW,GAEjDjZ,KAAK+Y,YAAYxU,SAAWvE,KAAKsV,MAAM/Q,UAAY,EACrD,CAGAgV,EAAkB5F,IAAI,cACxB3T,KAAK0Y,UACH1Y,KAAKsY,QAAQ1K,OAAO8F,wBAAwBE,OACzC5T,KAAKsY,QAAQ1K,OAAO8F,wBAAwB8F,MAC3CxZ,KAAKqY,QAAQzK,OAAO8F,wBAAwB8F,QAAU,EAC5DxZ,KAAK2Y,KACF3Y,KAAKqY,QAAQzK,OAAO8F,wBAAwBE,MAC1B,EAAjB5T,KAAK0Y,WACP,EAEF1Y,KAAKwY,UACsB,IAAzBxY,KAAKmQ,SAAS5O,OACVvB,KAAK0Y,UAAY1Y,KAAKmQ,SAAS5O,QAC9BvB,KAAKmQ,SAAS5O,OAAS,GAAKvB,KAAK2Y,IAClC,KACA,OAEN3Y,KAAKyY,WAAazY,KAAK0Y,UAAY1Y,KAAK2Y,IAE5C,CAEAvB,YAAAA,GACEpX,KAAK6Y,IAAI5E,IAAI,iBAAiBjU,KAAKoZ,OAAOla,KAAK,EAAGoW,WAChDtV,KAAKsV,KAAOA,GAEhB,CAEA+D,eAAAA,GACErZ,KAAKoM,cACH,IAAIC,YAAY,kBAAmB,CAAE0L,SAAS,EAAMC,UAAU,IAElE,CAEAsB,aAAAA,GACMtZ,KAAKsV,KAAK/V,IACZS,KAAKoM,cACH,IAAIC,YAAY,mBAAoB,CAClC1G,OAAQ,CACNpG,GAAIS,KAAKsV,KAAK/V,GACd2F,MAAOlF,KAAKsV,KAAKpQ,MAAM,GAAGuU,cAAgBzZ,KAAKsV,KAAKpQ,MAAMwU,MAAM,IAElE3B,SAAS,EACTC,UAAU,KAKhBhY,KAAKoM,cACH,IAAIC,YAAY,gBAAiB,CAAE0L,SAAS,EAAMC,UAAU,IAEhE,CAEAJ,YAAAA,CAAazY,GACY,YAAnBA,EAAE8R,QAAQkC,MAAyC,aAAnBhU,EAAE8R,QAAQkC,OAC5CnT,KAAK4Y,aAAezZ,EAAEwG,QAAQmS,MAAQ,KAEtC9X,KAAKqZ,kBAELrZ,KAAK6Y,IAAI5E,IAAI,iBAAiB9U,EAAEwG,OAAOpG,MAAML,KAAK,EAAGoW,WACnDtV,KAAKsV,KAAOA,EACZtV,KAAKsZ,gBACLtZ,KAAK2Z,eAAeza,KAAK,KACD,aAAlBC,EAAEwG,OAAOwN,MACXnT,KAAKuY,SAAW,OAEhBvY,KAAKmQ,SAAW,CAAC,WAAY,UAAW,OAAQ,aACrB,YAAlBhR,EAAEwG,OAAOwN,OAClBnT,KAAKuY,SAAW,QAEhBvY,KAAKmQ,SAAW,CAAC,UAAW,OAAQ,WAAY,kBAK1D,CAEAwG,OAAAA,GACwB,SAAlB3W,KAAKuY,SACPvY,KAAK0U,QAAU1U,KAAKoY,QAAQxK,MAAM8G,QAChC,CACE,CAAEC,UAAW,iBACb,CACEA,UAAW,eAAe3U,KAAKyY,kBAGnCzY,KAAK2X,kBAEoB,UAAlB3X,KAAKuY,WACdvY,KAAK0U,QAAU1U,KAAKoY,QAAQxK,MAAM8G,QAChC,CACE,CACEC,UAAW,eAAe3U,KAAKyY,iBAEjC,CAAE9D,UAAW,kBAEf3U,KAAK2X,mBAIL3X,KAAK0U,UACP1U,KAAK0U,QAAQG,SAAW,KACtB7U,KAAKuY,SAAW,GAChBvY,KAAKmQ,SAAW,CAAC,UAAW,OAAQ,YACpCnQ,KAAK0U,QAAU,MAGrB,CAEAnC,MAAAA,GACE,OAAOlH,EAAAA,IAAI;2BACWkM,EAAAA,EAAAA,KAAIvX,KAAKqY;;;2BAGRrY,KAAK4X;0BACN5X,KAAKwY;aACnBjB,EAAAA,EAAAA,KAAIvX,KAAKoY;;aAETH,EAAAA,EAAAA,GACAjY,KAAKmQ,SACJS,GAAWA,EACXA,GACQvF,EAAAA,IAAI;;2BAEEuF;4BACC5Q,KAAK+Y,YAAYnI,GAAQrP,OAC/BvB,KAAK+Y,YAAYnI,GACjB,CAAC,CAAErR,GAAI,QAAS2F,MAAO;qBACzBqS,EAAAA,EAAAA,KAAIvX,KAAKsY;6BACW,SAAX1H,EAAoB5Q,KAAKsV,KAAK/V,QAAK+P;uCACzBtP,KAAK4Y;uCACL5Y,KAAK2X;;;;;KAQ1C,EA1PIQ,EAwBG3F,OAASC,EAAAA,GAAG;;;;;;;;;;;;;;;;;;;IAqOrBC,eAAeC,OAAO,kCAAmCwF,G,QClQzD,MAAMyB,EAAa,GAAG9J,EAAAA,6BAEf,MAAM+J,UAA+B3H,EAAAA,WAG1C,qBAAWC,GACT,MAAO,CACL2H,UAAW,CACT9V,KAAMsB,OACNqQ,SAAS,GAEXL,KAAM,CAAEC,OAAO,GACfwE,QAAS,CAAE/V,KAAMyR,QAASF,OAAO,GAErC,CAEAzV,WAAAA,CAAY2E,GACVzD,QAAQ,KAdVgZ,OAAS,KAePvV,EAAGwV,YAAYja,MAEfA,KAAKiO,eAAiBxJ,EAAGoP,cAAcnS,cACrC,+BAGF1B,KAAKsV,KAAO,GACZtV,KAAK8Z,UAAY,gBACjB9Z,KAAK+Z,SAAU,CACjB,CAEAG,0BAAAA,CAA2B/a,GACzBA,EAAEgb,kBACFna,KAAK8Z,UAAY3a,EAAEwG,OAAOpG,GAC1BS,KAAKoM,cACH,IAAIC,YAAY,mBAAoB,CAClC1G,OAAQ,CACNpG,GAAIJ,EAAEwG,OAAOpG,GACb2F,MAAO/F,EAAEwG,OAAOT,OAElB6S,SAAS,EACTC,UAAU,IAGhB,CAEAoC,sBAAAA,CAAuBjb,GACrBA,EAAEgb,kBAEFna,KAAKga,OAASK,WAAW,KACvBra,KAAK+Z,SAAU,GACd,IACL,CAEAO,oBAAAA,CAAqBnb,GACnBA,EAAEgb,kBACFna,KAAK+Z,SAAU,EACX/Z,KAAKga,SACPO,cAAcva,KAAKga,QACnBha,KAAKga,OAAS,KAElB,CAEAQ,iBAAAA,GACExZ,MAAMwZ,oBACNxa,KAAKya,aAAa,KAAM,yBAC1B,CAEAlI,MAAAA,GACE,OAAOlH,EAAAA,IAAI;;yBAEUuO;iCACQ;oBACb,CAAEc,cAAe,CAAEC,SAAU,KAAMC,SAAU;uBAC1C;oCACa5a,KAAKka;;;;UAI/Bla,KAAK+Z,QACH1O,EAAAA,IAAI;;oBAGJgI,EAAAA;;;kBAGMrT,KAAK8Z;+BACQ9Z,KAAKka;8BACNla,KAAKoa;4BACPpa,KAAKsa;;;KAI/B,CAGAO,gBAAAA,GACE,OAAO7a,IACT,EAGF0S,eAAeC,OAAO,2BAA4BkH,GCtGnC,MAAMiB,UAAoCpM,EAAAA,QAIvD5O,WAAAA,CAAYoN,EAAYtL,GACtBZ,MAAMkM,EAAYtL,GAElB5B,KAAKgQ,MAAQ,CAAEzQ,GAAI,KAAM2F,MAAO,MAGhClF,KAAKsN,eACH,sBACA,wBACetN,KAAKqN,+DAKtBrN,KAAKwN,IAAInN,UAAUE,IAAI,0BAEvBP,KAAK+a,eACH/a,KAAK0N,MAAMhM,cAAc,6BACzB,IAAImY,EAAuB7Z,KAAK0N,OAElC1N,KAAK+a,eAAehZ,iBAAiB,mBAAqB5C,IACxDA,EAAEgb,kBACF,MAAM,GAAE5a,EAAE,MAAE2F,GAAU/F,EAAEwG,OAEpBpG,GACFS,KAAKgQ,MAAQ,CAAEzQ,KAAI2F,SAEnBlF,KAAK2N,cAAc3N,KAAKgQ,MAAMzQ,GAAIS,KAAKgQ,MAAM9K,OAAO,GAEpDlF,KAAK+O,YAEL/O,KAAKuO,iBAAiBvO,KAAKgQ,MAAMzQ,IACjCS,KAAKgQ,MAAQ,CAAEzQ,GAAI,KAAM2F,MAAO,MAChClF,KAAK+O,YAGX,CAEA,WAAIQ,GACF,QAASvP,KAAKgQ,MAAMzQ,EACtB,CAEA2P,cAAAA,GACElP,KAAKmP,YAAc,IAAKnP,KAAKgQ,MAC/B,CAEAZ,OAAAA,GACEpP,KAAKgQ,MAAMzQ,GAAK,IAAKS,KAAKmP,aAC1BnP,KAAK+O,SACP,CAEAW,SAAAA,GACE,OAAO1P,KAAKuP,OACd,CAEAR,OAAAA,GACE/O,KAAKmN,YAAYsC,OAAOzP,KAAK0P,YAC/B,E,mYC7DF,IAAAsL,EAAA,IAAAC,QACA,MAAMC,UAAiCxM,EAAAA,QAIrC5O,WAAAA,CAAYoN,EAAYtL,GACtBZ,MAAMkM,EAAYtL,GA+DpBuZ,EAAA,KAAAH,GAVA,KAGAI,qBAAwBjc,IACtBa,KAAKqb,OAASlc,EAAEwG,OAAOpG,GACvBS,KAAKsb,OAASnc,EAAEwG,OAAOT,MACvBlF,KAAK2N,cAAc3N,KAAKqb,OAAQrb,KAAKsb,QAAQ,GAAM,GACnDC,EAAAP,EAAAhb,KAAK+O,GAAOyM,KAAZxb,OA1DAA,KAAKqb,OAELrb,KAAKsb,OAGLtb,KAAKsN,eACH,yBACA,sBAAsBtN,KAAKqN,2DAK7BrN,KAAKyb,iBAAmB,IAAIC,IAAJ,CACtB,QACA,GAAG5L,EAAAA,sBAAsB9P,KAAKqN,iBAC9B,OACArN,KAAK0N,MACL,CACEgN,cAAe,CACbC,SAAU,KACVC,SAAU,SACVe,WAAY,cAKlB3b,KAAKyb,iBAAiB1Z,iBACpB,0BACA/B,KAAKob,qBAET,CAKAlM,cAAAA,GACE,IAAIlB,EAAYhO,KAAKiO,eAAevM,cAClC,6BAGF1B,KAAK4b,WAAa5N,GAAWJ,OAAS,GACtC5N,KAAK6b,WAAa7N,GAAW9I,OAAS,EACxC,CAIAkK,OAAAA,GACEpP,KAAK2N,cAAc3N,KAAK4b,WAAY5b,KAAK6b,YAAY,EACvD,CA6BA,WAAItM,GACF,OAAOvP,KAAKoO,YAAY7M,OAAS,CACnC,EACD,SAAAwN,IAhBG/O,KAAKmN,YAAYsC,OAAO8L,EAAAP,EAAAhb,KAAK0P,GAAS8L,KAAdxb,MAC1B,CAEA,SAAA0P,IAIE,OAAO1P,KAAKuP,OACd,CAUF,W,yHCzFA,MAAMuM,EAAU,CACd,MACG,IAAI3Y,MAAM,KAAKxE,IAAI,CAACod,EAAG9W,IAAUA,EAAQ,EAAI,IAChD,IACA,IACA,MAGa,MAAM+W,UAAqCtN,EAAAA,QAKxD5O,WAAAA,CAAYoN,EAAYtL,EAAeqa,GACrCjb,MAAMkM,EAAYtL,GAGlB5B,KAAKsN,eACH,uBACA,yZAaUwO,EAAQnd,IACPiP,GAAU,kBAAkBA,MAAUA,cACvCzI,KAAK,0bAiBjB,MAAM+W,EAAOlc,KAAKwN,IAAInK,iBAAiB,yBACvCrD,KAAKmc,KAAOD,EAAK,GAAGxa,cAAc,yCAClC1B,KAAKoc,gBAAkBF,EAAK,GAAGxa,cAC7B,2CAEF,MAAM2a,EAASlZ,MAAMC,KACnBpD,KAAKoc,gBAAgB/Y,iBAAiB,mBAExCrD,KAAKsc,OAASD,EAAOhN,KAAMkN,GAAUA,EAAMlc,UAAUmc,SAAS,UAC9Dxc,KAAKyc,KAAOJ,EAAOhN,KAAMkN,GAAUA,EAAMlc,UAAUmc,SAAS,QAC5Dxc,KAAK0c,UAAW,EAGhB1c,KAAKwN,IACF9L,cAAc,sDACdK,iBAAiB,SAAW5C,IAC3Ba,KAAKoc,gBAAgB/a,QAAQ2C,KAAO7E,EAAE8R,OAAOhC,QACzC,kBACA,SACJjP,KAAK+O,YAET,CAAC/O,KAAKmc,QAASE,GAAQ7W,QAAS+W,IAC9BA,EAAMxa,iBAAiB,SAAW5C,IAChCa,KAAK+O,QAAQ5P,OAIjBa,KAAK2c,WAAa1c,EAAAA,aAAagM,QAAQ,aAGnCgQ,IACFjc,KAAKmc,KAAKvO,MAAQqO,EAAcjQ,IAChChM,KAAKsc,OAAO1O,OAASqO,EAActR,MACnC3K,KAAKyc,KAAK7O,OAASqO,EAAcrR,IACjC5K,KAAK+O,UAET,CAIAG,cAAAA,GACE,CAGFE,OAAAA,GAEEpP,KAAK+O,SACP,CAEAnG,MAAAA,GACE5I,KAAK+O,SACP,CAEA,WAAIQ,GACF,GAAwB,KAApBvP,KAAKmc,KAAKvO,MACZ,OAAO,EAEP,OAAQ5N,KAAKoc,gBAAgB/a,QAAQ2C,MACnC,IAAK,SACH,MACwB,KAAtBhE,KAAKsc,OAAO1O,OACQ,KAApB5N,KAAKyc,KAAK7O,QACT5N,KAAKsc,OAAO1O,OAAS5N,KAAKyc,KAAK7O,MAEpC,IAAK,kBACH,MAA6B,KAAtB5N,KAAKsc,OAAO1O,MAG3B,CAIAmB,OAAAA,CAAQ5P,GACN,MAAMyd,EAAY5c,KAAK2c,WAAWC,UAC5BhS,EACJ5K,KAAK2c,WAAWE,YAAY7c,KAAKmc,KAAKvO,QAAQkP,OAAOF,GAAW,GAE9Dzd,GAAG8R,SAAWjR,KAAKmc,MAErBnc,KAAKsc,OAAOS,IAAMnS,EAClB5K,KAAKyc,KAAKM,IAAMnS,EACZ5K,KAAK0c,WAAU1c,KAAKyc,KAAK7O,MAAQhD,GACX,KAAtB5K,KAAKsc,OAAO1O,OACd5N,KAAKsc,OAAO1O,MAAQ,EACpB5N,KAAK0c,UAAW,GACP1c,KAAKsc,OAAO1O,MAAQhD,IAC7B5K,KAAKsc,OAAO1O,MAAQhD,IAEE,KAApB5K,KAAKyc,KAAK7O,OAGH5N,KAAKyc,KAAK7O,MAAQhD,KAF3B5K,KAAKyc,KAAK7O,MAAQhD,EAClB5K,KAAK0c,UAAW,IAMd1c,KAAKyc,KAAK7O,MAAQhD,IACpB5K,KAAK0c,UAAW,GAKpB,MAAM1O,EAAYhO,KAAKoO,YAAY,GACnC,GAAIpO,KAAKuP,QAAS,CAChB,MAAM3B,EAAQ,GAAG5N,KAAKmc,KAAKvO,SAAS5N,KAAKsc,OAAO1O,QACR,oBAAtC5N,KAAKoc,gBAAgB/a,QAAQ2C,KACzB,GACA,IAAIhE,KAAKyc,KAAK7O,UAEhBI,GAEFA,EAAU9I,MAAQ0I,EAClBI,EAAUJ,MAAQA,GAElB5N,KAAK2N,cAAcC,EAAOA,GAAO,EAErC,MACE5N,KAAKuO,mBAIPvO,KAAKmN,YAAYsC,OAAOzP,KAAK0P,YAC/B,CAEAA,SAAAA,GACE,OAAO1P,KAAKuP,OACd,E,yXCnLF,IAAAyN,EAAA,IAAA/B,QACA,MAAMgC,UAAsCvO,EAAAA,QAI1C5O,WAAAA,CAAYoN,EAAYtL,GACtBZ,MAAMkM,EAAYtL,GA4CpBuZ,EAAA,KAAA6B,GAzCEhd,KAAKsN,eACH,yBACA,sBAAsBtN,KAAKqN,2DAK7BrN,KAAKyb,iBAAmB,IAAIyB,IAAJ,CAAgBld,KAAK0N,MAAO,gBAEpD1N,KAAKyb,iBAAiB1Z,iBAAiB,UAAY5C,IACjD,GAAc,UAAVA,EAAE6F,IAAiB,CACrB,MAAMzF,EAAKS,KAAKyb,iBAAiB7N,MAE7B5N,KAAKyb,iBAAiB7N,MAAMuP,OAAO5b,OAAS,IAC9CvB,KAAK2N,cAAcpO,EAAIA,GAAI,GAAO,GAClCgc,EAAAyB,EAAAhd,KAAK+O,GAAOyM,KAAZxb,MACAA,KAAKyb,iBAAiB7N,MAAQ,GAElC,IAGF5N,KAAKmN,YAAYvL,cAAc7B,IAAIgC,iBACjC,wBACAwZ,EAAAyB,EAAAhd,KAAKod,GAAmBld,KAAKF,MAEjC,CAKAkP,cAAAA,GACElP,KAAKqd,gBAAkBrd,KAAKoO,WAC9B,CAIAgB,OAAAA,GACEpP,KAAKqO,kBAAkBrO,KAAKqd,gBAC9B,CA4BA,WAAI9N,GACF,OAAOvP,KAAKoN,eAAeoB,cAAc8O,eAC3C,EACD,SAAAvO,IAzBG/O,KAAKmN,YAAYsC,OAAO8L,EAAAyB,EAAAhd,KAAK0P,GAAS8L,KAAdxb,MAC1B,CAEA,SAAA0P,IAIE,OAAO1P,KAAKuP,OACd,CAEA,SAAA6N,EAGmBje,GACjBA,EAAEgb,kBACFna,KAAKuO,iBAAiBpP,EAAEwG,QACxB4V,EAAAyB,EAAAhd,KAAK+O,GAAOyM,KAAZxb,KACF,CAUF,W,iFCjFe,MAAMS,EAOnBX,WAAAA,CAAYkE,EAAMtD,EAASC,EAAYG,GACrCd,KAAKud,MAAQvZ,EACbhE,KAAKuC,SAAW7B,EAIhBV,KAAKmB,KAAOwB,SAASC,cAAc,OACnC5C,KAAKmB,KAAKd,UAAUE,IAAI,kCACxBP,KAAKmB,KAAKqD,SAAWxE,KACrBW,EAAW+D,UAAUlB,aAAaxD,KAAKmB,KAAML,EAe/C,CAIAkB,gBAAAA,CAAiB7C,GACfA,EAAE8C,2BACgBjC,KAAKmB,KAAKd,UAAUmc,SAAS,cAG3Cxc,KAAKwd,YACPxd,KAAKuC,SAASqH,UAAU7B,sBAAsB/H,MAE9CA,KAAKuC,SAASqH,UAAUlC,oBAAoB1H,MAAM,GAYtD,CAIAgI,MAAAA,GACEhI,KAAKmB,KAAKd,UAAUE,IAAI,YAC1B,CAEAiH,QAAAA,GACExH,KAAKmB,KAAKd,UAAUC,OAAO,YAC7B,CAEAA,MAAAA,GACEN,KAAKW,WAAW8C,oBAAoBzD,KAEtC,CAOA,OAAID,GACF,OAAOC,KAAKmB,IACd,CAEA,eAAI2G,GACF,MAAO,IAAI9H,KAAKmB,KAAK+F,WAAWtC,WAClC,CAKA,QAAIZ,GACF,OAAOhE,KAAKud,KACd,CAKA,eAAIC,GACF,OAAOxd,KAAKmB,KAAKd,UAAUmc,SAAS,YACtC,CAKA,cAAI7b,GACF,OAAOX,KAAKD,IAAImH,WAAWgK,QAAQ,mCAChC1M,QACL,CAKA,cAAI7D,CAAWA,GACbX,KAAKyd,YAAc9c,CACrB,CAEA,SAAIkQ,GACF,IAAIlQ,EAAaX,KAAKW,WAClBkQ,EAAQ,EACZ,KAAOlQ,GACLA,EAAaA,EAAWA,WACpBA,GAAYkQ,IAElB,OAAOA,CACT,E,4FCzHa,MAAM6M,EACnB5d,WAAAA,CAAYC,GAIV,GAHAC,KAAKD,IAAMA,EACXC,KAAK2d,GAAK5d,EAAI2B,cAAc,OAGrB,SADCkc,EAAAA,KAEJ5d,KAAK6d,UAGX,CAEAC,UAAAA,CAAW3e,GACK,WAAVA,EAAE6F,KACJhF,KAAK+d,OAET,CAEAC,IAAAA,GACEhe,KAAKD,IAAIM,UAAUE,IAAI,UACvBN,EAAAA,aAAage,QAAQ,aAAa,GAClCtb,SAASZ,iBAAiB,QAAS/B,KAAK8d,WAAW5d,KAAKF,MAC1D,CAEA+d,KAAAA,GACE/d,KAAKD,IAAIM,UAAUC,OAAO,UAC1BL,EAAAA,aAAage,QAAQ,aAAa,GAClCtb,SAAS8R,oBAAoB,QAASzU,KAAK8d,WAAW5d,KAAKF,MAC7D,CAGA6d,QAAAA,GACE5d,EAAAA,aAAaC,KAAK,UAAWF,MAG7B2C,SACGjB,cACC,+EAEDK,iBAAiB,QAAS,KACzB/B,KAAKge,SAGThe,KAAK2d,GAAG5b,iBAAiB,QAAS,KAChC/B,KAAK+d,UAIP,MAAMG,EAAa,CACjB,CAEEC,SAAUC,EAAAA,QAEVC,SAAU,UACV3Z,UAAW/B,SAASwJ,eAAe,qBAIvC,IAAK,MAAMmS,KAAaJ,EAAY,CAElC,IAAIK,EAASC,aAAaC,QAAQH,EAAUD,UAE1CE,EADEA,EACOG,KAAKC,MAAMJ,GAGXD,EAAUH,SAASxf,IAAKmS,IAC/B,MAAM8N,EAAUlf,OAAO8Q,OAAO,CAAC,EAAGM,GAElC,OADA8N,EAAQC,OAAwB,SAAfD,EAAQrf,GAClBqf,IAIXN,EAAU5Z,UAAUlD,UAAY+c,EAC7B5f,IACEmS,GACC,4CAA4CA,EAAKvR,MAC/CuR,EAAK+N,OAAS,WAAa,MACzB/N,EAAK5L,sBAEZC,KAAK,IAERmZ,EAAU5Z,UACPrB,iBAAiB,sBACjBmC,QAAS+W,IACRA,EAAMxa,iBAAiB,SAAW5C,IAChC,MAAMof,EAASte,EAAAA,aAAagM,QAAQqS,EAAUD,UACjCE,EAAOlP,KAAMyB,GAASA,EAAKvR,KAAOJ,EAAE8R,OAAOrD,OACnDiR,OAAS1f,EAAE8R,OAAOhC,QACvBhP,EAAAA,aAAage,QAAQK,EAAUD,SAAUE,OAK/Cte,EAAAA,aAAage,QAAQK,EAAUD,SAAUE,EAC3C,CACF,CAEAO,OAAAA,CAAQA,GACN,IAAK,MAAMlO,KAAUkO,EACnB9e,KAAKD,IAAI2B,cACP,gDAAgDkP,EAAOrR,QACvD0P,QAAU2B,EAAOiO,OAErBL,aAAaO,QAAQ,UAAWL,KAAKM,UAAUF,GACjD,E,8dC1GqC,IAAAG,EAAA,IAAAC,QAAAC,EAAA,IAAAD,QAAAE,EAAA,IAAAF,QAAAG,EAAA,IAAApE,QAExB,MAAMqE,EAKnBxf,WAAAA,CAAYyf,G,YAAS,K,EAAAF,G,SAJrBG,EAAA,KAAAP,OAAQ,GACRO,EAAA,KAAAL,OAAS,GACTK,EAAA,KAAAJ,OAAK,GAGHK,EAAKR,EAALjf,KAAgBuf,GAChBE,EAAKN,EAALnf,KAAiBuf,EAAQle,QAAQqe,UACjCD,EAAKL,EAALpf,KAAa,GAAG8P,EAAAA,gCAEhB6P,EAAKV,EAALjf,MAAc+B,iBACZ,QACAwZ,EAAA8D,EAAArf,KAAK4f,GAAc1f,KAAKF,KAAM2f,EAAKR,EAALnf,OAElC,EAoCD,SAAA4f,EAlCe5b,GACZ,OAAQ/D,EAAAA,aAAagM,QAAQ,eAC3B,IAAK,SACH,OAAOsP,EAAA8D,EAAArf,KAAK6f,GAAyBrE,KAA9Bxb,KAA+BgE,GACxC,IAAK,WACH,OAAOuX,EAAA8D,EAAArf,KAAK8f,GAA2BtE,KAAhCxb,KAAiCgE,GAE9C,CAAC,SAAA6b,EAEyB7b,GACxB,MAAMM,EAAQrE,EAAAA,aAAagM,QAAQ,0BAA0B8T,KACvDC,EAASrd,SAASC,cAAc,KACtCod,EAAOC,KAAO,GAAGN,EAAKP,EAALpf,SAAcgE,UAAaM,IAC5C0b,EAAOE,OACT,CAAC,SAAAJ,EAE2B9b,GAC1B,MAAMmc,EAAO,CAAE7b,MAAOrE,EAAAA,aAAagM,QAAQ,6BACrCmU,EAAOzd,SAASC,cAAc,QACpCwd,EAAKC,OAAS,GAAGV,EAAKP,EAALpf,SAAcgE,IAC/Boc,EAAKE,OAAS,OACdF,EAAKG,QAAU,aACfH,EAAK3F,aAAa,QAAS,kBAC3B,MAAM8B,EAAQ5Z,SAASC,cAAc,SACrC2Z,EAAM9B,aACJ,OACAiE,KAAKM,UAAUmB,GAAMzG,MAAM,GAAI,GAAK,gBAEtC6C,EAAM9B,aAAa,QAAS,MAC5B2F,EAAKnG,YAAYsC,GACjB5Z,SAASwd,KAAKlG,YAAYmG,GAE1BA,EAAKI,QACP,C,0HCjDF,MAAMC,EAAkB,CACtB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,MAEIC,EAAU,CAAC,EAAG,KACdC,EAAU,CACdC,UAAU,EACVC,YAAY,EACZzV,OAAQsV,EAAQ,GAChB9D,UAAW,SACXkE,QAAS,EACTjE,YAAa,CACX,EAAG,CACDkE,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,EAAG,CACDF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhB,GAAI,CACFF,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhBC,EAAG,CACDH,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,WACZC,OAAQ,CAAC,EAAG,aAGhBE,EAAG,CACDJ,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,UACZC,OAAQ,CAAC,EAAG,YAGhBG,GAAI,CACFL,UAAU,EACVjE,OAAQ,CACNkE,OAAQ,CAAC,EAAG,OACZC,OAAQ,CAAC,EAAG,WAKdI,EAAS,IAAIC,OAAO,2CAE1B,IAAIC,EAAY7C,KAAKC,MAAMH,aAAaC,QAAQ,cAEhD,SAAS+C,IACFD,GAAaA,EAAUT,UAAYH,EAAQG,UAC9CS,EAAYZ,EAEhB,CAEAa,IAEA,MAAMC,SACG,OAAO,KAAgBF,EAAU3E,4BAA4B8E,SACpE,GAEa,MAAMC,EACnB7hB,WAAAA,CAAYC,GACVC,KAAKD,IAAMA,EACXC,KAAK4hB,SAAU,EACf5hB,KAAK6c,YAAc7c,KAAKD,IAAI2B,cAAc,2BAC1C1B,KAAK6hB,gBAEL5hB,EAAAA,aAAage,QAAQ,YAAasD,GAGlCthB,EAAAA,aAAaC,KAAK,YAAaF,MAC/BC,EAAAA,aAAaC,KAAK,yBAA0BF,MAC5CC,EAAAA,aAAaC,KAAK,2BAA4BF,MAE9CA,KAAKD,IAAI2B,cAAc,WAAWK,iBAAiB,QAAS,KAC1D,MAAMwf,EAAYthB,EAAAA,aAAagM,QAAQ,aAKvC,OAJAjM,KAAK8hB,iBAAiB,CACpBlB,UAAWW,EAAUX,SACrBxV,OAAQmW,EAAUX,SAAWF,EAAQ,GAAKA,EAAQ,MAE7C,IAGT,MAAMqB,EAAU/hB,KAAKD,IAAIsD,iBACvB,4CAEF0e,EAAQvc,QAASwJ,IACfA,EAAOjN,iBAAiB,QAAU5C,IAChCa,KAAK8hB,iBAAiB,CACpBjB,WAAuC,SAA3B1hB,EAAE8R,OAAO5P,QAAQuM,YAInC5N,KAAKgiB,gBAAkB7e,MAAMC,KAAK2e,GAAShW,OACxChM,GAA8B,SAAtBA,EAAIsB,QAAQuM,OACrB,GACF5N,KAAKiiB,gBAAkB9e,MAAMC,KAAK2e,GAAShW,OACxChM,GAA8B,SAAtBA,EAAIsB,QAAQuM,OACrB,GAIF5N,KAAKkiB,QAAUliB,KAAKmiB,aAAaV,GACjCzhB,KAAK+J,UAAYL,KAAKqT,OACjB/c,KAAKkiB,QAAQvjB,IAAKyjB,GAAeA,EAAWA,EAAW7gB,OAAS,GAAGqJ,MAExE5K,KAAKqiB,gBAAgBriB,KAAKkiB,SAU1BliB,KAAKuhB,UAAUthB,EAAAA,aAAagM,QAAQ,aACtC,CAGAkW,YAAAA,CAAaV,GACX,MAAMS,EAAU,GAEhB,IAAK,MAAMI,KAAiB7B,EAAiB,CAE3C,MAAM2B,EAAaX,EAAI1V,OACpBhD,GAAaA,EAAS,KAAO,MAAMuZ,KAItCJ,EAAQxX,KACN0X,EAAWzjB,IAAKoK,IACP,CACL4B,MAAOyG,SAASrI,EAAS,IACzB6B,IAAKwG,SAASrI,EAAS,IACvB0B,KAAM1B,EAAS,GAAGwZ,MAAM,KAAK,GAC7B/X,QAASzB,EAAS,GAClBuC,UAAWvC,EAAS,MAI5B,CACA,OAAOmZ,CACT,CAGAG,eAAAA,CAAgBH,GACdliB,KAAK6hB,gBAAkB,GACvB7hB,KAAK6c,YAAYrb,UAAYif,EAAgB9hB,IAC1CqG,GAAQ,sBAAsBA,qCAC/BG,KAAK,IACP,IAAK,IAAIqd,EAAI,EAAGA,EAAIN,EAAQ3gB,OAAQihB,IAClCxiB,KAAK6hB,gBAAgBnX,KACnB,IAAIb,EAAAA,EACF7J,KAAK6c,YAAYnb,cAAc,cAAc+e,EAAgB+B,MAC7D/B,EAAgB+B,GAChBN,EAAQM,GACRxiB,KAAK+J,WAIb,CAGA+X,gBAAAA,CAAiBW,GACf,MAAMlB,EAAYthB,EAAAA,aAAagM,QAAQ,aACvC,IAAK,MAAMjH,KAAOyd,EAChBlB,EAAUvc,GAAOyd,EAAOzd,GAE1B/E,EAAAA,aAAage,QAAQ,YAAasD,GAClC/C,aAAaO,QAAQ,YAAaL,KAAKM,UAAUuC,GACnD,CAGAA,SAAAA,CAAUA,GAEJA,EAAUX,SACZje,SAAS+f,qBAAqB,QAAQ,GAAGriB,UAAUE,IAAI,kBAEvDoC,SACG+f,qBAAqB,QAAQ,GAC7BriB,UAAUC,OAAO,kBAGlBihB,EAAUV,YACZ7gB,KAAKD,IAAIM,UAAUE,IAAI,oBACvBP,KAAKgiB,gBAAgB3hB,UAAUE,IAAI,YACnCP,KAAKiiB,gBAAgB5hB,UAAUC,OAAO,cAEtCN,KAAKD,IAAIM,UAAUC,OAAO,oBAC1BN,KAAKgiB,gBAAgB3hB,UAAUC,OAAO,YACtCN,KAAKiiB,gBAAgB5hB,UAAUE,IAAI,YAKvC,CAEAoiB,sBAAAA,CAAuBC,GACrB,MAAMC,EAASxB,EAAOyB,KAAKF,EAAW7C,MACtC,GAAI8C,EAAQ,CACV,MAAME,EAAW,CAAEX,WAAYS,EAAO,IACtC,GAAIA,EAAO,GAAI,CACb,IAAKA,EAAO,IAAMA,EAAO,GAAI,OAC7BE,EAASha,SAAW,CAAEia,KAAMH,EAAO,GAAII,KAAMJ,EAAO,GACtD,MACEE,EAASha,UAAY8Z,EAAO,GAE9B7iB,KAAKkjB,iBAAiB,CAACH,GACzB,MACE/iB,KAAKkjB,iBAAiB,GAE1B,CACAC,wBAAAA,CAAyBP,GACvB,MAAMQ,EAAY,GACZC,EAAoBT,IACxBljB,OAAOD,KAAKmjB,GAAYpd,QAASR,IAC/B,OAAQA,GACN,IAAK,KACL,IAAK,MACH4d,EAAW5d,GAAKQ,QAASE,GAAc2d,EAAiB3d,IACxD,MACF,IAAK,WACH0d,EAAU1Y,KAAKkY,EAAW5d,QAKlCqe,EAAiBT,GACjB5iB,KAAKkjB,iBAAiBE,EACxB,CACAF,gBAAAA,CAAiBE,GAEf,GADApjB,KAAKD,IAAIsB,QAAQiiB,sBAAwBF,EAAU7hB,OAAS,EACnC,IAArB6hB,EAAU7hB,OAAc,OAC5B,MAAMgiB,EAAqB,CAAC,EAC5BH,EAAU5d,QAASud,IACZQ,EAAmBR,EAASX,cAC/BmB,EAAmBR,EAASX,YAAc,CAAEvV,UAAW,KACzD0W,EAAmBR,EAASX,YAAYvV,UAAUnC,KACnB,iBAAtBqY,EAASha,SACZ,CAACga,EAASha,SAAUga,EAASha,UAC7B,CAACga,EAASha,SAASia,IAAKD,EAASha,SAASka,QAGlDjjB,KAAK6hB,gBAAgBrc,QAASge,IAC5BA,EAAe5W,wBACb2W,EAAmBC,EAAe1Z,KAAK+C,WAAa,KAG1D,E,wGClaa,MAAM4W,EACnB3jB,WAAAA,CAAYC,GACV,MAAM2jB,EAAOvgB,MAAMC,KACjBrD,EAAIsD,iBAAiB,sCAEjBoK,EAAWtK,MAAMC,KACrBrD,EAAIsD,iBAAiB,oCAIvBqgB,EAAKle,QAASme,IACZA,EAAI1S,OAASxD,EAAS4B,KACnBuU,GAAYA,EAAQviB,QAAQwiB,QAAUF,EAAItiB,QAAQ4P,QAErD0S,EAAI5hB,iBAAiB,QAAU5C,IAE7BukB,EAAKle,QAASme,GAAQA,EAAItjB,UAAUC,OAAO,aAC3CmN,EAASjI,QAASme,GAAQA,EAAItjB,UAAUC,OAAO,aAE/CnB,EAAE8R,OAAO5Q,UAAUE,IAAI,YACvBpB,EAAE8R,OAAOA,OAAO5Q,UAAUE,IAAI,YAE9BujB,OAAOtF,aAAaO,QAClB5f,EAAE8R,OAAO5P,QAAQ0iB,SACjB5kB,EAAE8R,OAAO5P,QAAQ4P,QAGnB+S,EAAAA,EAAqBvU,aAMzB,IAAIwU,EAAYH,OAAOtF,aAAaC,QAAQiF,EAAK,GAAGriB,QAAQ0iB,UAC5D,MAAMG,EAAgBnkB,EAAIsB,QAAQ6iB,cAClC,GAAInkB,EAAIsB,QAAQ6iB,cAAe,CAC7B,MAAMC,EAAQ,IAAIC,IAAIN,OAAOf,UAAUsB,aAAapQ,IAAIiQ,GACxDD,EAAYE,GAASF,CACvB,CACA,IAAIK,EAAcZ,EAAK,GACvB,GAAIO,EAAW,CAEbK,EADiBZ,EAAKrU,KAAMsU,GAAQA,EAAItiB,QAAQ4P,SAAWgT,IACjCK,CAC5B,CACAA,EAAYlY,cAAc,IAAImY,MAAM,SACtC,E,kCCZF,IAtBA,MAIEzkB,WAAAA,CAAYC,EAAKykB,GACfxkB,KAAKD,IAAMA,EACXC,KAAKwkB,KAAOA,EACZxkB,KAAKykB,gBAAkB,SAAWD,EAGwB,cAAtDV,OAAOtF,aAAaC,QAAQze,KAAKykB,kBACnC1kB,EAAIM,UAAUE,IAAI,cAGpBR,EAAI2B,cAAc,UAAUK,iBAAiB,QAAS,KACpDhC,EAAIM,UAAUqkB,OAAO,cACrBZ,OAAOtF,aAAaO,QAAQ/e,KAAKykB,gBAAiB1kB,EAAIM,UAAUmc,SAAS,cAAgB,YAAc,KAG3G,E,sGCrBa,MAAMmI,UAA2BC,EAAAA,EAC9C9kB,WAAAA,CAAYC,EAAKykB,EAAMK,GACrB7jB,MAAMjB,EAAKykB,GACXxkB,KAAK8kB,gBAAkBD,EAEvB,MAAME,EAAkB9kB,EAAAA,aACrBgM,QAAQ,gCACRoD,KAAM3J,GAAcA,EAAUnG,KAAOS,KAAKwkB,MAG7CxkB,KAAKglB,WAAWD,GAEhB,MAAMrf,GAAYuf,EAAAA,EAAAA,0BAAyBjlB,KAAKwkB,MAChDxkB,KAAKklB,cAAgB,CAAC,EACtBllB,KAAKD,IACFsD,iBAAiB,yDACjBmC,QAAS+W,IACRvc,KAAKklB,cAAc3I,EAAM3O,OAAS,CAChC2O,MAAOA,EACP3O,MAAO2O,EAAMrV,WAAWie,oBAEtBzf,GAAaA,EAAU6W,EAAM3O,SAE/B2O,EAAMtN,QAAqC,MAA3BvJ,EAAU6W,EAAM3O,UAItC5N,KAAKolB,gBAEL,IAAK,MAAMpgB,KAAOhF,KAAKklB,cACrBllB,KAAKklB,cAAclgB,GAAKuX,MAAMxa,iBAC5B,SACA/B,KAAKolB,cAAcllB,KAAKF,OAI5BC,EAAAA,aAAaC,KAAK,yBAA0BF,MAC5CC,EAAAA,aAAaC,KAAKF,KAAK8kB,gBAAiB9kB,MAGxCA,KAAKA,KAAK8kB,iBAAoBlW,IAC5B,GAAIA,EAAQ,CACV,IAAIyW,EAAM,EACV,IAAK,MAAMrgB,KAAOhF,KAAKklB,cAAe,CACpC,MAAMI,EAAQ1W,EAAO5J,GAAO4J,EAAO5J,GAAO,EAC1CqgB,GAAOC,EACPtlB,KAAKklB,cAAclgB,GAAK4I,MAAM2X,YAAcD,EAAME,gBACpD,CACAxlB,KAAKklB,cAAcG,IAAIzX,MAAM2X,YAAcF,EAAIG,gBACjD,KAAO,CACL,IAAK,MAAMxgB,KAAOhF,KAAKklB,cACrBllB,KAAKklB,cAAclgB,GAAK4I,MAAM2X,YAAc,MAE9CvlB,KAAKklB,cAAcG,IAAIzX,MAAM2X,YAAc,KAC7C,CACAvlB,KAAKklB,cAAcG,IAAIzX,MAAM2X,YAActlB,EAAAA,aACxCgM,QAAQ,gBACRwZ,SAASD,iBAEhB,CAEAR,UAAAA,CAAWD,GACT,IAAI1Z,EAAO,kOAUO,iBAAdrL,KAAKwkB,OACPnZ,GAAQ,2PAWQ,kBAAdrL,KAAKwkB,OACPnZ,GAAQ,0PAWQ,SAAdrL,KAAKwkB,OACPnZ,GAAQ,0PAWQ,aAAdrL,KAAKwkB,OACPnZ,GAAQ,0PAYVA,GAAQ0Z,EAAgBpU,MACrBhS,IACEmS,GAAS,+FAGsBA,EAAKvR,yBAErB,YAAdS,KAAKwkB,KACD,2CAA2C1T,EAAKvR,2CAChD,eAGU,iBAAdS,KAAKwkB,KACD,kDAAkD1T,EAAKvR,aACvD,eAGU,SAAdS,KAAKwkB,KACD,yEACE1T,EAAKvR,OACF,CAAEmmB,EAAG,YAAaC,EAAG,aAAc7U,EAAKvR,YAC7C,eAGU,aAAdS,KAAKwkB,KACD,yEACE1T,EAAKvR,OAEL,CACEqmB,MAAO,aACPC,MAAO,aACPC,EAAG,aACHC,EAAG,WACHjV,EAAKvR,YAET,eAGU,kBAAdS,KAAKwkB,KACD,yEACE1T,EAAKvR,OAEL,CAAEymB,GAAI,aAAcC,EAAG,aAAcC,GAAI,cAAepV,EAAKvR,YAE/D,eAEJuR,EAAK5L,6EAMRC,KAAK,IACRnF,KAAKD,IACF2B,cAAc,gCACdykB,mBAAmB,YAAa9a,GAGjC,CAAC,eAAgB,gBAAiB,OAAQ,YAAYmM,SAASxX,KAAKwkB,OAEpExkB,KAAKD,IACF2B,cAAc,qDACdpB,QAEP,CAGA8kB,aAAAA,CAAcjmB,GACZ,GAAIA,GAAwB,QAAnBA,EAAE8R,OAAOrD,MAEhB,GAAIzO,EAAE8R,OAAOhC,QAEX,IAAK,MAAMjK,KAAOhF,KAAKklB,cACrBllB,KAAKklB,cAAclgB,GAAKuX,MAAMtN,SAAU,OAI1C,IAAK,MAAMjK,KAAOhF,KAAKklB,cACrBllB,KAAKklB,cAAclgB,GAAKuX,MAAMtN,SAAU,MAGvC,CAEL,IAAImX,EAAQ,EACZ,IAAK,MAAMphB,KAAOhF,KAAKklB,cACT,QAARlgB,IACFohB,IAAUpmB,KAAKklB,cAAclgB,GAAKuX,MAAMtN,SAG5CjP,KAAKklB,cAAcG,IAAI9I,MAAMtN,QAAoB,IAAVmX,CACzC,CAEA,MAAMnX,EAAU,CAAC,EACjB,IAAK,MAAMjK,KAAOhF,KAAKklB,cACT,QAARlgB,IACFiK,EAAQjK,GAAOhF,KAAKklB,cAAclgB,GAAKuX,MAAMtN,QAAU,IAAM,MAGjE/C,EAAAA,EAAAA,0BAAyBlM,KAAKwkB,KAAMvV,EACtC,CAGA0T,sBAAAA,CAAuBC,GACrB,IAAIwD,EAAQ,EACZ,IAAK,MAAMphB,KAAO4d,EAAW5iB,KAAKwkB,MAChCxkB,KAAKklB,cAAclgB,GAAKuX,MAAMtN,QACG,MAA/B2T,EAAW5iB,KAAKwkB,MAAMxf,GACxBohB,GAAwC,MAA/BxD,EAAW5iB,KAAKwkB,MAAMxf,GAEjChF,KAAKklB,cAAcG,IAAI9I,MAAMtN,QAAoB,IAAVmX,CACzC,E,8GCzOa,MAAMC,UAAkDzB,EAAAA,EACrE9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,aAGXC,KAAKsmB,kBAAmBC,EAAAA,EAAAA,gCAA+BvmB,KAAKwkB,MAC5D,MAAM9e,EAAY1F,KAAKwmB,yBAEjBC,EAAc9jB,SAASC,cAAc,gBAC3C6jB,EAAYC,OAAShhB,EAAUtC,KAC/BqjB,EAAYE,OAASjhB,EAAUkhB,GAC/BH,EAAYI,WAAa,IACzBJ,EAAYK,UAAY,IACxBL,EAAYM,WAAa,SAEzBN,EAAY1kB,iBAAiB,gBAAkB5C,IAC7CA,EAAEgb,kBACFna,KAAKgnB,gBAAgB7nB,EAAEwG,UAGzB3F,KAAKD,IAAI2B,cAAc,wBAAwBuY,YAAYwM,GAC3DzmB,KAAKinB,mBAAqBR,EAG1BxmB,EAAAA,aAAaC,KAAK,yBAA0BF,KAC9C,CAEAgnB,eAAAA,CAAgBE,GACd,MAAMxhB,EAAY1F,KAAKwmB,yBACvB,IAAK,MAAMxhB,KAAOkiB,EAChBxhB,EAAUV,GAAOkiB,EAAaliB,IAEhCkH,EAAAA,EAAAA,0BAAyBlM,KAAKwkB,KAAM9e,EACtC,CAEAid,sBAAAA,CAAuBC,GACHA,EAAW5iB,KAAKwkB,KAEpC,CAEAgC,sBAAAA,GACE,IAAI9gB,GAAYuf,EAAAA,EAAAA,0BAAyBjlB,KAAKwkB,MAE9C9e,EAAYA,GAER1F,KAAKsmB,iBAAiB3V,MAAMrG,OAC1B,CAACC,EAAKuG,IAASpR,OAAO8Q,OAAOjG,EAAK,CAAE,CAACuG,EAAKvR,IAAKuR,EAAK4Q,UACpD,CAAC,GAGP,IAAK,MAAM5Q,KAAQ9Q,KAAKsmB,iBAAiB3V,MACvCjL,EAAUoL,EAAKvR,IAAMmG,EAAUoL,EAAKvR,IAChCmG,EAAUoL,EAAKvR,IACfS,KAAKsmB,iBAAiB3V,MAAMtB,KACzB8X,GAAcA,EAAU5nB,KAAOuR,EAAKvR,IACrCmiB,QAER,OAAOhc,CACT,E,kFCjEa,MAAM0hB,EAEnBtnB,WAAAA,CAAYunB,GACVrnB,KAAKsnB,MAAMD,EACb,CAEAC,KAAAA,CAAMD,GACJ,GAAIA,EAAahnB,UAAUmc,SAAS,aAAc,OAqBlD,GAlBA6K,EAAa3lB,cAAc,mBAAmBK,iBAAiB,QAASwlB,IACtEF,EAAahnB,UAAUqkB,OAAO,cAE1B2C,EAAahnB,UAAUmc,SAAS,kBAClCxc,KAAKwnB,gBAAgBhiB,QAAQyL,IAC3B,MAAMwW,EAAoBxW,EAAOyW,UAAUlY,KAAKmY,GAAMA,EAAGjmB,cAAc,kBAAkBrB,UAAUmc,SAAS,eAC5GvL,EAAO2W,GAAGzc,MAAM0c,QAAUJ,EAAoB,OAAS,cAI3D3D,OAAOtF,aAAaO,QAAQ+I,EAAYT,EAAahnB,UAAUmc,SAAS,cAAgB,YAAc,IAE9D,oBAApC6K,EAAahmB,QAAQymB,YACvB9D,EAAAA,EAAqBvU,WAKrB4X,EAAahnB,UAAUmc,SAAS,iBAAkB,CACpDxc,KAAKwnB,gBAAkB,GACvB,MAAME,EAAY,GACZ7W,EAAQO,SAASiW,EAAahmB,QAAQ0mB,eAC5C,IAAI7gB,EAAamgB,EACjB,KAA8B,OAAvBngB,EAAW2Q,SAChB3Q,EAAaA,EAAWA,WAE1BwgB,EAAU7W,GAAS3J,EACnB,IAAI8gB,EAAS9gB,EAAW+gB,YACxB,KAAkB,OAAXD,GAAiB,CACtB,IAAqBE,EAAjB3Y,GAAU,EACd,MAAM0B,EAAS+W,EAAOtmB,cAAc,uCAUpC,GATIuP,IACFiX,EAAcjX,EAAO5P,QAAQ0mB,cACzBG,IACFA,EAAc9W,SAAS8W,GACnBA,EAAcrX,IAChBtB,GAAU,MAIZA,EAQF,MAPAmY,EAAUQ,GAAeF,EACzBhoB,KAAKwnB,gBAAgB9c,KAAK,CACxBgd,UAAWA,EAAUhO,MAAM7I,EAAOqX,GAClCN,GAAKI,IAEPA,EAASA,EAAOC,WAIpB,CACF,CAGA,MAAMH,EAAaT,EAAahmB,QAAQymB,WACpCA,GAA0D,cAA5ChE,OAAOtF,aAAaC,QAAQqJ,IAC5CT,EAAa3lB,cAAc,mBAAmB0K,cAAc,IAAImY,MAAM,SAG1E,E,kCC9DF,MAAM4D,EAAoB,cAEX,MAAMC,UAAmCxD,EAAAA,EACtD9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,eAEX,MAAMglB,GAAkBwB,EAAAA,EAAAA,gCAA+BvmB,KAAKwkB,MACtD6D,GAAW9B,EAAAA,EAAAA,gCACf,wBACA5V,MAEF3Q,KAAKglB,WAAWD,EAAiBsD,GAEjCtoB,EACGsD,iBAAiB,kBACjBmC,QAAS6hB,GAAiB,IAAID,EAAaC,IAE9C,MAAM3hB,GAAYuf,EAAAA,EAAAA,0BAAyBjlB,KAAKwkB,MAChDxkB,KAAKklB,cAAgB,CAAC,EACtBllB,KAAKD,IACFsD,iBAAiB,sCACjBmC,QAAS+W,IACRvc,KAAKklB,cAAc3I,EAAM3O,OAAS,CAChC2O,MAAOA,EACP3O,MAAO2O,EAAMrV,WAAWie,oBAEtBzf,GAAaA,EAAU6W,EAAM3O,SAE/B2O,EAAMtN,QAAqC,MAA3BvJ,EAAU6W,EAAM3O,UAGtC5N,KAAKklB,cAAcG,IAAIzW,OAAS5O,KAAKsoB,WAAWD,EAAU,IAC1DroB,KAAKuoB,yBAEL,IAAK,MAAMvjB,KAAOhF,KAAKklB,cACrBllB,KAAKklB,cAAclgB,GAAKuX,MAAMxa,iBAC5B,SACA/B,KAAKolB,cAAcllB,KAAKF,OAG5BC,EAAAA,aAAaC,KAAK,yBAA0BF,MAC5CC,EAAAA,aAAaC,KAAK,wBAAyBF,KAC7C,CAiCAglB,UAAAA,CAAWD,EAAiBsD,GAC1B,IAAIhd,EAAO,2QAUXA,GAAQgd,EACL1pB,IAAKuC,GAAUlB,KAAKuS,OAAOwS,EAAiB7jB,IAC5CiE,KAAK,IACRnF,KAAKD,IACF2B,cAAc,gCACdykB,mBAAmB,YAAa9a,GAEnCrL,KAAKD,IACF2B,cAAc,qDACdrB,UAAUC,OAAO,aACtB,CAEAiS,MAAAA,CAAOwS,EAAiBjU,GACtB,MAAM0X,EAA8B,iBAAT1X,EAK3B,MAAO,0BAEH0X,EAAc,wCAA0C,iBAEtDA,EAAc,qCAAuC,+EAR3D1X,EAAO0X,EACH1X,EACAiU,EAAgBpU,MAAMtB,KAAM3J,GAAcA,EAAUnG,KAAOuR,IASlDvR,GAAKuR,EAAKvR,GAAKuR,EAAK5L,6BACH4L,EAAKH,MAAQ,OAAS,gCAC5CG,EAAK5L,yEAIPsjB,EACI,sEAEF1X,EAAKH,MACJhS,IAAKmS,GAAS9Q,KAAKuS,OAAOwS,EAAiBjU,IAC3C3L,KAAK,+BAGJ,uBAIZ,CAGAmjB,UAAAA,CAAW3X,EAAO8X,GAChB,IAAI7Z,EAAS,GACb,IAAK,MAAMkC,KAAQH,EAAO,CAExB,GADoC,iBAATG,EACV,CACf,MAAM4X,EAAU1oB,KAAKsoB,WAAWxX,EAAKH,MAAO,IAC5C3Q,KAAKklB,cAAcpU,EAAK5L,OAAO0J,OAAS8Z,EACxC9Z,EAASA,EAAO+Z,OAAOD,EACzB,MACED,EAAY/d,KAAKoG,EAErB,CAEA,OADAlC,EAASA,EAAO+Z,OAAOF,GAChB7Z,CACT,CAGAwW,aAAAA,CAAcjmB,GACZ,GAAIA,GAAwB,QAAnBA,EAAE8R,OAAOrD,MAEhB,GAAIzO,EAAE8R,OAAOhC,QAEX,IAAK,MAAMjK,KAAOhF,KAAKklB,cACrBllB,KAAKklB,cAAclgB,GAAKuX,MAAMtN,SAAU,OAI1C,IAAK,MAAMjK,KAAOhF,KAAKklB,cACrBllB,KAAKklB,cAAclgB,GAAKuX,MAAMtN,SAAU,OAGvC,GAAqC,SAAjC9P,EAAE8R,OAAO5P,QAAQmnB,YAE1B,IAAK,MAAM5a,KAAS5N,KAAKklB,cAAc/lB,EAAE8R,OAAOrD,OAAOgB,OACrD5O,KAAKklB,cAActX,GAAO2O,MAAMtN,QAAU9P,EAAE8R,OAAOhC,aAIrDjP,KAAKuoB,yBAGP,MAAMtZ,EAAU,CAAC,EACjB,IAAK,MAAMjK,KAAOhF,KAAKklB,cAAe,MAEf5V,IADPtP,KAAKklB,cAAclgB,GACvB4J,SACRK,EAAQjK,GAAOhF,KAAKklB,cAAclgB,GAAKuX,MAAMtN,QAAU,IAAM,IAEjE,EACA/C,EAAAA,EAAAA,0BAAyBic,EAAmBlZ,EAC9C,CAEAsZ,sBAAAA,GACE,IAAK,MAAMvjB,KAAOhF,KAAKklB,cAAe,CACpC,MAAM3I,EAAQvc,KAAKklB,cAAclgB,GAC7BuX,EAAM3N,SAER2N,EAAMA,MAAMtN,SAAWsN,EAAM3N,OAAOtE,OAClC,CAACme,EAAa7a,IACZ6a,GAAezoB,KAAKklB,cAActX,GAAO2O,MAAMtN,QACjD,GAGN,CACF,CAGA0T,sBAAAA,CAAuBC,GACrB,IAAK,MAAM5d,KAAO4d,EAAWuF,GAC3BnoB,KAAKklB,cAAclgB,GAAKuX,MAAMtN,QACW,MAAvC2T,EAAWuF,GAAmBnjB,GAElChF,KAAKuoB,wBACP,CAGAK,qBAAAA,CAAsBha,GACpB,GAAIA,EACF,IAAK,MAAM5J,KAAOhF,KAAKklB,cAAe,CACpC,MAAM3I,EAAQvc,KAAKklB,cAAclgB,QACZsK,IAAjBiN,EAAM3N,SAER2N,EAAM3O,MAAM2X,aACV3W,EAAO5J,GAAO4J,EAAO5J,GAAO,GAC5BwgB,iBAEN,MAGA,IAAK,MAAMxgB,KAAOhF,KAAKklB,cAAe,MAEf5V,IADPtP,KAAKklB,cAAclgB,GACvB4J,SACR5O,KAAKklB,cAAclgB,GAAK4I,MAAM2X,YAAc,IAEhD,CAEFvlB,KAAKklB,cAAcG,IAAIzX,MAAM2X,YAActlB,EAAAA,aACxCgM,QAAQ,gBACRwZ,SAASD,gBACd,E,sGCxOa,MAAMqD,UAA6CjE,EAAAA,EAChE9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,WACXE,EAAAA,aAAaC,KAAK,yBAA0BF,MAE5CA,KAAK8O,SAAW9O,KAAKD,IAAI2B,cAAc,4BAEvC1B,KAAK8O,SAAS/M,iBAAiB,SAAU/B,KAAK8oB,OAAO5oB,KAAKF,OAC1DA,KAAK8O,SAAS1C,cAAc,IAAImY,MAAM,WAEtC,MAAM7e,GAAYuf,EAAAA,EAAAA,0BAAyBjlB,KAAKwkB,MAChDxkB,KAAK8O,SAASG,aAAwBK,IAAd5J,CAC1B,CAEAojB,MAAAA,CAAO3pB,IACL+M,EAAAA,EAAAA,0BAAyB,UAAW/M,EAAE8R,OAAOhC,QAAU,IAAM,IAC/D,CAEA0T,sBAAAA,CAAuBC,QACMtT,IAAvBsT,EAAWmG,UACb/oB,KAAK8O,SAASG,QAAiC,MAAvB2T,EAAWmG,QAEvC,E,gHCtBa,MAAMC,UAAqDpE,EAAAA,EACxE9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,eACXE,EAAAA,aAAaC,KAAK,cAAeF,MACjCC,EAAAA,aAAaC,KAAK,SAAUF,MAC5B,MAAMipB,EAAQjpB,KAAKD,IAAI2B,cAAc,6BACrC1B,KAAKkpB,SAAU3C,EAAAA,EAAAA,gCAA+B,WAAW5V,MAEzDsY,EAAMznB,UAAYxB,KAAKkpB,QACpBvqB,IAAK0C,GACAA,EAAQ8nB,SACH,qBAAqB9nB,EAAQ9B,6EAEQ8B,EAAQ9B,uFAGhD8B,EAAQ6D,mJAOL,IAGVC,KAAK,IAERnF,KAAKopB,UAAY,CAAC,EAClB,IAAK,MAAM/nB,KAAWrB,KAAKkpB,QACzB,GAAI7nB,EAAQ8nB,SAAU,CACpB,MAAMxB,EAAKsB,EAAMvnB,cAAc,oBAAoBL,EAAQ9B,QAC3DS,KAAKopB,UAAU/nB,EAAQ9B,IAAM,CAC3B8pB,IAAK1B,EAAGjmB,cAAc,QACtB4nB,MAAO3B,EAAGjmB,cAAc,UACxBylB,UAAWQ,EAAGjmB,cAAc,cAEhC,CAEJ,CAEA6nB,WAAAA,GACEvpB,KAAK+O,SACP,CAEAya,MAAAA,GACExpB,KAAK+O,SACP,CAEAA,OAAAA,GACE,QAA4CO,IAAxCrP,EAAAA,aAAagM,QAAQ,eAA8B,CACrD,MAAMwd,EAASxpB,EAAAA,aAAaypB,oBAC5B,GAAID,EACF,IAAK,MAAMpoB,KAAWrB,KAAKkpB,QACzB,GAAI7nB,EAAQ8nB,SAAU,CACpB,MAAMhC,EAAYsC,EAAOE,YACrBF,EAAOE,YAAYta,KAChB8X,GAAcA,EAAUyC,SAAWvoB,EAAQ9B,IAE9C,KACJ,GAAI4nB,EAMF,GAJAnnB,KAAKopB,UAAU/nB,EAAQ9B,IAAI8pB,IAAI9D,YAC7B4B,EAAU0C,GAAGrE,iBACfxlB,KAAKopB,UAAU/nB,EAAQ9B,IAAI+pB,MAAM/D,YAC/B4B,EAAU2C,GAAGtE,kBACV2B,EAAU4C,GAAK,IAAIxoB,OAASyoB,EAAmB,CAElD,MAAMC,GAAe9C,EAAU4C,GAAK,IAAIxoB,OAClC2oB,GACJ/C,EAAU4C,GAAK,IAAME,EACrB,IACAE,SAASF,EAAa,KAQlBG,EAPU1gB,KAAK+B,MACnB4e,WACEH,EAAYxQ,MAAM,EA7EhB,GA8EA,IACAwQ,EAAYxQ,MA/EZ,KAkFoB,IAC1B1Z,KAAKopB,UAAU/nB,EAAQ9B,IAAI4nB,UAAU5B,YACnC6E,EAAU,EACNA,EACAjD,EAAU4C,GAAGO,cAAcN,EACnC,MACEhqB,KAAKopB,UAAU/nB,EAAQ9B,IAAI4nB,UAAU5B,aAAcgF,EAAAA,EAAAA,SAE/C7gB,KAAK+B,MAAqB,IAAf0b,EAAU4C,IAA4B,IACjDI,SAASH,EAAmB,MA3F1B,EA6FJ,UAIJhqB,KAAKopB,UAAU/nB,EAAQ9B,IAAI8pB,IAAI9D,YAAc,GAC7CvlB,KAAKopB,UAAU/nB,EAAQ9B,IAAI+pB,MAAM/D,YAAc,GAC/CvlB,KAAKopB,UAAU/nB,EAAQ9B,IAAI4nB,UAAU5B,YAAc,EAEvD,CAGN,CACF,E,sGC1Ga,MAAMiF,UAA6C5F,EAAAA,EAChE9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,wBACXE,EAAAA,aAAaC,KAAK,cAAeF,MACjCC,EAAAA,aAAaC,KAAK,SAAUF,MAC5BA,KAAKyqB,QAAUzqB,KAAKD,IAAI2B,cAAc,WACxC,CAEA6nB,WAAAA,GACEvpB,KAAKyP,QACP,CAEA+Z,MAAAA,GACExpB,KAAKyP,QACP,CAEAA,MAAAA,GACE,IAAIpE,EAAO,GACX,QAA4CiE,IAAxCrP,EAAAA,aAAagM,QAAQ,eAA8B,CACrD,MAAMwd,EAASxpB,EAAAA,aAAaypB,oBAC5B,GAAID,GAAUA,EAAOiB,aAAc,CACjC,MAAM/b,GAAS4X,EAAAA,EAAAA,gCAA+B,gBAI9C,SAASoE,EAAcrV,GACrB,MAAMsV,EAAS,CAAC,EAEhBtV,EAAK9P,QAASqlB,IAES,UAAjBA,EAAMjB,QACwB,IAA5BiB,EAAMjI,WAAWrhB,QACnBspB,EAAMjI,WAAWlY,KAAK,CAAEogB,KAAM,SAAUC,OAAQ,KAIpDF,EAAMjI,WAAWpd,QAASE,IACxB,MAAMqlB,EAASrlB,EAAUqlB,OACnBC,EAAatlB,EAAUolB,KAGxBF,EAAOG,KACVH,EAAOG,GAAU,CACfD,KAAME,EACNC,gBAAiB,CAAC,IAItBJ,EAAMI,gBAAgBzlB,QAAS0lB,IAExBN,EAAOG,GAAQE,gBAAgBC,GAMlCN,EAAOG,GAAQE,gBAAgBC,GAAgB3qB,IAC7CsqB,EAAMjB,QANRgB,EAAOG,GAAQE,gBAAgBC,GAAkB,IAAIC,IAAI,CACvDN,EAAMjB,eA2BhB,OAAOwB,EAdS1rB,OAAOD,KAAKmrB,GAAQjsB,IAAKosB,IAAM,CAC7CA,SACAD,KAAMF,EAAOG,GAAQD,KACrBG,gBAAiBvrB,OAAOD,KAAKmrB,EAAOG,GAAQE,iBAAiBtsB,IAC1DusB,IAAc,CACbA,iBACAG,QAASloB,MAAMC,KACbwnB,EAAOG,GAAQE,gBAAgBC,UAQzC,CAEA,SAASE,EAA6B9V,GAEpC,MAAMgW,EAAU,CAAC,EA6BjB,OA3BAhW,EAAK9P,QAASqlB,IAEZ,IAAIU,EAAqB,GACzBV,EAAMI,gBAAgBzlB,QAASgmB,IAC7BD,EAAmB7gB,KAAK8gB,EAAkBN,kBAIvCI,EAAQC,KACXD,EAAQC,GAAsB,IAGhCD,EAAQC,GAAoB7gB,KAAKmgB,GACjCU,EAAqB,KAIvB7rB,OAAOD,KAAK6rB,GAAS9lB,QAASR,IAC5BsmB,EAAQtmB,GAAOsmB,EAAQtmB,GAAKmC,KAAK,CAACskB,EAAGC,KACnC,MAAMC,EAAQF,EAAEX,MAAQ,GAClBc,EAAQF,EAAEZ,MAAQ,GACxB,OAAOa,EAAME,cAAcD,OAAOtc,EAAW,CAC3Cwc,YAAa,aAKZpsB,OAAOkP,OAAO0c,GAASS,MAChC,CAIA1gB,EAD4Bsf,EA9FVqB,gBAAgBvC,EAAOiB,eAgGtC/rB,IAAK2W,GACG,0FAIS,cAAhBA,EAAKyV,QAA0C,KAAhBzV,EAAKyV,OAChCzV,EAAKwV,KACL,qBAAqBxV,EAAKyV,wEAC1BzV,EAAKwV,0CAITxV,EAAK2V,gBACD3V,EAAK2V,gBACFtsB,IACEusB,GAAmB,oFAGxBA,EAAeA,qCAGbvc,EAAOgC,MAAMtB,KACVyB,GAASA,EAAKvR,KAAO2rB,EAAeA,gBACrChmB,8FAKFgmB,EAAeG,QAAQ7T,SAAS,SAC5B,mCACA,uBAGJ0T,EAAeG,QAAQ7T,SAAS,WAC5B,uCACA,gDAKHrS,KAAK,IACR,uBAILA,KAAK,IACRnF,KAAKD,IAAIM,UAAUC,OAAO,YAC5B,CACF,MACEN,KAAKD,IAAIM,UAAUE,IAAI,aAEzBP,KAAKyqB,QAAQjpB,UAAY6J,CAC3B,E,sGC3Ka,MAAM4gB,UAAoCrH,EAAAA,EACvD9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,eACXE,EAAAA,aAAaC,KAAK,cAAeF,MACjCC,EAAAA,aAAaC,KAAK,SAAUF,MAC5BA,KAAKksB,SAAWlsB,KAAKD,IAAI2B,cAAc,WACzC,CAEA6nB,WAAAA,GACEvpB,KAAK+O,SACP,CAEAya,MAAAA,GACExpB,KAAK+O,SACP,CAEAA,OAAAA,GACE,IAAI1D,EAAO,GAEX,GADArL,KAAKD,IAAIM,UAAUE,IAAI,kBACqB+O,IAAxCrP,EAAAA,aAAagM,QAAQ,eAA8B,CACrD,MAAMwd,EAASxpB,EAAAA,aAAaypB,oBAC5B,GAAID,GAAUA,EAAO0C,aAAe1C,EAAO0C,YAAY5qB,OAAS,EAAG,CAEjE,IAAI6qB,EAAa3C,EAAO0C,YACrBxtB,IAAK0tB,GAAeA,EAAWzc,aAC/BtF,OAAO,CAACgiB,EAAOC,IAAWD,EAAM3D,OAAO4D,IAC1CH,EAAajpB,MAAMC,KAAK,IAAI+nB,IAAIiB,IAChC,MAAMzd,GAAS4X,EAAAA,EAAAA,gCAA+B,eAI9Clb,EAHqB+gB,EAAWztB,IAAK6tB,GACnC7d,EAAOgC,MAAMtB,KAAMO,GAAgBA,EAAYrQ,KAAOitB,IAGrD7tB,IACEiR,GACC,kCAAkCA,EAAY1K,iBAAiB0K,EAAY6c,yBAE9EtnB,KAAK,IACRnF,KAAKD,IAAIM,UAAUC,OAAO,YAC5B,CACF,CACAN,KAAKksB,SAAS1qB,UAAY6J,CAC5B,E,yYC5CmD,IAAAqhB,EAAA,IAAAzR,QAEtC,MAAM0R,UAAsC/H,EAAAA,EACzD9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,WAAWob,EAAA,KAAAuR,GACtBzsB,EAAAA,aAAaC,KAAK,cAAeF,MACjCC,EAAAA,aAAaC,KAAK,SAAUF,MAC5BA,KAAK4sB,MAAQ5sB,KAAKD,IAAI2B,cAAc,6BACtC,CAEA6nB,WAAAA,GACEvpB,KAAKyP,QACP,CAEA+Z,MAAAA,GACExpB,KAAKyP,QACP,CAEAA,MAAAA,GACE,IAAIpE,EAAO,GAEX,GADArL,KAAKD,IAAIM,UAAUE,IAAI,kBACqB+O,IAAxCrP,EAAAA,aAAagM,QAAQ,eAA8B,CACrD,MAAMwd,EAASxpB,EAAAA,aAAaypB,oBAC1BmD,EAAO,GACLpD,GAAUA,EAAOqD,gBAEfrD,EAAOqD,cAAcC,OACvBtD,EAAOqD,cAAcC,MAAMvnB,QAASsL,IAClC+b,EAAKniB,KAAK6Q,EAAAmR,EAAA1sB,KAAKgtB,GAAexR,KAApBxb,KAAqB,SAAU8Q,EAAKmc,MAAOnc,EAAKoc,SAK1DzD,EAAOqD,cAAcK,OACvB1D,EAAOqD,cAAcK,MAAM3nB,QAASsL,IAClC+b,EAAKniB,KAAK6Q,EAAAmR,EAAA1sB,KAAKgtB,GAAexR,KAApBxb,KAAqB,QAAS8Q,EAAKmc,MAAOnc,EAAKoc,SAKzDzD,EAAOqD,cAAcM,SACvB3D,EAAOqD,cAAcM,QAAQ5nB,QAASsL,IACpC+b,EAAKniB,KAAK6Q,EAAAmR,EAAA1sB,KAAKgtB,GAAexR,KAApBxb,KAAqB,UAAW8Q,EAAKmc,MAAOnc,EAAKoc,SAK3DzD,EAAOqD,cAAcO,OACvB5D,EAAOqD,cAAcO,MAAM7nB,QAASsL,IAClC+b,EAAKniB,KAAK6Q,EAAAmR,EAAA1sB,KAAKgtB,GAAexR,KAApBxb,KAAqB,QAAS8Q,EAAKmc,MAAOnc,EAAKoc,SAKzDzD,EAAOqD,cAAcQ,QACvB7D,EAAOqD,cAAcQ,OAAO9nB,QAASsL,IACnC+b,EAAKniB,KAAK6Q,EAAAmR,EAAA1sB,KAAKgtB,GAAexR,KAApBxb,KAAqB,SAAU8Q,EAAKmc,MAAOnc,EAAKoc,UAK5DL,EAAKtrB,OAAS,IAChB8J,EAAO,oDAEOwhB,EACCluB,IACEmS,GACC,WAAWA,EAAKmc,iBAAiBnc,EAAK2Z,qBAEzCtlB,KAAK,oDAGpBnF,KAAKD,IAAIM,UAAUC,OAAO,aAE9B,CACAN,KAAK4sB,MAAMprB,UAAY6J,CACzB,EASD,SAAA2hB,EAPiBC,EAAO/nB,EAAOqoB,GAK5B,MAAO,CAAEN,QAAOxC,QAJA,sCAEG8C,mDAAqDroB,0BAG1E,C,4FClFa,MAAMsoB,UAA6B5I,EAAAA,EAChD9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,WACXE,EAAAA,aAAaC,KAAK,cAAeF,MACjCC,EAAAA,aAAaC,KAAK,SAAUF,MAC5BA,KAAK4sB,MAAQ5sB,KAAKD,IAAI2B,cAAc,6BACtC,CAEA6nB,WAAAA,GACEvpB,KAAKyP,QACP,CAEA+Z,MAAAA,GACExpB,KAAKyP,QACP,CAEAA,MAAAA,GACE,IAAIpE,EAAO,GAEX,GADArL,KAAKD,IAAIM,UAAUE,IAAI,kBACqB+O,IAAxCrP,EAAAA,aAAagM,QAAQ,eAA8B,CACrD,MAAMwd,EAASxpB,EAAAA,aAAaypB,oBAC5B,GAAID,GAAUA,EAAOgE,QACnB,IAAK,MAAMC,KAAUjE,EAAOgE,QAC1BpiB,GAAQ,qIAMEqiB,EAAOnuB,oDAEfmuB,EAAO5C,uEAKwB,IAA3B4C,EAAOC,SAASpsB,OACZ,GACA,yBAAyBmsB,EAAOC,SAASxoB,KACvC,sDAMZnF,KAAKD,IAAIM,UAAUC,OAAO,YAGhC,CACAN,KAAK4sB,MAAMprB,UAAY6J,CACzB,E,4FClDa,MAAMuiB,UAA+BhJ,EAAAA,EAClD9kB,WAAAA,CAAYC,GACViB,MAAMjB,EAAK,WACXE,EAAAA,aAAaC,KAAK,cAAeF,MACjCC,EAAAA,aAAaC,KAAK,SAAUF,MAC5BA,KAAKitB,MAAQjtB,KAAKD,IAAI2B,cAAc,SACtC,CAEA6nB,WAAAA,GACEvpB,KAAKyP,QACP,CAEA+Z,MAAAA,GACExpB,KAAKyP,QACP,CAEAA,MAAAA,GACE,IAAIpE,EAAO,GAEX,QAA4CiE,IAAxCrP,EAAAA,aAAagM,QAAQ,eAA8B,CACrD,MAAMwd,EAASxpB,EAAAA,aAAaypB,oBACxBD,GAAUA,EAAOlqB,IACnB8L,EAAO,kDAAkDoe,EAAOlqB,uCAEhES,KAAKD,IAAIM,UAAUC,OAAO,cAE1B+K,EAAO,mEAEPrL,KAAKD,IAAIM,UAAUE,IAAI,YAE3B,CAEAP,KAAKitB,MAAMzrB,UAAY6J,CACzB,E,4FCjCa,MAAMwiB,EACnB/tB,WAAAA,CAAYC,GACVC,KAAKmB,KAAOpB,EACZC,KAAK0N,MAAQ/K,SAAS+f,qBAAqB,QAAQ,GAEnDziB,EAAAA,aAAaC,KAAK,cAAeF,MAEjC,MAAM8tB,EAAiB9tB,KAAKmB,KAAK4sB,YAAc/tB,KAAKmB,KAAKoQ,YACzDvR,KAAKmB,KAAKgK,MAAMyI,MAAQ,GAAG5T,KAAKmB,KAAK4sB,YAAcD,MACnD9tB,KAAKmB,KAAKgK,MAAM6iB,YAAc,IAAIF,MAElC9tB,KAAKiuB,mBACP,CAEAA,iBAAAA,GACsBjuB,KAAKmB,KAAKO,cAC5B,oCAEUK,iBAAiB,QAAS,MACpCmsB,EAAAA,EAAAA,gCAEJ,CAIA3E,WAAAA,CAAYtkB,QACIqK,IAAVrK,EAEFjF,KAAK0N,MAAMrN,UAAUC,OAAO,gBAG5BN,KAAK0N,MAAMrN,UAAUE,IAAI,eAE7B,E,kFClCa,MAAM4tB,EACnBruB,WAAAA,GACE,MAAMsuB,EAAkBzrB,SAASU,iBAAiB,qBAChDiS,EAAOtV,KAAKiM,UAEdmiB,EAAgB5oB,QAAS6oB,IACvBA,EAAYtsB,iBACV,YACA/B,KAAKsuB,WAAWD,EAAa/Y,KAGnC,CAGArJ,OAAAA,GACE,MAAMsiB,EAAOC,EAAQ,MAGrB,OAFA9uB,OAAO+uB,OAAOF,GAEPA,CACT,CAEAD,UAAAA,CAAW7pB,EAAI6Q,GACb,MAAM/V,EAAKkF,EAAGiqB,aAAa,mBAE3B,IACE,MAAMC,EAAUrZ,EAAKjG,KAAMwb,GAAUA,EAAMtrB,KAAOA,GAChDqvB,EAAW5uB,KAAK6uB,eAAeF,IAEjCG,EAAAA,EAAAA,IAAMrqB,EAAI,CACRgmB,QAASmE,EAASptB,UAClButB,WAAW,EACXhY,UAAW,OACXF,SAAU,CAAC,KACXmY,aAAa,EACbC,MAAO,QACPC,UAAW,MACXC,SAAUxsB,SAASwd,KACnBiP,SAAU,QACVC,MAAO,CAAC,IAAK,KACb7F,OAAQxpB,KAAKwpB,OAAO/kB,GACpB6qB,OAAQ,OAEZ,CAAE,MAAOC,GACPC,QAAQC,MACN,iEAAiElwB,6DAErE,CACF,CAEAsvB,cAAAA,CAAeF,GACb,MAAMC,EAAWjsB,SAASC,cAAc,QACtC8sB,EAAW/sB,SAASC,cAAc,KAQpC,OANA8sB,EAASniB,UAAY,UACrBmiB,EAASC,UAAYhB,EAAQlE,QAEzB,QAASkE,GAASe,EAASzV,YAAYja,KAAK4vB,aAAajB,EAAQpB,MACrEqB,EAAS3U,YAAYyV,GAEdd,CACT,CAEAgB,YAAAA,CAAarC,GACX,MAAMvN,EAASrd,SAASC,cAAc,KAMtC,OAJAod,EAAOzS,UAAY,MACnByS,EAAOC,KAAOsN,EACdvN,EAAO2P,UAAY,YAEZ3P,CACT,CAGAwJ,MAAAA,CAAO/kB,GACL,MAAM0G,EAAQ2Y,OAAOzM,iBAAiB5S,GACpCorB,EAAQprB,EAAGiP,wBAEb,MAAwB,SAApBvI,EAAMwJ,UAA6B,CAAC,EAAG,GACpC,CAAe,IAAdkb,EAAMjc,MAAe,GAAmB,GAAdic,EAAMjc,MAA4B,GAAdic,EAAMjc,MAAa,EAC3E,E,kCCnCF,QA9CA,MAGE9T,WAAAA,GACEE,KAAK8vB,UAAW,CAClB,CAIAC,IAAAA,CAAKC,GACHhwB,KAAK8vB,UAAW,EAChB9vB,KAAKgwB,QAAUA,EAGfhwB,KAAKiwB,cAAgBttB,SAASwJ,eAAe,gBAC7CnM,KAAKkwB,iBAAmBvtB,SAASwJ,eAAe,mBAChDnM,KAAKmwB,mBAAqBxtB,SAASwJ,eAAe,qBAClDnM,KAAKowB,YAAcztB,SAASjB,cAAc,gBAG1C1B,KAAKyP,SAGLqU,OAAO/hB,iBAAiB,SAAU/B,KAAKyP,OAAOvP,KAAKF,OACnD8jB,OAAO1X,cAAc,IAAImY,MAAM,UACjC,CAGA9U,MAAAA,GACE,IAAKzP,KAAK8vB,SAAU,OAEpB,MAAMO,EAAqBrwB,KAAKiwB,eAAexjB,cAAgB,EACzD6jB,EAAoBtwB,KAAKkwB,kBAAkBzjB,cAAgB,EAC3D8jB,EAAkBvwB,KAAKowB,aAAaI,WAAa,EACjDC,EAAe3M,OAAO4M,YAAcH,EAGtCvwB,KAAKmwB,qBACPnwB,KAAKmwB,mBAAmBhlB,MAAMC,OAAS,gBAAgBilB,EAAqBC,EAAoBG,QAIlGzwB,KAAKgwB,QAAQxqB,QAAQyL,GAAUA,EAAO0f,oBACxC,E,kIC3CK,MAAMC,EAA0B,CACrC,gBAAiB,CACfC,MAAO,UACPC,IAAK,EACL/T,IAAK,IACLgU,kBAAmB,MACnBC,kBAAmB,MAErBC,UAAW,CACTJ,MAAO,UACPC,IAAK,IACL/T,IAAK,KACLgU,kBAAmB,MACnBC,kBAAmB,OAErB,oBAAqB,CACnBH,MAAO,UACPC,IAAK,KACL/T,IAAK,EACLgU,kBAAmB,KACnBC,kBAAmB,QA6CVE,EAAc,CACzBC,cAAe,CACbjsB,MAAO,gBACPksB,gBAAiB,CAAC,cAClBC,UAAWT,GAEbU,KAAM,CACJpsB,MAAO,OACPksB,gBAAiB,CAAC,cAClBC,UAlDmB,CACrBE,UAAW,CACTV,MAAO,UACPC,IAAK,EACL/T,IAAK,IACLgU,kBAAmB,MACnBC,kBAAmB,MAErBQ,YAAa,CACXX,MAAO,UACPC,IAAK,IACL/T,IAAK,EACLgU,kBAAmB,MACnBC,kBAAmB,SAuCrBS,SAAU,CACRvsB,MAAO,WACPksB,gBAAiB,CAAC,aAAc,WAChCC,UAtCuB,CACzBK,OAAQ,CACNb,MAAO,UACPC,IAAK,EACL/T,IAAK,KACLgU,kBAAmB,MACnBC,kBAAmB,OAErBW,kBAAmB,CACjBd,MAAO,UACPC,IAAK,KACL/T,IAAK,KACLgU,kBAAmB,KACnBC,kBAAmB,OAErBY,kBAAmB,CACjBf,MAAO,UACPC,IAAK,KACL/T,IAAK,EACLgU,kBAAmB,KACnBC,kBAAmB,S,yJC7DE,EAAe,EAAAve,GAAG,6zK,+qNCS3C,MAAMof,EAAgB,CACpBf,IAAK,EACL/T,IAAK,EACL+U,KAAM,IACNC,eAAgB,GAChBC,YAAa,OAEfH,EAAcI,eACXJ,EAAc9U,IAAM8U,EAAcf,KAAOe,EAAcE,eAyR1D,M,ixBArR2BG,CAAA,EAD1BC,EAAAA,EAAAA,eAAc,4BAA0B,SAAAC,EAAAC,GAoRxC,OAAAC,EApRD,cAC2BD,EAAoBvyB,WAAAA,IAAAkT,GAAA,SAAAA,GAAAof,EAAA,QAApBG,EAAA,EAAA/N,KAAA,QAAAgO,QAAA,EAAAxtB,IAAA,SAAA4I,KAAAA,GAAA,MACT,CAAC6kB,EAAO,IAAAjO,KAAA,QAAAkO,WAAA,EAEvBC,EAAAA,EAAAA,UAAS,CAAE3uB,KAAMsB,OAAQqQ,SAAS,EAAMD,UAAW,kBAAiB1Q,IAAA,sBAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAEpEC,EAAAA,EAAAA,UAAS,CAAE3uB,KAAM4uB,OAAQjd,SAAS,EAAMD,UAAW,oBAAmB1Q,IAAA,WAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAEtEC,EAAAA,EAAAA,UAAS,CAAE3uB,KAAM4uB,OAAQjd,SAAS,EAAMD,UAAW,oBAAmB1Q,IAAA,WAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAEtEC,EAAAA,EAAAA,UAAS,CACR3uB,KAAMsB,OACNqQ,SAAS,EACTD,UAAW,8BACX1Q,IAAA,oBAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAEDC,EAAAA,EAAAA,UAAS,CACR3uB,KAAMsB,OACNqQ,SAAS,EACTD,UAAW,8BACX1Q,IAAA,oBAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAEDC,EAAAA,EAAAA,UAAS,CAAE3uB,KAAMb,SAAQ6B,IAAA,mBAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EACzBC,EAAAA,EAAAA,UAAS,CAAE3uB,KAAMtE,UAASsF,IAAA,gBAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAC1BC,EAAAA,EAAAA,UAAS,CAAE3uB,KAAMtE,UAASsF,IAAA,kBAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAE1BG,EAAAA,EAAAA,UAAS,yCAAuC7tB,IAAA,eAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAChDG,EAAAA,EAAAA,UAAS,uCAAqC7tB,IAAA,cAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAC9CG,EAAAA,EAAAA,UAAS,mCAAiC7tB,IAAA,kBAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAC1CpuB,EAAAA,EAAAA,OAAM,iBAAeU,IAAA,SAAA4I,WAAA,IAAA4W,KAAA,SAAAxf,IAAA,eAAA4I,MAEtB,WACE5N,KAAK8yB,OAAO3nB,MAAM4nB,iBAAkBC,EAAAA,EAAAA,GAClChzB,KAAKizB,cACLjzB,KAAK8yB,OACLjB,EAAcG,YAElB,GAAC,CAAAxN,KAAA,SAAAxf,IAAA,UAAA4I,MAED,SAAQ2L,IAEJA,EAAkB5F,IAAI,aACtB4F,EAAkB5F,IAAI,aACtB4F,EAAkB5F,IAAI,sBACtB4F,EAAkB5F,IAAI,sBACtB4F,EAAkB5F,IAAI,sBAEtB3T,KAAKoM,cACH,IAAIC,YAAY,wBAAyB,CACvC1G,OAAQ,CACNiJ,OAAQ,CAAC5O,KAAKkzB,SAAUlzB,KAAKmzB,UAC7BC,gBAAiB,CAACpzB,KAAK+wB,kBAAmB/wB,KAAKgxB,mBAC/CqC,iBAAkBrzB,KAAKqzB,kBAEzBtb,SAAS,EACTC,UAAU,IAIlB,GAAC,CAAAwM,KAAA,SAAAxf,IAAA,sBAAA4I,MAED,SAAoBzO,EAAGm0B,EAAeC,GACpC,IAAIL,EAAW7I,WAAWiJ,EAAc,GAAG1lB,OACzCulB,EAAW9I,WAAWiJ,EAAc,GAAG1lB,OACd,SAAvBzO,EAAE8R,OAAO1D,WACXgmB,EAAgB,GAAG3lB,MAAQslB,EAC3BlzB,KAAK8yB,OAAO3nB,MAAMkG,KAAkB,IAAX6hB,EAAiB,IAEtCA,EAAWC,IACbA,EAAWG,EAAc,GAAG1lB,MAC5B0lB,EAAc,GAAG1lB,MAAQulB,EACzBI,EAAgB,GAAG3lB,MAAQulB,EAC3BnzB,KAAK8yB,OAAO3nB,MAAMqO,MAAQ,IAAiB,IAAX2Z,EAAiB,OAGnDI,EAAgB,GAAG3lB,MAAQulB,EAC3BnzB,KAAK8yB,OAAO3nB,MAAMqO,MAAQ,IAAiB,IAAX2Z,EAAiB,IAE7CA,EAAWD,IACbA,EAAWI,EAAc,GAAG1lB,MAC5B0lB,EAAc,GAAG1lB,MAAQslB,EACzBK,EAAgB,GAAG3lB,MAAQslB,EAC3BlzB,KAAK8yB,OAAO3nB,MAAMkG,KAAkB,IAAX6hB,EAAiB,MAI9ClzB,KAAK8yB,OAAO3nB,MAAM4nB,iBAAkBC,EAAAA,EAAAA,GAClChzB,KAAKizB,cACLjzB,KAAK8yB,OACLjB,EAAcG,cAEfhyB,KAAKkzB,SAAUlzB,KAAKmzB,UAAY,CAC/B9I,WAAW6I,GACX7I,WAAW8I,GAEf,GAAC,CAAA3O,KAAA,QAAAxf,IAAA,yBAAA4I,KAAAA,GAAA,OAEyBzO,IACxB,MAAM,SAAE+zB,EAAQ,SAAEC,EAAQ,kBAAEpC,EAAiB,kBAAEC,GAC7C7xB,EAAE8R,OAAO5P,SAEVrB,KAAKwzB,YAAY,GAAG5lB,MAAO5N,KAAKyzB,aAAa,GAAG7lB,OAAS,CACxDslB,EACAA,IAEDlzB,KAAKwzB,YAAY,GAAG5lB,MAAO5N,KAAKyzB,aAAa,GAAG7lB,OAAS,CACxDulB,EACAA,IAEFO,EAAAA,EAAAA,GAAkB1zB,KAAK2zB,gBAAgB,GAAI5C,IAC3C2C,EAAAA,EAAAA,GAAkB1zB,KAAK2zB,gBAAgB,GAAI3C,GAE3ChxB,KAAK8yB,OAAO3nB,MAAMkG,KAAkB,IAAX6hB,EAAiB,IAC1ClzB,KAAK8yB,OAAO3nB,MAAMqO,MAAQ,IAAiB,IAAX2Z,EAAiB,IACjDnzB,KAAK8yB,OAAO3nB,MAAM4nB,iBAAkBC,EAAAA,EAAAA,GAClChzB,KAAKizB,cACLjzB,KAAK8yB,OACLjB,EAAcG,cAGfhyB,KAAKkzB,SAAUlzB,KAAKmzB,UAAY,CAC/B9I,WAAW6I,GACX7I,WAAW8I,KAEZnzB,KAAK+wB,kBAAmB/wB,KAAKgxB,mBAAqB,CACjDD,EACAC,GAEH,IAAAxM,KAAA,SAAAxf,IAAA,wBAAA4I,MAED,SAAsBzO,GACpB,MAAM,QAAEy0B,EAAO,QAAEC,GAAY7zB,KAAK8zB,sBAChC30B,EAAE8R,OAAO5P,QAAQ0yB,gBAEnB50B,EAAE8R,OAAO5P,QAAQ0yB,eAAiBH,EAClCz0B,EAAE8R,OAAOzP,UAAYqyB,EAEL,QAAZD,GAAiC,OAAZA,EACvB5zB,KAAK+wB,kBAAoB6C,EAEzB5zB,KAAKgxB,kBAAoB4C,CAE7B,GAAC,CAAApP,KAAA,SAAAxf,IAAA,4BAAA4I,MAED,SAA0BzO,GACpBA,EAAE8R,OAAOhC,QACXjP,KAAKqzB,iBAAmB,IAAIrzB,KAAKqzB,iBAAkBl0B,EAAE8R,OAAO5P,QAAQypB,MAEpE9qB,KAAKqzB,iBAAmBrzB,KAAKqzB,iBAAiBtnB,OAC3C+E,GAASA,IAAS3R,EAAE8R,OAAO5P,QAAQypB,KAG1C,GAAC,CAAAtG,KAAA,SAAAxf,IAAA,wBAAA4I,MAED,SAAsBomB,GACpB,OAAQA,GACN,IAAK,MACH,MAAO,CAAEJ,QAAS,KAAMC,QAAS,SACnC,IAAK,KACH,MAAO,CAAED,QAAS,MAAOC,QAAS,WACpC,IAAK,MACH,MAAO,CAAED,QAAS,KAAMC,QAAS,SACnC,IAAK,KACH,MAAO,CAAED,QAAS,MAAOC,QAAS,WAExC,GAAC,CAAArP,KAAA,SAAAxf,IAAA,SAAA4I,MAED,WACE,MAAMqmB,EAAoBA,CAAC1mB,EAAW0f,EAAOrf,IAAUvC,EAAAA,IAAI;;;gBAG/CkC;gBACA0f;gBACArf;cACFikB,EAAcf;cACde,EAAc9U;eACb8U,EAAcC;iBACX3yB,GACRa,KAAKk0B,oBAAoB/0B,EAAGa,KAAKyzB,aAAczzB,KAAKwzB;;MAIpDW,EAAmBA,CAAC5mB,EAAWK,IAAUvC,EAAAA,IAAI;;;gBAGvCkC;gBACAK;cACFikB,EAAcf;cACde,EAAc9U;eACb8U,EAAcC;iBACX3yB,GACRa,KAAKk0B,oBAAoB/0B,EAAGa,KAAKwzB,YAAaxzB,KAAKyzB;;MAInDW,EAA8BL,GAAmB1oB,EAAAA,IAAI;;;;+BAIhC0oB;iBACd/zB,KAAKq0B;;;;MAoBlB,OAAOhpB,EAAAA,IAAI;;UAEL4oB,EAAkB,OAAQ,cAAepC,EAAcf;UACvDsD,EAA2B;;UAE3BA,EAA2B;UAC3BH,EAAkB,KAAM,cAAepC,EAAc9U;UApB9BuX,KAAMjpB,EAAAA,IAAI;QACnCrL,KAAKoxB,gBAAgBzyB,IACpBkuB,GAASxhB,EAAAA,IAAI;;kBAEJrL,KAAKu0B,uBAAsBC,EAAAA,EAAAA,GAAsB3H;wBAC3CA;sBACF7sB,KAAKy0B;;wBAEHz0B,KAAKu0B,uBAAsBC,EAAAA,EAAAA,GAAsB3H;gBAC1D2H,EAAAA,EAAAA,GAAsB3H;;MAY3ByH;;;;;aAKE31B,EAAAA,EAAAA,IACA+1B,EAAAA,EAAAA,GAAM7C,EAAcE,eAAiB,GACpCvP,GACCnX,EAAAA,IAAI;;;6BAGgB,IAAJmX,EACdqP,EAAcE;;mBAEXF,EAAcI,cAAgBzP,GAAGmS,QAAQ;;;;YAKhDj1B,OAAOk1B,QAAQ50B,KAAKizB,eAAet0B,IACnC,EAAEqG,EAAK6vB,GAAUrS,IACfnX,EAAAA,IAAI;;;oBAGiD,IAA9C3L,OAAOD,KAAKO,KAAKizB,eAAe1xB,OAASihB,GAAU;0BAChC,IAAdqS,EAAQ/D;;;;;mCAKC+D,EAAQ/D;mCACR+D,EAAQ9X;6CACE8X,EAAQ9D;6CACR8D,EAAQ7D;iCACN,IAAd6D,EAAQ/D;yBAC+B,IAA9CpxB,OAAOD,KAAKO,KAAKizB,eAAe1xB,OAASihB;2BACxCxiB,KAAK80B;;oBAEZ9vB;;;;;UAMVmvB,EAAiB,OAAQtC,EAAcf;UACvCqD,EAAiB,KAAMtC,EAAc9U;;KAG7C,IAAC,EAlRiC7K,EAAAA,W,6MCrBX,EAAe,EAAAO,GAAG,u9H,+qNCW3C,MAAMof,EACY,GADZA,EAES,IAGf,IACakD,E,ixBAAmB7C,CAAA,EAD/BC,EAAAA,EAAAA,eAAc,0BAAwB,SAAAC,EAAAC,GA6HtC,OAAAC,EA7HD,cACgCD,EAAoBvyB,WAAAA,IAAAkT,GAAA,SAAAA,GAAAof,EAAA,QAApBG,EAAA,EAAA/N,KAAA,QAAAgO,QAAA,EAAAxtB,IAAA,SAAA4I,KAAAA,GAAA,MACd,CAAC6kB,EAAO,IAAAjO,KAAA,QAAAkO,WAAA,EAEvBnd,EAAAA,EAAAA,OAAM,CAAEvR,KAAMsB,UAASN,IAAA,WAAA4I,KAAAA,GAAA,MAAY,eAAe,IAAA4W,KAAA,QAAAkO,WAAA,EAClDnd,EAAAA,EAAAA,OAAM,CAAEvR,KAAMsB,UAASN,IAAA,SAAA4I,KAAAA,GAAA,MAAU,eAAe,IAAA4W,KAAA,QAAAkO,WAAA,EAChDnd,EAAAA,EAAAA,OAAM,CAAEvR,KAAMb,SAAQ6B,IAAA,UAAA4I,KAAAA,GAAA,MAAW,CAAC,EAAG,EAAE,IAAA4W,KAAA,QAAAkO,WAAA,EACvCnd,EAAAA,EAAAA,OAAM,CAAEvR,KAAMb,SAAQ6B,IAAA,mBAAA4I,KAAAA,GAAA,MAAoB,CAAC,MAAO,MAAM,IAAA4W,KAAA,QAAAkO,WAAA,EACxDnd,EAAAA,EAAAA,OAAM,CAAEvR,KAAMb,SAAQ6B,IAAA,oBAAA4I,KAAAA,GAAA,MAAqB,EAAE,IAAA4W,KAAA,QAAAkO,WAAA,EAC7Cnd,EAAAA,EAAAA,OAAM,CAAEvR,KAAMtE,UAASsF,IAAA,iBAAA4I,KAAAA,GAAA,OAAkBgjB,EAAAA,uBAAuB,IAAApM,KAAA,QAAAkO,WAAA,EAEhEpuB,EAAAA,EAAAA,OAAM,SAAOU,IAAA,OAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EACbG,EAAAA,EAAAA,UAAS,qBAAmB7tB,IAAA,qBAAA4I,WAAA,IAAA4W,KAAA,SAAAxf,IAAA,eAAA4I,MAE7B,WACE5N,KAAKg1B,eACP,GAAC,CAAAxQ,KAAA,SAAAxf,IAAA,YAAA4I,MAED,SAAUvM,EAASuN,EAAQwkB,EAAiBC,GAC1CrzB,KAAKi1B,SAAW5zB,EAChBrB,KAAKk1B,QAAUtmB,EACf5O,KAAKm1B,iBAAmB/B,EACxBpzB,KAAKo1B,kBAAoB/B,EACzBrzB,KAAKsb,OAAS4V,EAAAA,YAAYlxB,KAAKi1B,UAAU/vB,MACzClF,KAAKq1B,eAAiBnE,EAAAA,YAAYlxB,KAAKi1B,UAAU5D,WAEjDqC,EAAAA,EAAAA,GAAkB1zB,KAAKs1B,mBAAmB,GAAIt1B,KAAKm1B,iBAAiB,KACpEzB,EAAAA,EAAAA,GAAkB1zB,KAAKs1B,mBAAmB,GAAIt1B,KAAKm1B,iBAAiB,IAEpEn1B,KAAKg1B,eACP,GAAC,CAAAxQ,KAAA,SAAAxf,IAAA,gBAAA4I,MAED,WACE5N,KAAKu1B,KAAKpqB,MAAMkG,KAAyB,IAAlBrR,KAAKk1B,QAAQ,GAAW,IAC/Cl1B,KAAKu1B,KAAKpqB,MAAMqO,MAAQ,IAAwB,IAAlBxZ,KAAKk1B,QAAQ,GAAW,IACtDl1B,KAAKu1B,KAAKpqB,MAAM4nB,iBAAkBC,EAAAA,EAAAA,GAChChzB,KAAKq1B,eACLr1B,KAAKu1B,KACL1D,EAEJ,GAAC,CAAArN,KAAA,SAAAxf,IAAA,SAAA4I,MAED,WACE,OAAOvC,EAAAA,IAAI;;;;aAIH1M,EAAAA,EAAAA,IACA+1B,EAAAA,EAAAA,GAAM7C,EAA+B,GACpCrP,GACCnX,EAAAA,IAAI;;;6BAGgB,IAAJmX,EAAWqP;oBACrBrP,EAAIqP;;;;;6BAMK7xB,KAAKk1B,QAAQ;;;;2BAIfl1B,KAAKk1B,QAAQ;;YAE5Bl1B,KAAKo1B,kBACJz2B,IAAKmS,IAAS0jB,EAAAA,EAAAA,GAAsB1jB,IACpC3L,KAAK;;;KAIhB,GAAC,CAAAqf,KAAA,MAAAxf,IAAA,kBAAA4I,MAED,WACE,MAAO,CACLvM,QAASrB,KAAKi1B,SACd/vB,MAAOlF,KAAKsb,OACZ1M,OAAQ5O,KAAKk1B,QACb9B,gBAAiBpzB,KAAKm1B,iBACtB9B,iBAAkBrzB,KAAKo1B,kBAE3B,GAAC,CAAA5Q,KAAA,MAAAxf,IAAA,aAAA4I,MAED,WACE,OAAsC,IAAlC5N,KAAKo1B,kBAAkB7zB,OAClB,CACL,CAACvB,KAAKi1B,UAAW,CACfO,MAAO,CACL,CAACx1B,KAAKm1B,iBAAiB,IAAKn1B,KAAKk1B,QAAQ,GACzC,CAACl1B,KAAKm1B,iBAAiB,IAAKn1B,KAAKk1B,QAAQ,MAO/Cl1B,KAAKk1B,QAAQ,KAAOl1B,KAAKk1B,QAAQ,IACH,OAA7Bl1B,KAAKm1B,iBAAiB,IAA4C,OAA7Bn1B,KAAKm1B,iBAAiB,GASvD,CACLhzB,GAAI,CACF,CACE,CAACnC,KAAKi1B,UAAW,CACfO,MAAOx1B,KAAKo1B,oBAGhB,CACE,CAACp1B,KAAKi1B,UAAW,CACfO,MAAO,CACL,CAACx1B,KAAKm1B,iBAAiB,IAAKn1B,KAAKk1B,QAAQ,GACzC,CAACl1B,KAAKm1B,iBAAiB,IAAKn1B,KAAKk1B,QAAQ,QAlB1C,CACL,CAACl1B,KAAKi1B,UAAW,CACfO,MAAOx1B,KAAKo1B,mBAsBpB,IAAC,EA3HsCljB,EAAAA,YA8HzC,O,yGC/IyB,G,OAAe,EAAAO,GAAG,6oH,+qNCwG3C,M,ixBAjGayf,CAAA,EADZC,EAAAA,EAAAA,eAAc,aAAW,SAAAC,EAAAC,GAgGzB,OAAAC,EAhGD,cACaD,EAAoBvyB,WAAAA,IAAAkT,GAAA,SAAAA,GAAAof,EAAA,QAApBG,EAAA,EAAA/N,KAAA,QAAAgO,QAAA,EAAAxtB,IAAA,SAAA4I,KAAAA,GAAA,MACK,CAAC6kB,EAAO,IAAAjO,KAAA,QAAAkO,WAAA,EAEvBC,EAAAA,EAAAA,UAAS,CAAE3uB,KAAMtE,UAASsF,IAAA,WAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAC1BG,EAAAA,EAAAA,UAAS,oCAAkC7tB,IAAA,cAAA4I,WAAA,IAAA4W,KAAA,QAAAkO,WAAA,EAC3CG,EAAAA,EAAAA,UAAS,yCAAuC7tB,IAAA,yBAAA4I,WAAA,IAAA4W,KAAA,SAAAxf,IAAA,mBAAA4I,MAEjD,SAAiBzO,GACfA,EAAEs2B,iBACF,MAAMC,EAAgBv2B,EAAE8R,OAAOyd,aAAa,QAAQiH,QAAQ,IAAK,IAC3DC,EAAczyB,MAAMC,KAAKpD,KAAK61B,wBAAwBxmB,KACzDymB,GAAUA,EAAMv2B,KAAOm2B,GAG1B11B,KAAK+1B,YAAYvwB,QAASwJ,IACxBA,EAAOyL,aAAa,iBAAiB,GACrCzL,EAAOyL,aAAa,WAAY,QAGlCza,KAAK61B,uBAAuBrwB,QAASswB,IACnCA,EAAMrb,aAAa,UAAU,KAG/Bmb,EAAYI,gBAAgB,UAAU,GACtC72B,EAAE8R,OAAOwJ,aAAa,iBAAiB,GACvCtb,EAAE8R,OAAOwJ,aAAa,WAAY,KAElCza,KAAKi2B,gBAAgBL,EACvB,GAAC,CAAApR,KAAA,SAAAxf,IAAA,kBAAA4I,MAED,SAAgBgoB,GACd51B,KAAKoM,cACH,IAAIC,YAAY,aAAc,CAC5B1G,OAAQ,CACNtE,QAASu0B,EAAYv0B,QAAQA,QAC7BuN,OAAQ,CACNyb,WAAWuL,EAAY1C,UACvB7I,WAAWuL,EAAYzC,WAEzBC,gBAAiB,CACfwC,EAAY7E,kBACZ6E,EAAY5E,mBAEdqC,iBAAkBuC,EAAYvC,kBAEhCtb,SAAS,EACTC,UAAU,IAGhB,GAAC,CAAAwM,KAAA,SAAAxf,IAAA,SAAA4I,MAED,WACE,MAAMsoB,EAAiBx2B,OAAOk1B,QAAQ50B,KAAKm2B,UAE3C,OAAO9qB,EAAAA,IAAI;;UAEL6qB,EAAev3B,IACf,EAAE41B,EAAqBM,GAAU5vB,IAAUoG,EAAAA,IAAI;;;0BAG/BkpB;;yBAEDA;gCACiB,IAAVtvB,EAAc,OAAS;2BAClB,IAAVA,EAAc,IAAM;yBACtBjF,KAAKo2B;mBACXvB,EAAQ3vB;;;;;;;UAQjBgxB,EAAev3B,IACf,EAAE41B,EAAqBM,GAAU5vB,IAAUoG,EAAAA,IAAI;;oBAErCkpB;qCACiBA;qCACAA;0BACX;0BACA;mCACS;mCACA;kCACD;+BACHM,EAAQxD;iCACNwD,EAAQzD;wBACP,IAAVnsB;;;;;KAOtB,IAAC,EA9FmBiN,EAAAA,W,oECPf,MAAM8gB,EAAuBA,CAACC,EAAeoD,EAASrE,KAC3D,MAAMsE,EAAgB52B,OAAOk1B,QAAQ3B,GAAesD,QAAQ,EAAExa,EAAGnO,KACxD,CACL,CAAEijB,MAAOjjB,EAAMijB,MAAO2F,SAAU5oB,EAAMkjB,KACtC,CAAED,MAAOjjB,EAAMijB,MAAO2F,SAAU5oB,EAAMmP,OAI1C,IAAI0Z,EAAYrlB,SAASilB,EAAQlrB,MAAMkG,MAAQ,KAAO,EAStD,MAAO,6BAPailB,EACjB33B,IAAK+3B,IACJ,MAAM3tB,GAAY2tB,EAAKF,SAAWC,GAAazE,EAC/C,MAAO,GAAG0E,EAAK7F,SAAS9nB,QAEzB5D,KAAK,S,mECfV,MAAMwxB,EAAkB,CACtB3T,IAAK,UACLC,IAAK,UACL2T,GAAI,QACJC,GAAI,SAGOnD,EAAoBA,CAACziB,EAAQ+iB,KACxC/iB,EAAO5P,QAAQ0yB,eAAiBC,EAChC/iB,EAAOzP,UAAYm1B,EAAgB3C,G,4HCJ9B,MAAM8C,UAA6C5kB,EAAAA,WA6JxDpS,WAAAA,GACEkB,QAEAhB,KAAKqB,QACLrB,KAAK+2B,YACL/2B,KAAKspB,MACLtpB,KAAKg3B,eACLh3B,KAAKi3B,oBACP,CAEA1kB,MAAAA,GACE,OAAOlH,EAAAA,IAAI;;UAELlI,MAAMC,KAAK,CAAE7B,OAAQ,IAAK5C,IAC1B,IAAM0M,EAAAA,IAAI;;KAIlB,CAEA+L,YAAAA,GAAgB,CAgBhB,aAAI+P,CAAUA,GACZnnB,KAAKqB,QAAQ01B,YAAc5P,GAAW0C,GAElC1C,GAAW+P,MACbl3B,KAAKqB,QAAQ41B,qBAAuB9P,EAAU+P,KAGhD,IAAIC,EAAyB,KAC7B,GAAIhQ,EAIF,OAHAnnB,KAAK+2B,YAAc5P,EAAU0C,GAC7B7pB,KAAKspB,MAAQnC,EAAU2C,GACvB9pB,KAAKg3B,eAAiB7P,EAAU4C,IACxB,GACN,KAAK5C,EAAU4C,IAAM,GACnBoN,EAAyB,OACzB,MACF,KAAKhQ,EAAU4C,GAAK,IAClBoN,EAAyB,OACzB,MACF,KAAKhQ,EAAU4C,GAAK,IAClBoN,EAAyB,QACzB,MACF,KAAKhQ,EAAU4C,GAAK,KAClBoN,EAAyB,QACzB,MACF,KAAKhQ,EAAU4C,GAAK,KAClBoN,EAAyB,SACzB,MACF,KAAKhQ,EAAU4C,GAAK,EAClBoN,EAAyB,UACzB,MACF,QACEA,EAAyB,cAI/Bn3B,KAAKqB,QAAQ81B,uBAAyBA,CACxC,EAtOWL,EACJtkB,OAASC,EAAAA,GAAG;;;;;;;;eAQN2kB;gBACCC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAba;;;;;;eAAA;gBACC;;;;;;;gBAwDdA;;;gBAGAA;;;gBAGAA;;;gBAGAA;;;gBAGAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsKhB3kB,eAAeC,OACb,2CACAmkB,E,kBC/OF,MAAMlI,EAAWjsB,SAASC,cAAc,YAClC00B,EAAmB30B,SAASC,cAAc,OAChD00B,EAAiB/pB,UAAY,QAC7B+pB,EAAiBhkB,KAAO,QACxBgkB,EAAiB91B,UAAY,8PAW7BotB,EAASptB,UAAY,4hDAyDrB,MAAM+1B,UAAoBlJ,YACxB,6BAAWmJ,GACT,MAAO,CACL,MACA,MACA,aACA,cACA,SACA,SACA,cACA,SACA,QACA,wBAEJ,CAEA13B,WAAAA,GACEkB,QAAQ,KAkTVy2B,cAAiBt4B,IACfa,KAAKuV,MAAMnS,KAAOjE,EAAE8R,OAAOrD,OAC5B,KACD8pB,cAAiBv4B,IACfa,KAAKuV,MAAMqR,GAAKznB,EAAE8R,OAAOrD,OAC1B,KAYD+pB,UAAax4B,IACXa,KAAKuV,MAAMqR,GAAKznB,EAAE8R,OAAOrD,OAC1B,KAEDgqB,YAAez4B,IACba,KAAKuV,MAAMnS,KAAOjE,EAAE8R,OAAOrD,OAC5B,KAEDiqB,cAAiB14B,IACfa,KAAKuV,MAAMuiB,OAAS34B,EAAE8R,OAAOhC,SA9T7BjP,KAAKuV,MAZa,CAChBnS,KAAM,EACNwjB,GAAI,EACJkR,OAAQ,IACRhH,IAAK,EACL/T,IAAK,EACL,aAAc,IACd,cAAe,IACfgb,MAAO,MACPC,mBAAoB,IAKtBh4B,KAAKyW,KAAOzW,KAAK8T,cACjB9T,KAAKi4B,aAAa,CAAEriB,KAAM,SAC1B5V,KAAKk4B,WAAWje,YAAY2U,EAASnE,QAAQ0N,WAAU,IACvDn4B,KAAKo4B,QAAUp4B,KAAKk4B,WAAWx2B,cAAc,aAC7C1B,KAAKq4B,QAAUr4B,KAAKk4B,WAAWx2B,cAAc,aAC7C1B,KAAKs4B,YAAct4B,KAAKk4B,WAAWx2B,cAAc,iBACjD1B,KAAKoD,KAAOpD,KAAKk4B,WAAWx2B,cAAc,SAC1C1B,KAAK4mB,GAAK5mB,KAAKk4B,WAAWx2B,cAAc,OACxC1B,KAAKu4B,UAAYv4B,KAAKk4B,WAAWx2B,cAAc,WAC/C1B,KAAKw4B,OAASx4B,KAAKk4B,WAAWx2B,cAAc,SAC9C,CAEA+2B,wBAAAA,CAAyB3N,EAAM4N,EAAUC,GACvC,OAAQ7N,GACN,IAAK,MACH9qB,KAAKo4B,QAAQtH,IAAM6H,EACnB34B,KAAKq4B,QAAQvH,IAAM6H,EACnB34B,KAAKoD,KAAK0tB,IAAM6H,EAChB34B,KAAK4mB,GAAGkK,IAAM6H,EACd,MACF,IAAK,MACH34B,KAAKo4B,QAAQrb,IAAM4b,EACnB34B,KAAKq4B,QAAQtb,IAAM4b,EACnB34B,KAAKoD,KAAK2Z,IAAM4b,EAChB34B,KAAK4mB,GAAG7J,IAAM4b,EACd,MACF,IAAK,cACH34B,KAAKo4B,QAAQtG,KAAO6G,EACpB34B,KAAKq4B,QAAQvG,KAAO6G,EACpB,MACF,IAAK,aACH34B,KAAKoD,KAAK0uB,KAAO6G,EACjB34B,KAAK4mB,GAAGkL,KAAO6G,EACf,MACF,IAAK,SACH34B,KAAKo4B,QAAQxqB,MAAQyc,WAAWsO,GAAUhE,QAAQ,GAClD,MACF,IAAK,SACH30B,KAAKq4B,QAAQzqB,MAAQyc,WAAWsO,GAAUhE,QAAQ,GAClD,MACF,IAAK,SACH30B,KAAKu4B,UAAUtpB,QAAuB,SAAb0pB,EACzB,MACF,IAAK,wBACH34B,KAAKuV,MAAMyiB,mBAAqBW,EAChC34B,KAAK44B,iBACL,MACF,IAAK,QACH54B,KAAK+3B,MAAQY,EACb,MACF,IAAK,cACc,aAAbA,EACF34B,KAAKw4B,OAAOn4B,UAAUE,IAAI,aAE1BP,KAAKw4B,OAAOn4B,UAAUC,OAAO,aAE/BN,KAAK44B,iBAIT54B,KAAK64B,aACP,CAEAD,cAAAA,GACE,MAAME,EAAQ94B,KAAKk4B,WAAWx2B,cAAc,UAC5Co3B,EAAMt3B,UAAY,GAClB,MAAMw2B,EAAqB5mB,SAASpR,KAAKuV,MAAMyiB,oBACzClH,EAAMzG,WAAWrqB,KAAKuV,MAAMub,KAE5BgB,GADMzH,WAAWrqB,KAAKuV,MAAMwH,KACd+T,GAAOkH,EAC3B,IAAK,IAAIxV,EAAI,EAAGA,GAAKwV,EAAoBxV,IAAK,CAC5C,MAAMuW,EAAQp2B,SAASC,cAAc,OACrCm2B,EAAMxrB,UAAY,QAClBwrB,EAAMzlB,KAAO,QACbylB,EAAMzlB,KAAK/S,IAAI,SAASP,KAAKg5B,eAC7BD,EAAMpJ,WAAamB,EAAMtO,EAAIsP,GAAM6C,QAAQ,GAC3CoE,EAAM5tB,MAAMkG,KAAO,QAAa,IAAJmR,EAAWwV,aACvCc,EAAM7e,YAAY8e,EACpB,CACF,CACAF,WAAAA,GACE,MAAMI,EAAOvvB,KAAKonB,IAAI9wB,KAAKo4B,QAAQxqB,MAAO5N,KAAKq4B,QAAQzqB,OACjDsrB,EAAOxvB,KAAKqT,IAAI/c,KAAKo4B,QAAQxqB,MAAO5N,KAAKq4B,QAAQzqB,OAEjDurB,EAAsB,IAAPF,GAAej5B,KAAK+c,IAAM/c,KAAK8wB,KAC9CsI,EAAsB,IAAPF,GAAel5B,KAAK+c,IAAM/c,KAAK8wB,KAE1B,MAAtB9wB,KAAKuV,MAAMuiB,OACb93B,KAAKs4B,YAAYntB,MAAMkuB,WAAa,8EAA8EF,+BAAyCA,gCAA0CC,+BAAyCA,sCAE9Op5B,KAAKs4B,YAAYntB,MAAMkuB,WAAa,4EAA4EF,+BAAyCA,gCAA0CC,8BAAwCA,qCAG7Op5B,KAAKs5B,aACP,CAEAA,WAAAA,IACOt5B,KAAKo4B,QAAQxqB,OAAS5N,KAAKq4B,QAAQzqB,MACtC5N,KAAKk4B,WAAWx2B,cACd,oCACAF,UAAY,sTAUdxB,KAAKk4B,WAAWx2B,cACd,oCACAF,UAAY,qTAUlB,CAEA,OAAIsvB,GACF,OAAO9wB,KAAK0uB,aAAa,MAC3B,CACA,OAAI3R,GACF,OAAO/c,KAAK0uB,aAAa,MAC3B,CACA,QAAIoD,GACF,OAAO9xB,KAAK0uB,aAAa,OAC3B,CACA,UAAIhI,GACF,OAAO1mB,KAAK0uB,aAAa,SAC3B,CACA,UAAI/H,GACF,OAAO3mB,KAAK0uB,aAAa,SAC3B,CACA,eAAIsK,GACF,OAAOh5B,KAAK0uB,aAAa,cAC3B,CACA,UAAIoJ,GACF,MAAuC,SAAhC93B,KAAK0uB,aAAa,SAC3B,CACA,sBAAIsJ,GACF,OAAOh4B,KAAK0uB,aAAa,wBAC3B,CACA,OAAIoC,CAAIljB,GACN5N,KAAKya,aAAa,MAAO7M,EAC3B,CACA,OAAImP,CAAInP,GACN5N,KAAKya,aAAa,MAAO7M,EAC3B,CACA,cAAIiZ,CAAWjZ,GACb5N,KAAKya,aAAa,cAAe7M,EACnC,CACA,aAAIkZ,CAAUlZ,GACZ5N,KAAKya,aAAa,aAAc7M,EAClC,CACA,UAAI8Y,CAAO9Y,GACT5N,KAAKya,aAAa,SAAU7M,EAC9B,CACA,UAAI+Y,CAAO/Y,GACT5N,KAAKya,aAAa,SAAU7M,EAC9B,CACA,eAAIorB,CAAYprB,GACd5N,KAAKya,aAAa,cAAe7M,EACnC,CACA,sBAAIoqB,CAAmBpqB,GACrB5N,KAAKya,aAAa,wBAAyB7M,EAC7C,CACA,cAAImZ,CAAWnZ,GAEb,GAAc,WAAVA,EAAoB,CACtB5N,KAAKk4B,WAAWx2B,cAAc,YAAYuY,YAAYqd,GAC9Bt3B,KAAKk4B,WAAWx2B,cAAc,UACtCK,iBAAiB,QAAU5C,IAChB,UAArBA,EAAE8R,OAAO4G,UACX7X,KAAK+3B,MAAQ54B,EAAE8R,OAAOrD,MACtB5N,KAAKuV,MAAMwiB,MAAQ54B,EAAE8R,OAAOrD,MAC5B5N,KAAKu5B,WAAWv5B,KAAKuV,SAG3B,CACF,CAEA,UAAIuiB,CAAOlqB,GACT5N,KAAKya,aAAa,SAAU7M,EAC9B,CAEA2rB,UAAAA,CAAW5zB,GACT,MAAM6zB,EAAY,CAAC,OAAQ,KAAM,QAAS,UAEpCC,EAAY/5B,OAAOg6B,YACvBh6B,OAAOk1B,QAAQjvB,GAAQoG,OAAQ/G,GAAQw0B,EAAUhiB,SAASxS,EAAI,MAE1DwP,EAAQ,IAAInI,YAAY,gBAAiB,CAC7C0L,SAAS,EACTpS,OAAQ8zB,IAGVz5B,KAAKoM,cAAcoI,EACrB,CAEAgG,iBAAAA,GACExa,KAAK8wB,IAAM9wB,KAAK0uB,aAAa,QAAU,EACvC1uB,KAAK+c,IAAM/c,KAAK0uB,aAAa,QAAU,EACvC1uB,KAAK0mB,OAAS1mB,KAAK0uB,aAAa,WAAa,EAC7C1uB,KAAK2mB,OAAS3mB,KAAK0uB,aAAa,WAAa,EAC7C1uB,KAAKg5B,YAAch5B,KAAK0uB,aAAa,gBAAkB,aAEvD1uB,KAAK+3B,MAAQ/3B,KAAK0uB,aAAa,kBAAoB,MAEnD1uB,KAAKuV,MAAQ,IAAIokB,MAAM35B,KAAKuV,MAAO,CACjC9B,IAAKA,CAACxC,EAAQ2oB,EAAMhsB,EAAOisB,KACzB,GAAa,SAATD,GAA4B,OAATA,EAAe,CACpC,GAAIE,MAAMzP,WAAWzc,IAAS,OAAO,EAErC,MAAMmsB,EAAc1P,WAAWzc,GA4B/B,OA1BImsB,EAAc,GAAKA,EAAc,GAC/BA,EAAc,IAChB9oB,EAAO2V,GAAK,GAEVmT,EAAc,IAChB9oB,EAAO7N,KAAO,IAGH,SAATw2B,EAEEG,EAAc9oB,EAAO2V,GACvB3V,EAAO2V,GAAKmT,EAEZ9oB,EAAO7N,KAAO22B,EAGZA,EAAc9oB,EAAO7N,KACvB6N,EAAO7N,KAAO22B,EAEd9oB,EAAO2V,GAAKmT,EAKlB/5B,KAAKg6B,oBAAoBxe,KAAKxb,MAC9BA,KAAKu5B,WAAWtoB,IACT,CACT,CAAO,MAAa,WAAT2oB,GAEP3oB,EAAO2oB,GADY,kBAAVhsB,EACMA,EAAQ,IAAM,IAEdA,EAGjB5N,KAAKg6B,oBAAoBxe,KAAKxb,MAE9BA,KAAKu5B,WAAWtoB,IACT,IAEPjR,KAAKg6B,oBAAoBxe,KAAKxb,MACvBi6B,QAAQxmB,IAAIxC,EAAQ2oB,EAAMhsB,EAAOisB,OAK9C75B,KAAKuV,MAAMub,IAAM9wB,KAAK8wB,IACtB9wB,KAAKuV,MAAMwH,IAAM/c,KAAK+c,IACtB/c,KAAKuV,MAAMuc,KAAO9xB,KAAK0uB,aAAa,SAAW,IAC/C1uB,KAAKuV,MAAMnS,KAAOsG,KAAKonB,KAAK9wB,KAAK0mB,QAAS1mB,KAAK2mB,QAC/C3mB,KAAKuV,MAAMqR,GAAKld,KAAKqT,KAAK/c,KAAK0mB,QAAS1mB,KAAK2mB,QAC7C3mB,KAAKuV,MAAMuiB,OAAyC,SAAhC93B,KAAK0uB,aAAa,UACtC1uB,KAAKuV,MAAMwiB,MAAQ/3B,KAAK+3B,MAExB/3B,KAAKg4B,mBAAqB,GAE1Bh4B,KAAKo4B,QAAQr2B,iBAAiB,QAAS/B,KAAKy3B,eAE5Cz3B,KAAKq4B,QAAQt2B,iBAAiB,QAAS/B,KAAK03B,eAE5C13B,KAAKoD,KAAKrB,iBAAiB,SAAU/B,KAAK43B,aAE1C53B,KAAK4mB,GAAG7kB,iBAAiB,SAAU/B,KAAK23B,WAExC33B,KAAKu4B,UAAUx2B,iBAAiB,SAAU/B,KAAK63B,eAE/C73B,KAAK64B,cACL74B,KAAK44B,gBACP,CASAoB,mBAAAA,GACEh6B,KAAKo4B,QAAQxqB,MAAQlE,KAAKonB,IAAI9wB,KAAKuV,MAAMnS,KAAMpD,KAAKuV,MAAMqR,IAC1D5mB,KAAKq4B,QAAQzqB,MAAQlE,KAAKqT,IAAI/c,KAAKuV,MAAMqR,GAAI5mB,KAAKuV,MAAMqR,IAExD5mB,KAAKoD,KAAKwK,MAAQ5N,KAAKuV,MAAMnS,KAC7BpD,KAAK4mB,GAAGhZ,MAAQ5N,KAAKuV,MAAMqR,GAE3B5mB,KAAK64B,YAAYrd,KAAKxb,KACxB,CAcAk6B,oBAAAA,GACEl6B,KAAKo4B,QAAQ3jB,oBAAoB,QAASzU,KAAKy3B,eAC/Cz3B,KAAKq4B,QAAQ5jB,oBAAoB,QAASzU,KAAK03B,eAC/C13B,KAAKoD,KAAKqR,oBAAoB,SAAUzU,KAAK43B,aAC7C53B,KAAK4mB,GAAGnS,oBAAoB,SAAUzU,KAAK23B,WAC3C33B,KAAKu4B,UAAU9jB,oBAAoB,SAAUzU,KAAK63B,cACpD,EAGFnlB,eAAeC,OAAO,eAAgB4kB,E,iICjb/B,MAAMhnB,EAAiB,CAC5BwP,KAAM,OACN1e,QAAS,UACT84B,SAAU,WACVhT,UAAW,YACXiT,yBAA0B,2BAC1BrR,QAAS,UACT/kB,KAAM,OACN0mB,aAAc,eACd9a,YAAa,cACbyqB,qBAAsB,uBACtB/I,KAAM,OACNG,SAAU,WACV6I,cAAe,gBACfzqB,QAAS,UACT0qB,YAAa,OACbC,WAAY,KACZzX,SAAU,YAGC9hB,EAAsB,CACjCyE,UAAW,EACXxE,MAAO,E,oaCST,MAAMu5B,EAAoBC,IAAAA,MAAS5W,OAAOf,SAASna,OAAO+xB,UAAU,IAE7D,SAAS9c,IACd+c,IAEA36B,EAAAA,aAAage,QAAQ,SAAU,GAC/Bhe,EAAAA,aAAage,QAAQ,mBAAe3O,IAEpCurB,EAAAA,EAAAA,KAEA,IAAInd,EAAAA,EAAc/a,SAASwJ,eAAe,kBAE1C,IAAIwV,EAAAA,EAAUhf,SAASwJ,eAAe,cAEtC,IAAItM,EAAAA,EAAkB8C,SAASwJ,eAAe,sBAE9C2uB,EAAmB,KACjBC,IAiFF,CAAC,eAAgB,cAAe,eAAev1B,QAASjG,IACtD,IAAI+f,EAAAA,EAAe0b,EAAWz7B,MAhF9B07B,IACAC,IACAC,IA+IFC,EAAe,qBAAqB51B,QAASzF,IAC3C,IAAI0jB,EAAAA,EAAe1jB,KAMrB,IAAIouB,EAAAA,GAlJN,CAEA,SAASyM,IACP,MAAMS,EAAKvX,OAAOwX,UAAUC,UAAUC,cACtC,IAAIC,EAAK,GACT,QAAQ,GACN,KAAmC,IAA9BJ,EAAG/zB,QAAQ,cACdm0B,EAAK,UACL,MACF,KAAiC,IAA5BJ,EAAG/zB,QAAQ,YACdm0B,EAAK,MAGT94B,SAASjB,cAAc,QAAQL,QAAQo6B,GAAKA,CAC9C,CAIA,SAASX,EAAmBY,GAC1B,MAAMC,EAGOnN,EAAQ,MAQrB9uB,OAAO+uB,OAAOkN,GACd17B,EAAAA,aAAage,QACX,+BACA0d,GAIF,MACMhZ,EAAyB,CAAC,EAIhC,GACO,WANmB1iB,EAAAA,aAAagM,QAAQ,cAO3CvM,OAAO8Q,OACLmS,GACAiZ,EAAAA,EAAAA,wBAAuBnB,IAS7Bx6B,EAAAA,aAAage,QAAQ,yBAA0B0E,GAC/C1iB,EAAAA,aAAage,QAAQ,2BAjBY,CAAC,GAmBlCyd,GACF,CAGA,MAAMV,EAAcz7B,GAAOoD,SAASwJ,eAAe5M,GAC7C67B,EAAkBrtB,GAAapL,SAASU,iBAAiB0K,GAG/D,SAASgtB,IACP,MAAMc,EAAa,IAAIC,EAAAA,YAAYd,EAAW,gBAC9ChX,EAAAA,EAAqB+L,KAAK,CAAC8L,GAC7B,CAUA,SAASZ,IACP,IAAIpN,EAAAA,EAAQmN,EAAW,YACvB,IAAIrW,EAAAA,EACFqW,EAAW,kBACX,UACA,qBAEF,IAAI3U,EAAAA,EACF2U,EAAW,qCAEb,IAAInS,EAAAA,EACFmS,EAAW,gCAEb,IAAIrW,EAAAA,EACFqW,EAAW,qBACX,OACA,kBAEF,IAAIrW,EAAAA,EACFqW,EAAW,8BACX,eACA,0BAEF,IAAI5S,EAAAA,EAA2B4S,EAAW,sBAC1C,IAAIrW,EAAAA,EAAmBqW,EAAW,cAAe,QACjD,IAAIrW,EAAAA,EAAmBqW,EAAW,kBAAmB,YACrD,IAAIrW,EAAAA,EAAmBqW,EAAW,uBAAwB,gBAC5D,CAGA,SAASE,IACP,IAAI1N,EAAAA,EAAqBwN,EAAW,gBACpC,IAAIpN,EAAAA,EAAuBoN,EAAW,2BACtC,IAAIrO,EAAAA,EAA8BqO,EAAW,yBAC7C,IAAIhS,EAAAA,EACFgS,EAAW,wCAEb,IAAI/O,EAAAA,EAA4B+O,EAAW,uBAC3C,IAAIxQ,EAAAA,EACFwQ,EAAW,+BAEf,CAGA,SAASG,IACP,IAAIY,KACJ,IAAI5zB,EAAAA,EAA0B6yB,EAAW,8BAGzCI,EAAe,+CAA+C51B,QAC3DzF,IACCA,EAAIgC,iBAAiB,QAAU5C,IAC7Bc,EAAAA,aAAage,QAAQ,aAAc9e,EAAE8R,OAAO5P,QAAQ4P,WAI5D,C,iJC5LO,MAAM+qB,GAAQC,E,QAAAA,IACnBC,EAAAA,EAAMC,OAAO,CACXC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,uBAMP,MAAMvjB,EAMXhZ,WAAAA,CAAYw8B,EAASC,EAAe,KAClCv8B,KAAKg8B,MAAQE,EAAAA,EAAMC,OAAO,CACxBG,UACAF,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGZr8B,KAAKu8B,aAAeA,EACpBv8B,KAAKw8B,MAAQ,IAAI3pB,GACnB,CAOAoB,GAAAA,CAAIsZ,GACF,OAAIvtB,KAAKw8B,MAAM7oB,IAAI4Z,GACVvuB,QAAQC,QAAQe,KAAKw8B,MAAMvoB,IAAIsZ,IAEjCvtB,KAAKg8B,MAAM/nB,IAAIsZ,GAAKruB,KAAK,EAAGoW,WAEjC,GADAtV,KAAKw8B,MAAM/oB,IAAI8Z,EAAK,CAAEjY,SAClBtV,KAAKw8B,MAAMC,KAAOz8B,KAAKu8B,aAAc,CACvC,MAAOjQ,GAAStsB,KAAKw8B,MAAM/8B,OAC3BO,KAAKw8B,MAAM12B,OAAOwmB,EACpB,CACA,MAAO,CAAEhX,SAEb,E,oEChDK,MAAMkf,EAAyBkI,GAC7B,GAAGA,EAAOC,OAAO,GAAGljB,gBAAgBijB,EAAOhjB,MAAM,I,oCCDnD,SAASkjB,EAASC,EAAMC,EAAK,KAClC,IAAIC,EACJ,OAAO,WACLC,aAAaD,GACbA,EAAU1iB,WAAW,IAAMwiB,EAAKI,MAAMj9B,KAAMqS,WAAYyqB,EAC1D,CACF,C,iJCJO,SAASI,EAAaC,GAC3B,OAAQA,GACN,IAAK,YACH,OAAKl9B,EAAAA,aAAagM,QAAQ,eAK5B,IAAK,cACH,OAAKhM,EAAAA,aAAagM,QAAQ,aAQhC,C,mBCnBAtM,EAAOC,QAAU,CAAC,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,SAAS,QAAU,IAAI,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,YAAY,MAAQ,YAAY,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,QAAQ,MAAQ,gBAAgB,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,iBAAiB,MAAQ,iBAAiB,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,gBAAgB,MAAQ,gBAAgB,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,QAAQ,MAAQ,QAAQ,KAAO,UAAU,QAAU,IAAI,UAAW,GAAO,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,UAAU,QAAU,IAAI,UAAW,KAAS,CAAC,GAAK,YAAY,MAAQ,+BAA+B,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,QAAQ,QAAU,GAAG,CAAC,GAAK,KAAK,MAAQ,KAAK,KAAO,QAAQ,QAAU,GAAG,CAAC,GAAK,SAAS,MAAQ,SAAS,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,QAAQ,MAAQ,QAAQ,KAAO,cAAc,QAAU,MAAM,OAAS,CAAC,MAAM,UAAU,CAAC,GAAK,UAAU,MAAQ,0BAA0B,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,OAAO,MAAQ,eAAe,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,aAAa,MAAQ,MAAM,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,YAAY,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,WAAW,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,QAAQ,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,eAAe,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,eAAe,MAAQ,wBAAwB,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,KAAK,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,6BAA6B,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,OAAO,MAAQ,oCAAoC,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,0BAA0B,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,qBAAqB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,wBAAwB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,yBAAyB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,gBAAgB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,SAAS,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,+CAA+C,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,gBAAgB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,sBAAsB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,cAAc,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,cAAc,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,UAAU,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,QAAQ,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,eAAe,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,wBAAwB,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,cAAc,MAAQ,cAAc,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,aAAa,MAAQ,4BAA4B,KAAO,UAAU,QAAU,IAAI,YAAc,yDAAyD,CAAC,GAAK,aAAa,MAAQ,wBAAwB,KAAO,UAAU,QAAU,IAAI,YAAc,6GAA6G,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,8EAA8E,CAAC,GAAK,aAAa,MAAQ,uBAAuB,KAAO,UAAU,QAAU,IAAI,YAAc,8EAA8E,CAAC,GAAK,aAAa,MAAQ,YAAY,KAAO,UAAU,QAAU,IAAI,YAAc,8HAA8H,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,uDAAuD,CAAC,GAAK,aAAa,MAAQ,mBAAmB,KAAO,UAAU,QAAU,IAAI,YAAc,sIAAsI,CAAC,GAAK,aAAa,MAAQ,cAAc,KAAO,UAAU,QAAU,IAAI,YAAc,8IAA8I,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,qKAAqK,CAAC,GAAK,aAAa,MAAQ,gCAAgC,KAAO,UAAU,QAAU,IAAI,YAAc,iDAAiD,CAAC,GAAK,aAAa,MAAQ,uBAAuB,KAAO,UAAU,QAAU,IAAI,YAAc,sEAAsE,CAAC,GAAK,aAAa,MAAQ,yBAAyB,KAAO,UAAU,QAAU,IAAI,YAAc,uDAAuD,CAAC,GAAK,aAAa,MAAQ,sBAAsB,KAAO,UAAU,QAAU,IAAI,YAAc,+BAA+B,CAAC,GAAK,aAAa,MAAQ,sBAAsB,KAAO,UAAU,QAAU,IAAI,YAAc,+BAA+B,CAAC,GAAK,aAAa,MAAQ,oCAAoC,KAAO,UAAU,QAAU,IAAI,YAAc,oHAAoH,CAAC,GAAK,aAAa,MAAQ,iBAAiB,KAAO,UAAU,QAAU,IAAI,YAAc,mDAAmD,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,sEAAsE,CAAC,GAAK,aAAa,MAAQ,wBAAwB,KAAO,UAAU,QAAU,IAAI,YAAc,0JAA0J,CAAC,GAAK,aAAa,MAAQ,wBAAwB,KAAO,UAAU,QAAU,IAAI,YAAc,2CAA2C,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,2CAA2C,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,yEAAyE,CAAC,GAAK,aAAa,MAAQ,qCAAqC,KAAO,UAAU,QAAU,IAAI,YAAc,uFAAuF,CAAC,GAAK,aAAa,MAAQ,2BAA2B,KAAO,UAAU,QAAU,IAAI,YAAc,8FAA8F,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,mFAAmF,CAAC,GAAK,aAAa,MAAQ,oBAAoB,KAAO,UAAU,QAAU,IAAI,YAAc,oFAAoF,CAAC,GAAK,aAAa,MAAQ,mBAAmB,KAAO,UAAU,QAAU,IAAI,YAAc,iFAAiF,CAAC,GAAK,aAAa,MAAQ,2BAA2B,KAAO,UAAU,QAAU,IAAI,YAAc,+DAA+D,CAAC,GAAK,aAAa,MAAQ,kCAAkC,KAAO,UAAU,QAAU,IAAI,YAAc,sEAAsE,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,sFAAsF,CAAC,GAAK,aAAa,MAAQ,sBAAsB,KAAO,UAAU,QAAU,IAAI,YAAc,+EAA+E,CAAC,GAAK,aAAa,MAAQ,6BAA6B,KAAO,UAAU,QAAU,IAAI,YAAc,8EAA8E,CAAC,GAAK,aAAa,MAAQ,gBAAgB,KAAO,UAAU,QAAU,IAAI,YAAc,8FAA8F,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,4GAA4G,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,4GAA4G,CAAC,GAAK,aAAa,MAAQ,aAAa,KAAO,UAAU,QAAU,IAAI,YAAc,+EAA+E,CAAC,GAAK,aAAa,MAAQ,yBAAyB,KAAO,UAAU,QAAU,IAAI,YAAc,qGAAqG,CAAC,GAAK,uBAAuB,MAAQ,CAAC,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,CAAC,MAAQ,iBAAiB,MAAQ,CAAC,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,aAAa,aAAa,aAAa,aAAa,eAAe,CAAC,MAAQ,iBAAiB,MAAQ,CAAC,aAAa,aAAa,eAAe,aAAa,eAAe,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,aAAa,aAAa,iBAAiB,CAAC,GAAK,gBAAgB,MAAQ,gBAAgB,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,YAAY,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,gBAAgB,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,cAAc,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,YAAY,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,WAAW,MAAQ,WAAW,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,QAAQ,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,QAAQ,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,SAAS,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,UAAU,KAAO,UAAU,QAAU,O,mBCApxWD,EAAOC,QAAU,CAAC,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,SAAS,QAAU,IAAI,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,YAAY,MAAQ,YAAY,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,QAAQ,MAAQ,eAAe,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,iBAAiB,MAAQ,iBAAiB,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,gBAAgB,MAAQ,gBAAgB,KAAO,UAAU,QAAU,IAAI,UAAW,GAAM,CAAC,GAAK,QAAQ,MAAQ,QAAQ,KAAO,UAAU,QAAU,IAAI,UAAW,GAAO,CAAC,GAAK,UAAU,MAAQ,UAAU,KAAO,UAAU,QAAU,IAAI,UAAW,KAAS,CAAC,GAAK,YAAY,MAAQ,+BAA+B,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,QAAQ,QAAU,GAAG,CAAC,GAAK,KAAK,MAAQ,KAAK,KAAO,QAAQ,QAAU,GAAG,CAAC,GAAK,SAAS,MAAQ,SAAS,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,QAAQ,MAAQ,QAAQ,KAAO,cAAc,QAAU,MAAM,OAAS,CAAC,MAAM,UAAU,CAAC,GAAK,UAAU,MAAQ,0BAA0B,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,OAAO,MAAQ,eAAe,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,aAAa,MAAQ,MAAM,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,YAAY,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,WAAW,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,QAAQ,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,aAAa,MAAQ,eAAe,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,eAAe,MAAQ,wBAAwB,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,KAAK,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,6BAA6B,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,OAAO,MAAQ,oCAAoC,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,0BAA0B,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,qBAAqB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,MAAM,MAAQ,wBAAwB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,yBAAyB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,gBAAgB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,SAAS,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,+CAA+C,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,gBAAgB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,sBAAsB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,cAAc,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,cAAc,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,UAAU,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,QAAQ,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,eAAe,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,wBAAwB,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,cAAc,MAAQ,cAAc,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,aAAa,MAAQ,4BAA4B,KAAO,UAAU,QAAU,IAAI,YAAc,yDAAyD,CAAC,GAAK,aAAa,MAAQ,wBAAwB,KAAO,UAAU,QAAU,IAAI,YAAc,6GAA6G,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,8EAA8E,CAAC,GAAK,aAAa,MAAQ,uBAAuB,KAAO,UAAU,QAAU,IAAI,YAAc,8EAA8E,CAAC,GAAK,aAAa,MAAQ,YAAY,KAAO,UAAU,QAAU,IAAI,YAAc,8HAA8H,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,uDAAuD,CAAC,GAAK,aAAa,MAAQ,mBAAmB,KAAO,UAAU,QAAU,IAAI,YAAc,sIAAsI,CAAC,GAAK,aAAa,MAAQ,cAAc,KAAO,UAAU,QAAU,IAAI,YAAc,8IAA8I,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,qKAAqK,CAAC,GAAK,aAAa,MAAQ,gCAAgC,KAAO,UAAU,QAAU,IAAI,YAAc,iDAAiD,CAAC,GAAK,aAAa,MAAQ,uBAAuB,KAAO,UAAU,QAAU,IAAI,YAAc,sEAAsE,CAAC,GAAK,aAAa,MAAQ,yBAAyB,KAAO,UAAU,QAAU,IAAI,YAAc,uDAAuD,CAAC,GAAK,aAAa,MAAQ,sBAAsB,KAAO,UAAU,QAAU,IAAI,YAAc,+BAA+B,CAAC,GAAK,aAAa,MAAQ,sBAAsB,KAAO,UAAU,QAAU,IAAI,YAAc,+BAA+B,CAAC,GAAK,aAAa,MAAQ,oCAAoC,KAAO,UAAU,QAAU,IAAI,YAAc,oHAAoH,CAAC,GAAK,aAAa,MAAQ,iBAAiB,KAAO,UAAU,QAAU,IAAI,YAAc,mDAAmD,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,sEAAsE,CAAC,GAAK,aAAa,MAAQ,wBAAwB,KAAO,UAAU,QAAU,IAAI,YAAc,0JAA0J,CAAC,GAAK,aAAa,MAAQ,wBAAwB,KAAO,UAAU,QAAU,IAAI,YAAc,2CAA2C,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,2CAA2C,CAAC,GAAK,aAAa,MAAQ,0BAA0B,KAAO,UAAU,QAAU,IAAI,YAAc,yEAAyE,CAAC,GAAK,aAAa,MAAQ,qCAAqC,KAAO,UAAU,QAAU,IAAI,YAAc,uFAAuF,CAAC,GAAK,aAAa,MAAQ,2BAA2B,KAAO,UAAU,QAAU,IAAI,YAAc,8FAA8F,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,mFAAmF,CAAC,GAAK,aAAa,MAAQ,oBAAoB,KAAO,UAAU,QAAU,IAAI,YAAc,oFAAoF,CAAC,GAAK,aAAa,MAAQ,mBAAmB,KAAO,UAAU,QAAU,IAAI,YAAc,iFAAiF,CAAC,GAAK,aAAa,MAAQ,2BAA2B,KAAO,UAAU,QAAU,IAAI,YAAc,+DAA+D,CAAC,GAAK,aAAa,MAAQ,kCAAkC,KAAO,UAAU,QAAU,IAAI,YAAc,sEAAsE,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,sFAAsF,CAAC,GAAK,aAAa,MAAQ,sBAAsB,KAAO,UAAU,QAAU,IAAI,YAAc,+EAA+E,CAAC,GAAK,aAAa,MAAQ,6BAA6B,KAAO,UAAU,QAAU,IAAI,YAAc,8EAA8E,CAAC,GAAK,aAAa,MAAQ,gBAAgB,KAAO,UAAU,QAAU,IAAI,YAAc,8FAA8F,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,4GAA4G,CAAC,GAAK,aAAa,MAAQ,qBAAqB,KAAO,UAAU,QAAU,IAAI,YAAc,4GAA4G,CAAC,GAAK,aAAa,MAAQ,aAAa,KAAO,UAAU,QAAU,IAAI,YAAc,+EAA+E,CAAC,GAAK,aAAa,MAAQ,yBAAyB,KAAO,UAAU,QAAU,IAAI,YAAc,qGAAqG,CAAC,GAAK,uBAAuB,MAAQ,CAAC,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,CAAC,MAAQ,iBAAiB,MAAQ,CAAC,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,aAAa,aAAa,aAAa,aAAa,eAAe,CAAC,MAAQ,iBAAiB,MAAQ,CAAC,aAAa,aAAa,eAAe,aAAa,eAAe,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,aAAa,aAAa,aAAa,aAAa,aAAa,aAAa,eAAe,CAAC,MAAQ,qBAAqB,MAAQ,CAAC,aAAa,aAAa,iBAAiB,CAAC,GAAK,gBAAgB,MAAQ,gBAAgB,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,YAAY,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,KAAK,MAAQ,gBAAgB,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,OAAO,MAAQ,OAAO,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,cAAc,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,YAAY,KAAO,UAAU,QAAU,OAAO,CAAC,GAAK,WAAW,MAAQ,WAAW,KAAO,QAAQ,MAAQ,CAAC,CAAC,GAAK,IAAI,MAAQ,aAAa,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,QAAQ,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,QAAQ,MAAQ,oBAAoB,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,SAAS,KAAO,UAAU,QAAU,KAAK,CAAC,GAAK,IAAI,MAAQ,UAAU,KAAO,UAAU,QAAU,O,mBCAr2WD,EAAOC,QAAU,CAAC,CAAC,GAAK,0BAA0B,QAAU,4EAA4E,CAAC,GAAK,yBAAyB,QAAU,mCAAmC,CAAC,GAAK,wBAAwB,QAAU,wBAAwB,CAAC,GAAK,uBAAuB,QAAU,oCAAoC,CAAC,GAAK,oBAAoB,QAAU,kEAAkE,CAAC,GAAK,oBAAoB,QAAU,2DAA2D,CAAC,GAAK,6BAA6B,QAAU,kEAAkE,IAAM,eAAe,CAAC,GAAK,2BAA2B,QAAU,iEAAiE,IAAM,gBAAgB,CAAC,GAAK,oBAAoB,QAAU,qHAAqH,IAAM,gBAAgB,CAAC,GAAK,wBAAwB,QAAU,sHAAsH,IAAM,gBAAgB,CAAC,GAAK,6BAA6B,QAAU,4FAA4F,IAAM,gBAAgB,CAAC,GAAK,qCAAqC,QAAU,4CAA4C,IAAM,gB,yDCA13C,UAAe,EAAA6S,GAAG,wgZ,wDCAlB,UAAe,EAAAA,GAAG,4pJ,yDCAlB,UAAe,EAAAA,GAAG,0+H,yDCAlB,UAAe,EAAAA,GAAG,4hH,yDCAlB,UAAe,EAAAA,GAAG,gkI,yDCAlB,UAAe,EAAAA,GAAG,+rH,yDCAlB,UAAe,EAAAA,GAAG,osH,yDCAlB,UAAe,EAAAA,GAAG,mI,gsCCA3C,gBACA,aACA,aACA,UACM2qB,EAAQ,IACd,UAGA,IAAIC,EAAyB,KACzBC,EAAmD,KACnDC,EAAoB,IAAIpS,IA2K5B,SAASqS,EAAiBhU,EAAgBiU,GACxC,MAAMC,EACJh0B,KAAK+B,MAAM+d,GAAUiU,EAAQ,KAAOA,EAAQ,GAAKA,EAAQ,EAC3D,OAAO/zB,KAAKqT,IAAI,EAAG2gB,EACrB,CA5Ka,EAAAC,cAAgB,MAC3B,IAAIC,GAAsB,EAE1B,OAAO7hB,EAAE6gB,SAAS,CAACpT,EAAS,EAAGqU,GAAc,KAE3C,GAAID,IAAwBC,EAC1B,OAGF,MAAMC,EAAgB,EAAA79B,aAAagM,QAAQ,cAO3C,GAJIoxB,GACFA,EAAuBU,QAGrBT,GAAsBA,IAAuBQ,EAE/CR,EAAqBQ,EACrBD,GAAc,EACdN,EAAkBS,YACb,CAEL,MAAMC,EAAczU,EAAUA,EAAS4T,EACjCc,EAAW,GAAGD,KAAeA,EAAcb,IAEjD,GAA2C,WAAvC,EAAAn9B,aAAagM,QAAQ,cAA4B,CAEnD,GAAKsxB,EAAkB5pB,IAAIuqB,GAGzB,OAFAX,EAAkBh9B,IAAI29B,EAI1B,CACF,CAGAZ,EAAqBQ,EAGrBT,EAAyB,IAAIc,gBAC7B,MAAMC,EAASf,EAAuBe,OAGlCP,IA0CN,EAAA59B,aAAage,QAAQ,kBAAmB,GACxC,EAAAhe,aAAage,QAAQ,SAAU,GAC/B,EAAAhe,aAAage,QAAQ,WAAY,GACjC,EAAAhe,aAAage,QAAQ,cAAc,GACnC,EAAAhe,aAAage,QAAQ,gBAAiB,IACtCsf,EAAkBS,QA7CdT,EAAkBS,SAIpB,EAAA/9B,aAAage,QAAQ,cAAc,GACnC2f,GAAsB,EAGtB,MAAMS,EAyCV,SACE7U,EACAqU,GAEA,IAAIS,EACA1b,EAAa,GAEjB,OAAQ,EAAA3iB,aAAagM,QAAQ,eAC3B,IAAK,SAAU,CAEb,MAAMgyB,EAAczU,EAAUA,EAAS4T,EAQvC,OAPAxa,EAAa8X,EAAG1b,WACd,IAAA4c,wBAAuB,EAAA37B,aAAagM,QAAQ,4BAE9CqyB,EAAW,GAAG,EAAAxuB,yBAAyBmuB,IACrCrb,EAAa,IAAMA,EAAa,KAG3Bib,EACH,CAAC,GAAGS,kBAA0B,GAAGA,mBACjC,CAAC,GAAGA,kBACV,CAEA,IAAK,WAIH,OAFAA,EAAW,GAAG,EAAAxuB,6BAEP+tB,EACH,CAAC,GAAGS,kBAA0B,GAAGA,mBACjC,CAAC,GAAGA,mBAGd,CAzEyBC,CAA0B/U,EAAQqU,GAGjDW,EAyEV,SAA4BJ,GAC1B,GAA2C,WAAvC,EAAAn+B,aAAagM,QAAQ,cAEvB,MAAO,CACLqU,OAAQ,MACR8b,QAAS,CACP,eAAgB,mBAChBC,OAAQ,oBAEVzmB,KAAM,OACNwoB,OAAQA,GAKZ,MAAMje,EAAgD,CACpDqJ,OAAQgU,EAAiB,EAAAv9B,aAAagM,QAAQ,UAAWmxB,IAIzD,EAAAn9B,aAAagM,QAAQ,6BACrBvM,OAAOD,KAAK,EAAAQ,aAAagM,QAAQ,6BAA6B1K,OAAS,IAEvE4e,EAAK7b,MAAQ,EAAArE,aAAagM,QAAQ,6BAGpC,MAAO,CACLqU,OAAQ,OACR8b,QAAS,CACP,eAAgB,mBAChBC,OAAQ,oBAEVzmB,KAAM,OACNwoB,OAAQA,EACRje,KAAMzB,KAAKM,UAAUmB,GAEzB,CA7G2Bse,CAAmBL,GAGtCC,GAAgBA,EAAa98B,OAAS,EACxCvC,QAAQqmB,IACNgZ,EAAa1/B,IAAK+/B,GAiH1B,SAA0BA,EAAkB37B,G,wDAsDbwrB,EArD7B,IACE,MAAMoQ,QAAiBC,MAAMF,EAAU37B,GACvC,IAAK47B,EAASE,GACZ,MAAM,IAAIz/B,MAuCK,CACjB,IAAK,kBACL,IAAK,eACL,IAAK,YACL,IAAK,wBACL,IAAK,eA5C8Bu/B,EAASv+B,SA8Cb,iBA5C/B,MAAM0+B,QAAqBH,EAASpQ,OAC9BhB,EAAM,IAAInJ,IAAIsa,GACdK,EAAcr/B,OAAOg6B,YAAYnM,EAAIlJ,aAAauQ,WAGpD0I,IAAuB,EAAAr9B,aAAagM,QAAQ,gBACrB,MAArB8yB,EAAYzpB,OA0CSiZ,EAzCDuQ,EA2C5B,EAAA7+B,aAAa++B,WAAWzQ,EAAKjZ,KAAMiZ,EAAK0Q,OAAOzV,SAzClB,MAArBuV,EAAYG,MA6CtB,SAA4B3Q,GAE1B,EAAAtuB,aAAage,QAAQ,eAAgB,CACnCkhB,UAAWz1B,KAAKonB,IAAIvC,EAAK6Q,WAAW3Z,SAAU8I,EAAK0Q,OAAOI,UAC1D5Z,SAAU8I,EAAK6Q,WAAW3Z,SAC1B6D,MAAOiF,EAAK6Q,WAAW9V,QAEzB,EAAArpB,aAAage,QACX,kBACA,EAAAhe,aAAagM,QAAQ,gBAAgBkzB,WAIvC,EAAAl/B,aAAage,QAAQ,oBAAqBsQ,EAAK6Q,WAAW/9B,SAC1D,EAAApB,aAAage,QAAQ,yBAA0BsQ,EAAK6Q,WAAW1U,cAC/D,EAAAzqB,aAAage,QAAQ,iBAAkBsQ,EAAK6Q,WAAWp7B,MACvD,EAAA/D,aAAage,QAAQ,wBAAyBsQ,EAAK6Q,WAAWxvB,YAChE,CA7DQ0vB,CAAmBR,IAInBA,EAAaS,QAAUT,EAAaU,SAAWV,EAAarP,MAC9D,EAAAxvB,aAAage,QAAQ,iBAAkB,CACrCshB,OAAiC,QAAzB,EAAmB,QAAnB,EAAAT,EAAaS,cAAM,eAAEp6B,YAAI,sBAAG,QACpCq6B,QAAmC,QAA1B,EAAoB,QAApB,EAAAV,EAAaU,eAAO,eAAEr6B,YAAI,sBAAG,QACtCsqB,MAA+B,QAAxB,EAAkB,QAAlB,EAAAqP,EAAarP,aAAK,eAAEtqB,YAAI,sBAAG,UAGpC,EAAAlF,aAAage,QAAQ,iBAAkB,GAE3C,CAAE,MAAOwR,GAEP,GADAD,QAAQC,MAAMA,GACK,eAAfA,EAAM3E,KAAuB,CAE/B,MAAM2U,EAAa,IAAIrgC,MAAM,WAE7B,MADAqgC,EAAW3U,KAAO,aACZ2U,CACR,CACA,MAAMhQ,CACR,CACF,E,CAxJuCiQ,CAAWhB,EAAUF,KAEnDt/B,KAAK,KAEJ,EAAAe,aAAage,QAAQ,cAAc,GACnC2f,GAAsB,EA4LhC,W,iCAGE,OADA,EAAA39B,aAAagM,QAAQ,cACb,EAAAhM,aAAagM,QAAQ,eAC3B,IAAK,SACC,EAAAhM,aAAagM,QAAQ,0BAA0B8T,MACjDpd,SAASwd,KAAK1F,aAAa,sBAAuB,QAEpD,MACF,IAAK,WACH9X,SAASwd,KAAKwf,gBACZ,sBACAjgC,OAAOD,KAAK,EAAAQ,aAAagM,QAAQ,6BAA6B1K,OAAS,GAK7E,EAAAtB,aAAa2/B,QAAQ,UAGrB,EAAA3/B,aAAa2/B,QAAQ,iBAGrB,EAAA3/B,aAAage,QAAQ,YAAa,SACpC,E,CAnNU4hB,KAEDC,MAAOrQ,IAEa,eAAfA,EAAM3E,OACV,EAAA7qB,aAAage,QAAQ,cAAc,GACnC2f,GAAsB,EACtB,EAAA39B,aAAage,QAAQ,iBAAkB,CAAEwR,cAG7C,EAAAxvB,aAAage,QAAQ,cAAc,GACnC2f,GAAsB,IAEvB,IACJ,EAlF4B,E,yKCb7B,mBACA,aACA,UACA,UACA,UACA,UAoHA,MAAM56B,UAA0B,UA6B9B,WAAAlD,CACEY,EACAC,EACAmC,EACAi9B,EACAj/B,EAA4B,MAE5BE,MAAM,EAAAC,oBAAoByE,UAAWhF,EAASC,EAAYG,GAmN3C,KAAAk/B,oBAAsBhgC,KAAKigC,eAAe//B,KAAKF,MAjN9DA,KAAKqN,eAAiBvK,EACtB9C,KAAKkgC,cAAe,EACpBlgC,KAAKmgC,kBAAoB,KAEzBngC,KAAKogC,iBACLpgC,KAAKqgC,qBACLrgC,KAAKsgC,uBACLtgC,KAAKugC,mBACP,CAKQ,cAAAH,GACNpgC,KAAKmB,KAAKd,UAAUE,IAAI,uCACxBP,KAAKmB,KAAKE,QAAQm/B,eAAiBxgC,KAAKqN,eACxCrN,KAAKmB,KAAKE,QAAQo/B,SAAWzgC,KAAK0gC,qBAClC1gC,KAAKmB,KAAKK,UAAYxB,KAAK2gC,cAC7B,CAKQ,kBAAAD,GAQN,MAPwB,CACtB,UACA,WACA,2BACA,KACA,YAEqBlpB,SAASxX,KAAKqN,gBAAkB,GAAK,IAC9D,CAKQ,YAAAszB,GACN,MAAO,8FAID,EAAA57B,oBAAoB/E,KAAKqN,gBAAgBnI,+WAYjD,CAKQ,kBAAAm7B,GACN,MAAMlgB,EAAOngB,KAAKmB,KAAKO,cAAc,kBAC/Bk/B,EAAUzgB,EAAKze,cAAc,qBAEnC1B,KAAK6gC,UAAYD,EAAQl/B,cACvB,oBAEF1B,KAAK8gC,UAAY3gB,EAAKze,cACpB,mDAGF1B,KAAK+gC,iBAAmB,IAAI,UAAgB/gC,KAC9C,CAKQ,oBAAAsgC,GACNtgC,KAAKghC,gCACLhhC,KAAKihC,wBACLjhC,KAAKkhC,uBACLlhC,KAAKmhC,uBACLnhC,KAAKohC,uBACP,CAKQ,6BAAAJ,GACNhhC,KAAKmB,KAAKY,iBAAiB,QAAU5C,IACnCA,EAAE8C,4BAEN,CAKQ,qBAAAg/B,GACUjhC,KAAKmB,KAAKO,cAAc,6BAChCK,iBAAiB,QAAS/B,KAAKgC,iBAAiB9B,KAAKF,MAC/D,CAKQ,oBAAAkhC,GACUlhC,KAAKmB,KAAKO,cAAc,6BACRA,cAAc,sBAE9BK,iBAAiB,QAAU5C,IACzCA,EAAE8C,2BACFjC,KAAKqhC,kBAET,CAKQ,cAAAA,GACN,MAAMC,EAAkBthC,KAAKmB,KAAKE,QAAQo/B,SAC1CzgC,KAAKmB,KAAKE,QAAQo/B,SAA+B,OAApBa,EAA2B,KAAO,KAE1D,EAAArhC,aAAagM,QAAQ,eACxBjM,KAAKmgC,kBAAoBngC,KAAKmB,KAAKE,QAAQo/B,SAC3CzgC,KAAKuC,SAASC,kBAElB,CAKQ,oBAAA2+B,GACN,MACMpf,EADU/hB,KAAKmB,KAAKO,cAAc,6BAChB2B,iBAAiB,8BAEzC,IAAK,MAAM2L,KAAU+S,EACnB/S,EAAOjN,iBAAiB,QAAU5C,IAChCA,EAAE8C,2BACFjC,KAAKuhC,kBAAkBpiC,EAAE8R,SAG/B,CAKQ,iBAAAswB,CAAkBtwB,GACxB,OAAQA,EAAO1D,WACb,IAAK,OACHvN,KAAKwhC,gBACL,MACF,IAAK,SACHxhC,KAAKuC,SAASuD,OAAO,CAAC9F,OAG5B,CAKQ,aAAAwhC,GACNxhC,KAAKmB,KAAKd,UAAUE,IAAI,YACxBP,KAAK+gC,iBAAiBU,uBACtB,EAAAxhC,aAAage,QAAQ,aAAa,GAClC6F,OAAO/hB,iBAAiB,UAAW/B,KAAKggC,oBAC1C,CAKQ,qBAAAoB,GACNtd,OAAO/hB,iBAAiB,UAAW/B,KAAKggC,oBAC1C,CAKQ,iBAAAO,GACUvgC,KAAKmB,KAAKO,cAAc,6BACbA,cACzB,mCAES0K,cAAc,IAAImY,MAAM,SACrC,CAKA,WAAAmd,GACE1hC,KAAKmB,KAAKd,UAAUC,OAAO,YAC3BN,KAAKkgC,cAAe,EACpBlgC,KAAKuC,SAASC,kBACd,EAAAvC,aAAage,QAAQ,aAAa,GAClC6F,OAAOrP,oBAAoB,UAAWzU,KAAKggC,oBAC7C,CAMA,MAAA1/B,UACSN,KAAK+gC,iBACZ//B,MAAMV,SACN,EAAAL,aAAage,QAAQ,aAAa,GAClC6F,OAAOrP,oBAAoB,UAAWzU,KAAKggC,oBAC7C,CAWQ,cAAAC,CAAe9gC,GAET,WAAVA,EAAE6F,KACDhF,KAAK+gC,kBACL,EAAA9gC,aAAagM,QAAQ,eAKpB,IAAAixB,cAAa,eACXl9B,KAAKkgC,aACPlgC,KAAKM,UAELN,KAAK2hC,gBACL3hC,KAAK0hC,eAGX,CAKQ,aAAAC,GACN,IAAK,MAAMC,KAAU5hC,KAAK+gC,iBAAiBc,QACzCD,EAAOxyB,UACPpP,KAAKmB,KAAKE,QAAQo/B,SAAWzgC,KAAKmgC,iBAEtC,CAKA,iBAAIr9B,GACF,OAAO9C,KAAKqN,cACd,CAKA,iBAAImB,GACF,OAAOxO,KAAK6gC,SACd,CAKA,iBAAIiB,GACF,OAAO9hC,KAAK8gC,SACd,CAKA,eAAIjD,GACF,OAAO79B,KAAKkgC,YACd,CAKA,oBAAI6B,GACF,OAAO/hC,KAAKmgC,iBACd,CAMA,SAAI77B,GACF,MAAM09B,EAAgBhiC,KAAKiiC,mBAE3B,OAAQjiC,KAAKqN,gBACX,KAAK,EAAAkD,eAAelP,QACpB,KAAK,EAAAkP,eAAe4pB,SAClB,OAAOn6B,KAAKkiC,kBAAkBF,GAEhC,KAAK,EAAAzxB,eAAe6pB,yBAClB,OAAOp6B,KAAKmiC,wBAAwBH,GAEtC,KAAK,EAAAzxB,eAAewS,SAClB,OAAO/iB,KAAKoiC,mBAAmBJ,GAEjC,KAAK,EAAAzxB,eAAegqB,YAClB,OAAOv6B,KAAKqiC,eAAeL,GAE7B,KAAK,EAAAzxB,eAAeiqB,WAClB,OAAOx6B,KAAKsiC,oBAAoBN,GAElC,KAAK,EAAAzxB,eAAema,aAClB,OAAO1qB,KAAKuiC,yBAEd,QACE,OAAOviC,KAAKwiC,kBAAkBR,GAEpC,CAKQ,gBAAAC,GACN,OAAO9+B,MAAMC,KACXpD,KAAK6gC,UAAUx9B,iBAAiB,sCAEpC,CAKQ,iBAAA6+B,CACNF,GAEA,MAAMS,EAAUT,EAAcrjC,IAAK4E,GACbA,EAAa20B,WACQx2B,cACvC,8BAE2BghC,YAG/B,OAAOD,EAAQlhC,QAAU,EAAIkhC,EAAQ,GAAK,CAAEtgC,GAAIsgC,EAClD,CAKQ,uBAAAN,CACNH,GAOA,OALoBA,EAAc,GAAW9J,WACRx2B,cACnC,yBAGuBghC,UAC3B,CAKQ,kBAAAN,CACNJ,GAEA,MAAMp0B,EAAQo0B,EAAc,GAAGp0B,OACxBwU,EAAYugB,GAAe/0B,EAAM2U,MAAM,KACxCqgB,EAAgBD,EAAYpgB,MAAM,KAExC,IAAIxZ,EAUJ,OAREA,EAD2B,IAAzB65B,EAAcrhC,QACJqhC,EAAc,GAEf,CACT5f,KAAM4f,EAAc,GACpB3f,KAAM2f,EAAc,IAIjB,CAAE7f,SAAU,CAAEX,aAAYrZ,YACnC,CAKQ,cAAAs5B,CACNL,G,MAEA,MAAMa,EAA0B,QAAhB,EAAAb,EAAc,UAAE,eAAEp0B,MAClC,MAAO,CACLk1B,KAAM,CACJrC,SAAUzgC,KAAKmB,KAAKE,QAAQo/B,SAC5BsC,MAAO,CAACnQ,OAAOiQ,KAGrB,CAKQ,mBAAAP,CACNN,GAGA,MAAO,CAAEziC,GADGyiC,EAAcrjC,IAAKsU,GAAYA,EAAQrF,OAErD,CAKQ,sBAAA20B,GACN,MAAMS,EAAqBhjC,KAAKijC,mBAC1BC,EAAuBljC,KAAKmjC,qBAE5BC,EAA8C,OAA/BpjC,KAAKmB,KAAKE,QAAQo/B,SAAoB,MAAQ,KAI7D7d,EAAa,CAHI5iB,KAAKqjC,oBAAoBL,GACvBhjC,KAAKsjC,sBAAsBJ,IAEEn3B,OAAO0J,SAE7D,OAA6B,IAAtBmN,EAAWrhB,OACdqhB,EAAW,GACX,CAAE,CAACwgB,GAAexgB,EACxB,CAKQ,gBAAAqgB,GACN,OAAO9/B,MAAMC,KACXpD,KAAK6gC,UAAUx9B,iBACb,kFAGN,CAKQ,kBAAA8/B,GACN,OAAOhgC,MAAMC,KACXpD,KAAK6gC,UAAUx9B,iBACb,sFAGN,CAKQ,mBAAAggC,CACNE,GAEA,OAAOA,EAAShiC,OAAS,EACrB,CACE,CAACvB,KAAKqN,gBAAiB,CACrBozB,SAAUzgC,KAAKmB,KAAKE,QAAQo/B,SAC5B7W,OAAQ,CAAC,SACTmZ,MAAOQ,EAAS5kC,IAAKiP,GAAUA,EAAMA,SAGzC,IACN,CAKQ,qBAAA01B,CACNC,GAEA,OAAOA,EAAShiC,OAAS,EACrB,CACE,CAACvB,KAAKqN,gBAAiB,CACrBozB,SAAUzgC,KAAKmB,KAAKE,QAAQo/B,SAC5B7W,OAAQ,CAAC,WACTmZ,MAAOQ,EAAS5kC,IAAKiP,GAAUA,EAAMA,SAGzC,IACN,CAKQ,iBAAA40B,CACNR,GAEA,MAAO,CACL,CAAChiC,KAAKqN,gBAAiB,CACrBozB,SAAUzgC,KAAKmB,KAAKE,QAAQo/B,SAC5BsC,MAAOf,EAAcrjC,IAAKiP,GAAUA,EAAMA,QAGhD,EAGF,UAAe5K,C,i6BCvoBf,mBACA,UA8BA,MAAqBwgC,UAAiD,UAQpE,WAAA1jC,CAAYoN,EAA6BtL,GACvCZ,MAAMkM,EAAYtL,G,YARpB,mBACA,mBACA,mBASE,MAAMP,EAAmB,EAAA0D,oBAAoB/E,KAAKqN,gBAElDrN,KAAKsN,eACH,6BACA,wBACetN,KAAKqN,0TAQlB,EAAArN,KAAI,SAAsB,KAA1BA,KAA2BqB,EAAQuN,OAAOue,MAAO,2KAOjD,EAAAntB,KAAI,SAAsB,KAA1BA,KAA2BqB,EAAQuN,OAAOwe,QAAS,+BAKvD,EAAAptB,KAAI,EAAW,CAAEmtB,MAAO,GAAIC,QAAS,IAAI,KACzC,EAAAptB,KAAI,EAAe,CAAEmtB,MAAO,GAAIC,QAAS,IAAI,KAGjB,iBAAxBptB,KAAKqN,gBACPrN,KAAKwN,IAAI9L,cAAc,uBAAuBpB,SAIhD,EAAAN,KAAI,EAAemD,MAAMC,KACvBpD,KAAKwN,IAAInK,iBAAiB,qCAC3B,KAGD,EAAArD,KAAI,SAAsB,KAA1BA,MACA,EAAAA,KAAI,SAAoB,KAAxBA,KACF,CA8CA,cAAAkP,GACE,MAAM8zB,EAAqB7/B,MAAMC,KAC/BpD,KAAKiO,eAAe5K,iBAClB,mFAGE6/B,EAAuB//B,MAAMC,KACjCpD,KAAKiO,eAAe5K,iBAClB,uFAIJ,EAAArD,KAAI,EAAe,CACjBmtB,MAAO6V,EAAmBrkC,IAAKiP,IAAU,CACvCA,MAAOA,EAAMA,MACb1I,MAAO0I,EAAM1I,SAEfkoB,QAAS8V,EAAqBvkC,IAAKiP,IAAU,CAC3CA,MAAOA,EAAMA,MACb1I,MAAO0I,EAAM1I,UAEhB,IACH,CAEA,OAAAkK,GACE,EAAApP,KAAI,OAAawF,QAASsJ,IAExB,MAKM20B,GAJwB,UAA5B30B,EAASzN,QAAQuoB,OACb,EAAA5pB,KAAI,OAAamtB,MACjB,EAAAntB,KAAI,OAAaotB,SAEU/d,KAAMzB,GAC9BA,EAAMA,QAAUkB,EAASlB,OAIlCkB,EAASG,UAAYw0B,IAEvB,EAAAzjC,KAAI,SAAQ,KAAZA,KACF,CA4JA,WAAIuP,GACF,OAAO,EAAAvP,KAAI,OAAawP,KAAMV,GAAaA,EAASG,QACtD,E,mEAjPEL,EACAgb,GAEA,OAAOhb,EACJjQ,IACEiP,GAAU,6BACOA,EAAMA,uBAAuBgc,6FAIlChc,EAAMA,oCACAgc,+BACDhc,EAAM1I,0EACgC0I,EAAMA,iCACtDA,EAAM1I,4CAIfC,KAAK,GACV,EAAC,aAGC,EAAAnF,KAAI,OAAawF,QAASsJ,IACxBA,EAAS/M,iBAAiB,SAAU,KAClC,EAAA/B,KAAI,SAAQ,KAAZA,SAGN,EAAC,aAKCA,KAAKwN,IACFnK,iBAAiB,8BACjBmC,QAAQ,CAACwJ,EAAQ/J,KAChB+J,EAAOjN,iBAAiB,QAAS,KAC/B,EAAA/B,KAAI,OAAawF,QAASsJ,GAAcA,EAASG,SAAWhK,GAC5D,EAAAjF,KAAI,SAAQ,KAAZA,SAGR,EAAC,aAkDC,EAAAA,KAAI,OAAawF,QAASsJ,IACxB,MAAM6pB,EAAW,CACf/qB,MAAOkB,EAASlB,MAChB1I,MAAO4J,EAASzN,QAAQ6D,OAGtB4J,EAASG,QAEX,EAAAjP,KAAI,SAAgB,KAApBA,KACE8O,EAASzN,QAAQuoB,OACjB+O,GAIF,EAAA34B,KAAI,SAAa,KAAjBA,KACE8O,EAASzN,QAAQuoB,OACjB9a,EAASlB,MACTkB,EAASzN,QAAQ6D,SAMvB,EAAAlF,KAAI,SAAqC,KAAzCA,MAGAA,KAAKmN,YAAYsC,OAAO,EAAAzP,KAAI,SAAU,KAAdA,MAC1B,EAAC,WAIC4pB,EACA+O,GAEA,MAAM/pB,EACO,UAAXgb,EAAqB,EAAA5pB,KAAI,OAASmtB,MAAQ,EAAAntB,KAAI,OAASotB,QAC1Cxe,EAAOY,KACnBsB,GAASA,EAAKlD,QAAU+qB,EAAS/qB,OAASkD,EAAK5L,QAAUyzB,EAASzzB,QAInE0J,EAAOlE,KAAKiuB,EAEhB,EAAC,WAIY/O,EAAuBhc,EAAe1I,GACjD,MAAM0J,EACO,UAAXgb,EAAqB,EAAA5pB,KAAI,OAASmtB,MAAQ,EAAAntB,KAAI,OAASotB,QACnDnoB,EAAQ2J,EAAO80B,UAClB5yB,GAASA,EAAKlD,QAAUA,GAASkD,EAAK5L,QAAUA,IAGpC,IAAXD,GACF2J,EAAO+0B,OAAO1+B,EAAO,GAGD,IAAlB2J,EAAOrN,QACT,EAAAvB,KAAI,SAAwB,KAA5BA,KAA6B4pB,EAEjC,EAAC,WAGuBA,GACtB,MAAMga,EAAO5jC,KAAKiO,eAAevM,cAAc,QAAQkoB,KACjDia,EAAU7jC,KAAKiO,eAAevM,cAClC,IAAIkoB,uBAGFga,GAAMA,EAAKtjC,SACXujC,GAASA,EAAQvjC,QACvB,EAAC,aAKK,EAAAN,KAAI,OAASmtB,MAAM5rB,OAAS,GAC9B,EAAAvB,KAAI,SAAqB,KAAzBA,KAA0B,SAExB,EAAAA,KAAI,OAASotB,QAAQ7rB,OAAS,GAChC,EAAAvB,KAAI,SAAqB,KAAzBA,KAA0B,WAG5B,EAAAA,KAAI,SAAsB,KAA1BA,KAA2B,QAAS,EAAAA,KAAI,OAASmtB,OACjD,EAAAntB,KAAI,SAAsB,KAA1BA,KAA2B,UAAW,EAAAA,KAAI,OAASotB,QACrD,EAAC,WAKCxD,EACAhb,GAEA,MAAMi1B,EAAU7jC,KAAKiO,eAAevM,cAClC,IAAIkoB,uBAIFia,GACFA,EACGxgC,iBAAiB,6BACjBmC,QAASjC,GAASA,EAAKjD,UAI5BsO,EAAOpJ,QAASoI,IACd,MAAMI,EAAYrL,SAASC,cACzB,6BAEFoL,EAAUlL,cAAgB9C,KAAKqN,eAC/BW,EAAU9I,MAAQ0I,EAAM1I,MACxB8I,EAAUJ,MAAQA,EAAMA,MAExBi2B,EAAQhiC,OAAOmM,IAEnB,EAAC,WAGoB4b,GACnB,MAAMka,EAAe,GAAGla,YAClBma,EAAwB,GAAGna,sBAEjC,IAAK5pB,KAAKiO,eAAevM,cAAc,IAAIoiC,KAAiB,CAC1D,MAAMD,EAAUlhC,SAASC,cAAc,OACvCihC,EAAQxjC,UAAUE,IAAIujC,GACtB9jC,KAAKiO,eAAepM,OAAOgiC,EAC7B,CAEA,IAAK7jC,KAAKiO,eAAevM,cAAc,IAAIqiC,KAA0B,CACnE,MAAMH,EAAOjhC,SAASC,cAAc,QACpCghC,EAAKvjC,UAAUE,IAAIqpB,GACnBga,EAAKre,YAAyB,UAAXqE,EAAqB,QAAU,UAElD,MAAMoa,EAAmBrhC,SAASC,cAAc,OAChDohC,EAAiB3jC,UAAUE,IAAIwjC,GAE/B/jC,KAAKiO,eACFvM,cAAc,IAAIoiC,KAClBjiC,OAAO+hC,EAAMI,EAClB,CACF,EAAC,aAGC,OAAOhkC,KAAKuP,OACd,E,UAnSmBi0B,C,qwCC/BrB,gBACA,UACA,UAEA,aAEA,UAoBA,MAAqBS,UAA2C,UAY9D,WAAAnkC,CAAYoN,EAA6BtL,GACvCZ,MAAMkM,EAAYtL,G,YAZpB,mBACA,mBACA,mBACA,mBACA,mBAUE,EAAA5B,KAAI,EAAS,EAAAA,KAAI,SAAyB,KAA7BA,MAA+B,KAC5C,EAAAA,KAAI,EAA2B,GAAE,KACjC,EAAAA,KAAI,EAAoB,EAAC,KAEzB,EAAAA,KAAI,SAAc,KAAlBA,MACA,EAAAA,KAAI,SAAqB,KAAzBA,KACF,CAMA,cAAAkP,GACE,EAAAlP,KAAI,EAAmBA,KAAKoO,YAAW,IACzC,CAMA,OAAAgB,GACE,EAAApP,KAAI,SAAqB,KAAzBA,MACA,EAAAA,KAAI,SAAsB,KAA1BA,MACA,EAAAA,KAAI,SAAU,KAAdA,MACAA,KAAKqO,kBAAkB,EAAArO,KAAI,OAC7B,CAMA,WAAIuP,GACF,OAAO,EAAAvP,KAAI,SAAqB,KAAzBA,KACT,E,iGAOEA,KAAKsN,eACH,sBACA,wBACetN,KAAKqN,kGAKtB,EAAArN,KAAI,EAAYA,KAAK0N,MAAMhM,cAAc,qBAAoB,IAC/D,EAAC,aAOC,EAAA1B,KAAI,SAAY,KAAhBA,KACF,EAAC,aAQoBkkC,GACnB,OAAOA,EAAUvlC,IAAKuZ,I,QACf0a,OAAOuR,UAAU,EAAAnkC,KAAI,SACxB,EAAAA,KAAI,EAAoB,EAAC,KAG3B,MAAMokC,EAAa,+BACdlsB,GAAI,CACP3Y,GAAI,GAAG,EAAAS,KAAA,OAAAA,KAAA,aAAuB,YAC9BiP,SAAS,EACT6C,eAAe,IASjB,OANIsyB,EAAc7/B,UAAY6/B,EAAc7/B,SAAShD,OAAS,IAC5D6iC,EAAc7/B,SAAW,EAAAvE,KAAI,SAAqB,KAAzBA,KACvBokC,EAAc7/B,WAIX6/B,GAEX,EAAC,aAQC,OAAQpkC,KAAKqN,gBACX,KAAK,EAAAkD,eAAelP,QACpB,KAAK,EAAAkP,eAAe4pB,SAAU,CAC5B,MAAMkK,EAAU,EAAAt/B,oBAAoB/E,KAAKqN,gBACtCuB,OACG01B,EAAgB,EAAAtkC,KAAI,SAAqB,KAAzBA,KAA0BqkC,GAEhD,OAAO,IAAAE,WAA+B,CACpChlC,GA3HW,KA4HX2F,MAAO,OACP0I,MAAO,GACPrJ,SAAU+/B,EACVr1B,SAAS,EACT6C,eAAe,GAEnB,CACA,QACE,MAAM,IAAI1S,MACR,+DAGR,EAAC,WAOiBqR,G,wCAChB,MAAM+zB,EAAU,EAAAvkC,aAAagM,QAAQ,WAC/B0E,QAAc,EAAA3Q,KAAI,SAAe,KAAnBA,KAAoByQ,GAElCG,EAAS,EAAA5Q,KAAI,SAAqB,KAAzBA,MACf,EAAAA,KAAI,OAAU6B,OAAO+O,GAErBA,EAAOpP,UAAY,EAAAxB,KAAI,SAAoB,KAAxBA,KAAyB2Q,EAAO6zB,GAEnD,EAAAxkC,KAAI,SAA4B,KAAhCA,KAAiC4Q,EAAQ4zB,GACzC,EAAAxkC,KAAI,SAAU,KAAdA,MACA,EAAAA,KAAI,SAAyB,KAA7BA,KACF,E,eAQE,MAAM4Q,EAASjO,SAASC,cAAc,OAKtC,OAJAgO,EAAOvQ,UAAUE,IAAI,UACrBqQ,EAAOvP,QAAQwP,MAAQ,EAAA7Q,KAAI,OACxBqD,iBAAiB,oBACjB9B,OAAOkjC,WACH7zB,CACT,EAAC,WAUCD,EACA6zB,GAEA,MAAO,yBAED7zB,EACChS,IAAKmS,GAAS,EAAA9Q,KAAI,SAAsB,KAA1BA,KAA2B8Q,EAAM0zB,IAC/Cr/B,KAAK,kBAEd,EAAC,WAUC2L,EACA0zB,GAEA,MAAME,EAAU,YAAY5zB,EAAKwE,KAAK/V,KACtC,IAAIolC,EAAW,gBAAgB7zB,EAAKwE,KAAK/V,oBAAoBuR,EAAKC,OAAOuE,KAAK/V,MAyB9E,OAvBIuR,EAAKwE,KAAK1H,QACZ+2B,GAAY,gBAAgB7zB,EAAKwE,KAAK1H,UAGxC+2B,GAAY,gBAAgBD,MAExB,EAAA1kC,KAAI,SAAoB,KAAxBA,KAAyB8Q,EAAM0zB,GACjCG,GAAY,6BAEZA,GAAY,8BAA8BD,aAAmB5zB,EAAKwE,KAAK/V,OAGrE,EAAAS,KAAI,SAAuB,KAA3BA,KAA4B8Q,KAC9B6zB,GAAY,4CAA4C7zB,EAAKwE,KAAK1H,kBAGpE+2B,GAAY,SAAS7zB,EAAKwE,KAAKpQ,4BAEToK,IAAlBwB,EAAKvM,WACPogC,GAAY,+BAA+B7zB,EAAKwE,KAAK/V,mBAAmBuR,EAAKwE,KAAK1H,iBAGpF+2B,GAAY,QACLA,CACT,EAAC,WAUC7zB,EACA0zB,G,MAEA,OAAmB,IAAZA,IAAoC,QAAf,EAAA1zB,EAAKwE,KAAK1H,aAAK,eAAE4J,SAAS,YACxD,EAAC,WAQsB1G,GACrB,OACG9Q,KAAKqN,iBAAmB,EAAAkD,eAAelP,SACtCrB,KAAKqN,iBAAmB,EAAAkD,eAAe4pB,WAC1B,IAAfrpB,EAAKD,KAET,EAAC,WAQ2BD,EAAqB4zB,GAC/C,EAAAxkC,KAAI,SAA8B,KAAlCA,KAAmC4Q,GACnC,EAAA5Q,KAAI,SAAgC,KAApCA,KAAqC4Q,EAAQ4zB,EAC/C,EAAC,WAO6B5zB,GAC5BA,EAAO7O,iBAAiB,SAAW5C,IACjC,MAAM8R,EAAS9R,EAAE8R,OACXhC,EAAUgC,EAAOhC,QACjB21B,EAAS3zB,EAAOC,QAAQ,MAAM7P,QAAQ9B,GACtCslC,EAAc,EAAA7kC,KAAI,OAAOqP,KAAMiB,GAAUA,EAAMgF,KAAK/V,KAAOqlC,GAE7DC,EAAYtgC,UACd,EAAAvE,KAAI,SAA0B,KAA9BA,KAA+B6kC,EAAa51B,GAC1C41B,EAAY9zB,QACd,EAAA/Q,KAAI,SAAwB,KAA5BA,KAA6B6kC,EAAa51B,GAE5C,EAAAjP,KAAI,SAAU,KAAdA,OAEJ,EAAC,WAQ+B4Q,EAAqB4zB,GACnD,IAAK,MAAMM,KAASl0B,EAAOvN,iBAAiB,6BAC1CyhC,EAAM/iC,iBAAiB,QAAU5C,IAC/B,MAAM8R,EAAS9R,EAAE8R,OACX0zB,EAAW1zB,EAAOC,QAAQ,MAEhC,EAAAlR,KAAI,SAAkB,KAAtBA,KAAuB2kC,EAAU1zB,EAAQuzB,IAG/C,EAAC,WAUCG,EACA1zB,EACAuzB,GAEA,EAAAxkC,KAAI,SAA6B,KAAjCA,KAAkC2kC,GAClCA,EAAStkC,UAAUE,IAAI,aACvB,EAAAP,KAAI,SAAY,KAAhBA,KAAiBiR,EAAO5P,QAAQ9B,IAEH,YAAzB0R,EAAO5P,QAAQuM,OAAwB42B,GACzC,EAAAxkC,KAAI,SAAsB,KAA1BA,KAEJ,EAAC,WAO4B2kC,G,MAC3B,MAAMI,EAAgBJ,EAASzzB,QAAQ,WACjC8zB,EAAmBL,EAASzzB,QAAQ,YAIH,QADvC,EAAAyzB,EAASz9B,WACNxF,cAAc,8BAAsB,SACnCrB,UAAUC,OAAO,aAGrB,MAAM2kC,EAAe7zB,SAAS2zB,EAAc1jC,QAAQwP,OACpD,IAAK,MAAMD,KAAUo0B,EAAiB3hC,iBACpC,oBACC,CACD,MAAM6hC,EAAgBt0B,EAClBQ,SAAS8zB,EAAc7jC,QAAQwP,OAASo0B,GAC1CC,EAAch+B,WAAWxD,YAAYwhC,EAEzC,CACF,EAAC,aAOC,MAAM7zB,EAAOrR,KAAK0N,MAAM4D,YAActR,KAAK0N,MAAM6D,YAC7CF,EAAO,GACTrR,KAAK0N,MAAM8D,SAAS,CAClB7E,IAAK,EACL0E,KAAMA,EACNI,SAAU,UAGhB,EAAC,WASChB,GAEA,OAAO,IAAIzR,QAASC,IAClB,IAAKwR,EAEH,YADAxR,EAAQ,EAAAe,KAAI,OAAOuE,UAIrB,MAAM2C,EAAa,EAAAlH,KAAI,OAAOqP,KAAMiB,GAAUA,EAAMgF,KAAK/V,KAAOkR,GAChExR,GAAQiI,aAAU,EAAVA,EAAY3C,WAAY,KAEpC,EAAC,a,8CAOO,EAAAtE,aAAaklC,mBACnB,MAAMv0B,EAASjO,SAASC,cAAc,OACtCgO,EAAOvQ,UAAUE,IAAI,UACrBqQ,EAAOvP,QAAQwP,MAAQ,IACvBD,EAAOpP,UAAY,iMAMnB,EAAAxB,KAAI,OAAU6B,OAAO+O,EACvB,E,eAOE,EAAA5Q,KAAI,OAAOolC,KAAM90B,IACfA,EAAMgF,KAAKrG,SAAU,EACrBqB,EAAMgF,KAAKxD,eAAgB,GAE/B,EAAC,aAOC,IAAK,MAAMuzB,KAAa,EAAArlC,KAAI,OAAkB,CAC5C,MAAMkY,EAAO,EAAAlY,KAAI,OAAOqP,KACrBkjB,GAAMA,EAAEjd,KAAK1H,QAAUy3B,EAAUhkC,QAAe,OAE9C6W,IAELA,EAAK5C,KAAKrG,SAAU,EACpB,EAAAjP,KAAI,SAA0B,KAA9BA,KAA+BkY,GAAM,GACrC,EAAAlY,KAAI,SAAwB,KAA5BA,KAA6BkY,GAAM,GACrC,CACF,EAAC,WASCA,EACAjJ,GAEKiJ,EAAK3T,UAAqC,IAAzB2T,EAAK3T,SAAShD,QAEpC2W,EAAKotB,cAAc9/B,QAAS+/B,IAC1BA,EAAWjwB,KAAKrG,QAAUA,EAC1Bs2B,EAAWjwB,KAAKxD,eAAgB,GAEpC,EAAC,aASC0zB,EACAv2B,GAEKu2B,IAEkB,kBAAZv2B,GACTu2B,EAASlwB,KAAKrG,QAAUA,EACxBu2B,EAASlwB,KAAKxD,eAAgB,GAE9B,EAAA9R,KAAI,SAA2B,KAA/BA,KAAgCwlC,GAGlC,EAAAxlC,KAAI,SAAwB,KAA5BA,KAA6BwlC,EAASz0B,QACxC,EAAC,WAQCy0B,GAEA,IAAKA,EAASjhC,SAAU,OAExB,MAAMkhC,EAAkBD,EAASjhC,SAASwH,OACvC4F,GAAUA,EAAM2D,KAAKrG,SAElBy2B,EAAwBF,EAASjhC,SAASwH,OAC7C4F,GAAUA,EAAM2D,KAAKxD,eAGlB6zB,EAAaF,EAAgBlkC,SAAWikC,EAASjhC,SAAShD,OAC1DqkC,EAAcH,EAAgBlkC,OAAS,EACvCskC,EAAmBH,EAAsBnkC,OAAS,EAExDikC,EAASlwB,KAAKrG,QAAU02B,IAAeE,EACvCL,EAASlwB,KAAKxD,cACX8zB,IAAgBD,GAAeE,CACpC,EAAC,aAOC,EAAA7lC,KAAI,SAA2B,KAA/BA,MACA,EAAAA,KAAI,SAAkB,KAAtBA,MACA,EAAAA,KAAI,SAA6B,KAAjCA,KACF,EAAC,aAOC,EAAAA,KAAI,OAAO8lC,UAAWx1B,IACpB,MAAMxB,EAA6B,EAAA9O,KAAI,OAAU0B,cAC/C,eAAe4O,EAAMgF,KAAK/V,wBAExBuP,IACFA,EAASG,SAAWqB,EAAMgF,KAAKxD,eAAiBxB,EAAMgF,KAAKrG,QAC3DH,EAASgD,eACNxB,EAAMgF,KAAKrG,SAAWqB,EAAMgF,KAAKxD,gBAG1C,EAAC,aAOC,EAAA9R,KAAI,SAA+B,KAAnCA,MACAA,KAAKmO,mBAEL,IAAK,MAAM43B,KAAc,EAAA/lC,KAAI,OAC3BA,KAAK2N,cACHo4B,EAAWzwB,KAAK1H,MAChB,EAAA5N,KAAI,SAAkB,KAAtBA,KAAuB+lC,GAG7B,EAAC,aAOC/lC,KAAKmN,YAAYsC,OAAO,EAAAzP,KAAI,SAAqB,KAAzBA,MAC1B,EAAC,aAOC,EAAAA,KAAI,EAA2B,EAAAA,KAAI,SAAuB,KAA3BA,KAA4B,EAAAA,KAAI,QAAO,IACxE,EAAC,aASCkY,GAEA,IAAKA,EAAK3T,SACR,OAAO2T,EAAK5C,KAAKrG,QAAU,CAACiJ,GAAQ,GAOtC,OAJ2BA,EAAK3T,SAASyhC,MACtCr0B,GAAUA,EAAM2D,KAAKrG,UAGEiJ,EAAK5C,KAAK1H,MAC3B,CAACsK,GAEDA,EAAK3T,SACTgyB,QAAS5kB,GAAU,EAAA3R,KAAI,SAAuB,KAA3BA,KAA4B2R,IAC/C5F,OAAO0J,QAEd,EAAC,WAQiByC,GAChB,MAAO,IAAK+tB,GAAa/tB,EAAKguB,KAAK,EAAAlmC,KAAI,QAAQmmC,UAC/C,OAAOF,EAAUtnC,IAAKynC,GAAaA,EAAS9wB,KAAKpQ,OAAOC,KAAK,MAC/D,EAAC,aAQC,OAAOnF,KAAKoO,YAAY7M,OAAS,CACnC,E,UAtlBmB0iC,C,u7BC1BrB,mBACA,QAwDA,IAAI1kC,EAAa,EAKjB,MAAM8mC,EACO,CACTjjC,KAAM,EACNwjB,GAAI,EACJkR,OAAQ,KAJNuO,EAMG,CACLjjC,KAAM,KACNwjB,GAAI,MARFyf,EAUK,CACPjjC,KAAM,KACNwjB,GAAI,MAZFyf,EAcK,CACPjjC,KAAM,KACNwjB,GAAI,MAhBFyf,EAkBM,CACRjjC,KAAM,KACNwjB,GAAI,MAOF0f,EACO,YADPA,EAEG,QAFHA,EAGK,UAHLA,EAIK,UAJLA,EAKM,WASZ,MAAqBC,UAA2C,UAa9D,WAAAzmC,CAAYoN,EAAiBtL,GAC3BZ,MAAMkM,EAAYtL,G,YAbpB,mBACA,mBACA,mBACA,WAAgD,MAChD,WAAqC,MACrC,WAAyD,MAUvD,EAAA5B,KAAI,EAAkB4B,EAAckB,cAAa,KACjD,EAAA9C,KAAI,EAAc,CAChBmnB,UAAWznB,OAAO8Q,OAAO,CAAC,EAAG61B,GAC7B/gB,MAAO5lB,OAAO8Q,OAAO,CAAC,EAAG61B,GACzBG,QAAS9mC,OAAO8Q,OAAO,CAAC,EAAG61B,GAC3BI,QAAS/mC,OAAO8Q,OAAO,CAAC,EAAG61B,GAC3BK,SAAUhnC,OAAO8Q,OAAO,CAAC,EAAG61B,IAC7B,KACD,EAAArmC,KAAI,EACsB,aAAxBA,KAAKqN,eAAgCi5B,EAAeA,EAAc,KAEpE,EAAAtmC,KAAI,SAAqB,KAAzBA,MACA,EAAAA,KAAI,SAAqB,KAAzBA,MACA,EAAAA,KAAI,SAAqB,KAAzBA,KACF,CAgRA,eAAAgnB,CAAgBE,GACd,GAAK,EAAAlnB,KAAI,OAAT,CAEA,IAAK,MAAMgF,KAAOkiB,EACZliB,KAAO,EAAAhF,KAAI,OAAYmnB,YACxB,EAAAnnB,KAAI,OAAYmnB,UAAkBniB,GAAQkiB,EAAqBliB,IAGpE,EAAAhF,KAAI,SAAQ,KAAZA,KAPoC,CAQtC,CAKA,cAAAkP,GACE,MAAMy3B,EAAmB,EAAA3mC,KAAI,OAAY,EAAAA,KAAI,QACzC2mC,GACF,EAAA3mC,KAAI,mBAAmB2mC,GAAgB,IAE3C,CAKA,OAAAv3B,GACM,EAAApP,KAAI,QAAe,EAAAA,KAAI,OAAY,EAAAA,KAAI,UACzC,EAAAA,KAAI,OAAY,EAAAA,KAAI,QAAU,EAAAA,KAAI,OAClC,EAAAA,KAAI,SAAQ,KAAZA,MAEJ,CAKA,MAAA4I,GACE,EAAA5I,KAAI,SAAQ,KAAZA,KACF,CAMA,WAAIuP,GACF,OAAO,EAAAvP,KAAI,SAAU,KAAdA,KACT,E,+GAtTmB,IAAI6D,iBAAiB,KACpCigB,OAAO/O,sBAAsB,IAAM,EAAA/U,KAAI,SAAQ,KAAZA,SAE5BkE,QAAQlE,KAAKiO,eAAgB,CACpC9J,YAAY,EACZC,WAAW,EACXC,SAAS,GAEb,EAAC,aAMC,MAAMymB,EAAO,qCAAqCvrB,IAElDS,KAAKsN,eACH,8BACA,EAAAtN,KAAI,SAAc,KAAlBA,KAAmB8qB,IAGrB,EAAA9qB,KAAI,SAAkB,KAAtBA,KACF,EAAC,WAOa8qB,GACZ,MAA4B,aAAxB9qB,KAAKqN,eACA,EAAArN,KAAI,SAAsB,KAA1BA,KAA2B8qB,GAE7B,EAAA9qB,KAAI,SAAqB,KAAzBA,KAA0B8qB,EACnC,EAAC,WAOoBA,GAYnB,MAAO,uEAXkB,2DAC2Bwb,6DAElBxb,aAAgBwb,6IAM7B,EAAAtmC,KAAI,SAAsB,KAA1BA,KAA2B8qB,EAAMwb,EAAY,mBAO9D,EAAAtmC,KAAI,SAAyB,KAA7BA,mBAEN,EAAC,WAOqB8qB,GAmBpB,MAAO,uEAlBiB,CACtB,CAAElV,KAAM0wB,EAAcphC,MAAO,2CAC7B,CACE0Q,KAAM0wB,EACNphC,MAAO,6CAET,CACE0Q,KAAM0wB,EACNphC,MAAO,6CAKRvG,IAAKioC,GACJ,EAAA5mC,KAAI,SAAsB,KAA1BA,KAA2B8qB,EAAM8b,EAAOhxB,KAAMgxB,EAAO1hC,QAEtDC,KAAK,cAMJ,EAAAnF,KAAI,SAAyB,KAA7BA,mBAEN,EAAC,WASqB8qB,EAAclV,EAAc1Q,GAChD,MAAO,uDACyC0Q,6DAEdkV,aAAgBlV,wBACpC1Q,oOAQhB,EAAC,aAOC,MAAO,0LAOT,EAAC,aAMC,MAAMuhB,EAAc9jB,SAASC,cAC3B,gBAEF6jB,EAAYM,WAAa,WACzBN,EAAYI,WAAa,IACzBJ,EAAYK,UAAY,IACxBL,EAAY1kB,iBAAiB,gBAAkB5C,IAC7CA,EAAEgb,kBACFna,KAAKgnB,gBAAgB7nB,EAAEwG,UAGzB,MAAMjB,EAAY1E,KAAKwN,IAAI9L,cAAc,wBACrCgD,GACFA,EAAUuV,YAAYwM,GAGxB,EAAAzmB,KAAI,EAAsBymB,EAAW,IACvC,EAAC,aAMC,EAAAzmB,KAAI,SAA0B,KAA9BA,MACA,EAAAA,KAAI,SAA0B,KAA9BA,MACA,EAAAA,KAAI,SAA+B,KAAnCA,KACF,EAAC,aAMC,MAAM6mC,EAAoB7mC,KAAK0N,MAAMrK,iBACnC,uBAGF,IAAK,MAAMoB,KAAMoiC,EAAmB,CAClC,MAAMtqB,EAAQ9X,EAAG/C,cACf,0BAEF,IAAK6a,EAAO,SAEZA,EAAMxa,iBAAiB,SAAW5C,IAChC,EAAAa,KAAI,SAAkB,KAAtBA,KAAuBb,EAAG0nC,KAI5B,MAAMC,EACoB,aAAxB9mC,KAAKqN,eAAgCi5B,EAAeA,EAClD/pB,EAAM3O,QAAUk5B,GAClB/xB,sBAAsB,KACpBwH,EAAMnQ,cAAc,IAAImY,MAAM,WAC9BhI,EAAMtN,SAAU,GAGtB,CACF,EAAC,WAOiB9P,EAAU0nC,GAC1B,MAAM51B,EAAS9R,EAAE8R,OAGjB,IAAK,MAAMxM,KAAMoiC,EAAmB,CAClC,MAAME,EAAStiC,EACXsiC,EAAO1lC,QAAQuU,OAAS3E,EAAOrD,MACjCm5B,EAAO1mC,UAAUE,IAAI,YAErBwmC,EAAO1mC,UAAUC,OAAO,WAE5B,CAEA,EAAAN,KAAI,EAASiR,EAAOrD,MAAiB,KACrC,EAAA5N,KAAI,SAAQ,KAAZA,KACF,EAAC,aAM2BA,KAAK0N,MAAMrK,iBACnC,uBAIgBmC,QAASyN,IACVA,EAAQ5P,iBAAiB,2BACjCmC,QAAS+W,IACdA,EAAMxa,iBAAiB,SAAW5C,IAChC,EAAAa,KAAI,SAAwB,KAA5BA,KAA6Bb,QAIrC,EAAC,WAMuBA,GACtB,MAAM8R,EAAS9R,EAAE8R,OACXjM,EAAMiM,EAAO1D,UACbo5B,EAAmB,EAAA3mC,KAAI,OAAY,EAAAA,KAAI,QACzC2mC,IACDA,EAAyB3hC,GAAO4tB,OAAO3hB,EAAOrD,OAC/C,EAAA5N,KAAI,SAAQ,KAAZA,MAEJ,EAAC,aAMC,EAAAA,KAAI,EAAaA,KAAK0N,MAAMhM,cAC1B,sCACD,KACG,EAAA1B,KAAI,SACN,EAAAA,KAAI,OAAW+B,iBAAiB,SAAU,KACxC,EAAA/B,KAAI,SAAQ,KAAZA,QAEF,EAAAA,KAAI,OAAWoM,cAAc,IAAImY,MAAM,WAE3C,EAAC,aAwDC,EAAAvkB,KAAI,SAA4B,KAAhCA,MACAA,KAAKmN,YAAYsC,OAAO,EAAAzP,KAAI,SAAU,KAAdA,MAC1B,EAAC,aAMCA,KAAKiO,eACF5K,iBAAiB,sCACjBmC,QAASjC,IACR,MAAMyjC,EAAgB,EAAAhnC,KAAI,SAAuB,KAA3BA,KAA4BuD,GAC7CyjC,GAEL,EAAAhnC,KAAI,SAA0B,KAA9BA,KAA+BgnC,IAErC,EAAC,WAOsBzjC,GACrB,MAAM20B,EAAc30B,EAAa20B,WACjC,IAAKA,EAAY,OAAO,KAExB,MAAM8O,EAAgB9O,EAAWx2B,cAC/B,8BAEF,OAAOslC,GAAoD,mBAA5BA,EAAcC,UACzCD,EACA,IACN,EAAC,WAMyBA,G,cACxB,MAAML,EAAmB,EAAA3mC,KAAI,OAAY,EAAAA,KAAI,QACvCknC,EACJ,EAAAlnC,KAAI,SAAWsmC,EAAiB,EAAAtmC,KAAI,OAAYmnB,UAAU2Q,OAAS,GAC/DqP,EAAoC,QAAvB,EAAc,QAAd,IAAAnnC,KAAI,cAAU,eAAEiP,eAAO,SAE1C+3B,EAAcC,UACZ,EAAAjnC,KAAI,OACJ,EAAAA,KAAI,OACiB,QAArB,EAAA2mC,EAAiBvjC,YAAI,QAAI,GACN,QAAnB,EAAAujC,EAAiB/f,UAAE,QAAI,GACvBsgB,EACAC,GAGFH,EAAcpxB,KAAO,EAAA5V,KAAI,OACzBgnC,EAAc5jC,KAA4B,QAArB,EAAAujC,EAAiBvjC,YAAI,QAAI,GAC9C4jC,EAAcv3B,QAChB,EAAC,aAOC,MAAMk3B,EAAmB,EAAA3mC,KAAI,OAAY,EAAAA,KAAI,QAC7C,QAAK2mC,GAGEjnC,OAAOkP,OAAO+3B,GAAkBn3B,KAAM5B,GAAoB,OAAVA,EACzD,E,UAramB24B,C,q6BCvGrB,mBACA,QACA,OACA,gBAqBA,MAAMa,UAAoD,UAmBxD,WAAAtnC,CAAYoN,EAA6BtL,GACvCZ,MAAMkM,EAAYtL,G,YAnBpB,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBAcE,EAAA5B,KAAI,SAAyB,KAA7BA,MACA,EAAAA,KAAI,SAAc,KAAlBA,MACA,EAAAA,KAAI,SAAkB,KAAtBA,KACF,CA8CA,cAAAkP,GACElP,KAAKiO,eACF5K,iBAAiB,sCACjBmC,QAASjC,I,QACR,MAAM8jC,EAEL,QAFwB,EACR,QAAf,EAAA9jC,EAAK20B,kBAAU,eAAEx2B,cAAc,gCAChC,eAAE2lC,gBACH,GAAIA,EAAiB,CACnB,MAAM,QAAEhmC,EAAO,MAAE6D,EAAK,OAAE0J,EAAM,gBAAEwkB,EAAe,iBAAEC,GAC/CgU,EACF,EAAArnC,KAAI,EAAc,CAChBqB,UACA6D,QACA0J,SACAwkB,kBACAC,oBACD,IACH,GAEN,CAGA,OAAAjkB,GACE,MAAM,QAAE/N,EAAO,MAAE6D,EAAK,OAAE0J,EAAM,gBAAEwkB,EAAe,iBAAEC,GAC/C,EAAArzB,KAAI,OACN,EAAAA,KAAI,SAAwB,KAA5BA,KACEqB,EACA6D,EACA0J,EACAwkB,EACAC,EAEJ,CAqFA,WAAI9jB,GACF,OAAqE,IAA9D,EAAAvP,KAAI,OAAS+L,OAAQ+E,IAAU8hB,OAAOkH,MAAMhpB,IAAOvP,MAC5D,E,6HAjKE,EAAAvB,KAAI,EAAY,gBAAe,KAC/B,EAAAA,KAAI,EAAU,gBAAe,KAC7B,EAAAA,KAAI,EAAW,CAAC,EAAG,GAAE,KACrB,EAAAA,KAAI,EAAoB,CAAC,MAAO,OAAM,KACtC,EAAAA,KAAI,EAAqB,GAAE,KAC3B,EAAAA,KAAI,EAAc,CAChBqB,QAAS,EAAArB,KAAI,OACbkF,MAAO,EAAAlF,KAAI,OACX4O,OAAQ,IAAI,EAAA5O,KAAI,QAChBozB,gBAAiB,IAAI,EAAApzB,KAAI,QACzBqzB,iBAAkB,IAAI,EAAArzB,KAAI,SAC3B,IACH,EAAC,aAICA,KAAKsN,eACH,4BACA,0DAEF,EAAAtN,KAAI,EAAkBA,KAAKwN,IAAI9L,cAAc,SAAS,KACtD,EAAA1B,KAAI,SAAe,KAAnBA,KACF,EAAC,aAIC,EAAAA,KAAI,OAAgB+B,iBAClB,wBACC5C,IACC,MAAMmoC,EAAcnoC,EACpB,EAAAa,KAAI,SAAsB,KAA1BA,KAA2BsnC,EAAY3hC,UAI3C,EAAA3F,KAAI,OAAgB+B,iBAAiB,aAAe5C,IAClD,MAAMmoC,EAAcnoC,EACpB,EAAAa,KAAI,SAAW,KAAfA,KAAgBsnC,EAAY3hC,SAEhC,EAAC,WAwCUA,GACT,EAAA3F,KAAI,EAAY2F,EAAOtE,QAAO,KAC9B,EAAArB,KAAI,EAAU,EAAAkxB,YAAY,EAAAlxB,KAAI,QAAWkF,MAAK,KAC9C,EAAAlF,KAAI,SAAsB,KAA1BA,KAA2B2F,EAC7B,EAAC,aAIC,EAAA3F,KAAI,SAAwB,KAA5BA,KACE,EAAAA,KAAI,OACJ,EAAAA,KAAI,OACJ,EAAAA,KAAI,OACJ,EAAAA,KAAI,OACJ,EAAAA,KAAI,QAENA,KAAKmN,YAAYsC,OAAO,EAAAzP,KAAI,SAAU,KAAdA,MAC1B,EAAC,WAICqB,EACA6D,EACA0J,EACAwkB,EACAC,GAEA,IAAIrlB,EAAYhO,KAAKiO,eAAevM,cAClC,6BAGGsM,IACHA,EAAYrL,SAASC,cAAc,6BACnCoL,EAAUlL,cAAgB9C,KAAKqN,eAC/BrN,KAAKiO,eAAepM,OAAOmM,IAG7BA,EAAUJ,MAAQvM,EAClB2M,EAAU9I,MAAQA,EAElBlF,KAAKiO,eACF5K,iBAAiB,sCACjBmC,QAASjC,I,MACR,MAAMgkC,EAAqC,QAAf,EAAAhkC,EAAK20B,kBAAU,eAAEx2B,cAC3C,yBAEE6lC,GACFA,EAAoBN,UAClB5lC,EACAuN,EACAwkB,EACAC,IAIV,EAAC,aAIC,OAAqE,IAA9D,EAAArzB,KAAI,OAAS+L,OAAQ+E,IAAU8hB,OAAOkH,MAAMhpB,IAAOvP,MAC5D,EAAC,aAIC,MAAMimC,EAAU7kC,SAASC,cAAc,YACvC4kC,EAAQrR,SAAW,EAAAjF,YACnB,EAAAlxB,KAAI,OAAgBia,YAAYutB,EAClC,EAAC,WAGqB7hC,GACpB,EAAA3F,KAAI,EAAW,CAAC2F,EAAOiJ,OAAO,GAAIjJ,EAAOiJ,OAAO,IAAG,KACnD,EAAA5O,KAAI,EAAoB,CACtB2F,EAAOytB,gBAAgB,GACvBztB,EAAOytB,gBAAgB,IACxB,KACD,EAAApzB,KAAI,EAAqB2F,EAAO0tB,iBAAgB,KAChD,EAAArzB,KAAI,SAAQ,KAAZA,KACF,EASF,UAAeonC,C,yKCxNf,gBACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aA8MA,UAjMA,MAME,WAAAtnC,CAAY8B,GACV5B,KAAKoN,eAAiBxL,EACtB5B,KAAKynC,SAAW,GAGhB7lC,EAAckgC,cAActgC,UAAY,4MAQxCxB,KAAK0nC,UAAY9lC,EAAckgC,cAAcpgC,cAC3C,sBAEF,MAAMqgB,EAAUngB,EAAckgC,cAAcpgC,cAC1C,qBAaF,OAXA1B,KAAK2nC,UAAY5lB,EAAQrgB,cACvB,sCAIF1B,KAAK2nC,UAAU5lC,iBAAiB,QAAS/B,KAAK4nC,eAAe1nC,KAAKF,OAClE+hB,EACGrgB,cAAc,sCACdK,iBAAiB,QAAS/B,KAAK6nC,mBAAmB3nC,KAAKF,OAGlD4B,EAAckB,eACpB,KAAK,EAAAyN,eAAevM,KAClBhE,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGT,MAEF,KAAK,EAAAmD,eAAema,aAClB1qB,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGT,MAEF,KAAK,EAAAmD,eAAeX,YAClB5P,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGT,MAEF,KAAK,EAAAmD,eAAelP,QACpB,KAAK,EAAAkP,eAAe4pB,SAClBn6B,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGTpN,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGT,MAEF,KAAK,EAAAmD,eAAeV,QAClB7P,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGT,MAEF,KAAK,EAAAmD,eAAegqB,YAClBv6B,KAAKynC,SAAS/8B,KACZ,IAAI,UAAyB1K,KAAaA,KAAKoN,iBAEjD,MAEF,KAAK,EAAAmD,eAAe6pB,yBAClBp6B,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGT,MAEF,KAAK,EAAAmD,eAAeiqB,WAClBx6B,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,iBAGT,MAEF,KAAK,EAAAmD,eAAewS,SAClB/iB,KAAKynC,SAAS/8B,KACZ,IAAI,UACF1K,KACAA,KAAKoN,eACL,IAKV,CAIA,oBAAAq0B,GACE,IAAK,MAAMG,KAAU5hC,KAAKynC,SACxB7F,EAAO1yB,gBAEX,CAGA,MAAAO,CAAOF,GAEH,CAAC,EAAAgB,eAAelP,QAAS,EAAAkP,eAAe4pB,UAAU3iB,SAChDxX,KAAKoN,eAAetK,iBAGtByM,EAAUvP,KAAKynC,SAASzB,MAAOpE,GACtBA,EAAOryB,UAGdA,EACFvP,KAAK2nC,UAAUtnC,UAAUC,OAAO,aAEhCN,KAAK2nC,UAAUtnC,UAAUE,IAAI,YAEjC,CAIQ,cAAAqnC,CAAezoC,GACrBA,EAAE8C,2BACFjC,KAAKoN,eAAes0B,aACtB,CAGQ,kBAAAmG,CAAmB1oC,GAEzB,GADAA,EAAE8C,2BACEjC,KAAKoN,eAAeywB,YACtB79B,KAAKoN,eAAe9M,aACf,CACL,IAAK,MAAMshC,KAAU5hC,KAAKynC,SACxB7F,EAAOxyB,UAEJ,CAAC,UAAW,2BAA4B,KAAM,YAAYoI,SACzDxX,KAAKoN,eAAetK,iBAGtB9C,KAAKoN,eAAejM,KAAKE,QAAQo/B,SAC/BzgC,KAAKoN,eAAe20B,kBAG1B/hC,KAAKoN,eAAes0B,aACtB,CACF,CAGA,iBAAI9/B,GACF,OAAO5B,KAAKoN,cACd,CAEA,YAAIK,GACF,OAAOzN,KAAK0nC,SACd,CAEA,WAAI7F,GACF,OAAO7hC,KAAKynC,QACd,E,qIC7KF,uCACE,MAAM94B,GACJ,IAAA4X,gCAA+B,WAAW5V,MAY5C,MAAO,6BAXmBhC,EACvB5C,OAAQ1K,GAAYA,EAAQ8nB,UAC5BxqB,IACE0C,GACC,oEACgBA,EAAQ9B,8FAI3B4F,KAAK,UAGV,EAvDA,gBAIa,EAAA2iC,oBAAsB,EAMtB,EAAAC,iBAAmB,CAC9BC,WACE,2FACFC,UACE,0GACFl/B,SACE,gIACFm/B,QACE,qLACFlkC,KAAM,yDACN8+B,KAAM,qGACNlzB,YACE,oFACFu4B,sBACE,qNACFhX,cACE,uFACFG,KAAM,8EACNG,SACE,kF,iHC7BJ,gBAWA,UAQA,2BAQE,sBAAO2W,CACLn1B,EACArF,EACA2f,GAEKta,GAAYrF,GAQjBqF,EAAQgN,KAAOsN,EACfta,EAAQsS,YAAc3X,GARhBqF,IACFA,EAAQgN,KAAO,GACfhN,EAAQsS,YAAc,GAO5B,CASA,mBAAO8iB,CACLC,EACAC,EACA35B,GAEA,GAAK05B,GAASC,EAAd,CAEA,IAAK35B,GAA4B,IAAlBA,EAAOrN,OAIpB,OAHA+mC,EAAKjnC,QAAQmnC,QAAU,IACvBD,EAAWtoB,KAAO,QAClBsoB,EAAWhjB,YAAc,IAI3B+iB,EAAKjnC,QAAQmnC,SAAW55B,EAAOrN,OAAS,GAAGkjC,WAC3C8D,EAAWtoB,KAAO,gCAAgCrR,EAAO,KACzD25B,EAAWhjB,YAAc3W,EAAO,EAXA,CAYlC,CAUA,qBAAO65B,CACLC,EACAC,EACAvmB,EACArZ,GAEI2/B,IACFA,EAAqBnjB,YAAcnD,GAEjCumB,IACFA,EAAqBpjB,YAAcxc,EAAS07B,WAEhD,CAUA,mBAAOmE,CACLC,EACAC,EACAlsB,EACAmsB,GAEA,MAAMC,EAAUhpC,KAAKipC,iBAAiBrsB,GAAa,IAC7CssB,EAAUlpC,KAAKipC,iBAAiBF,GAAa,IAE/CF,IACFA,EAAYtjB,YAAcyjB,EAAQnhB,QAClCghB,EAAYxnC,QAAQ8nC,IAAMH,EAAQznC,OAAOkjC,YAGvCqE,IACFA,EAAYvjB,YAAc2jB,EAAQrhB,QAClCihB,EAAYznC,QAAQ8nC,IAAMD,EAAQ3nC,OAAOkjC,WAE7C,CAQA,uBAAOwE,CAAiBG,GACtB,MAAO,CACLvhB,QAAS7nB,KAAKqpC,aAAaD,GAC3B7nC,OAAQ6nC,EAAS7nC,OAErB,CASA,mBAAO8nC,CAAaD,GAClB,OACEA,EAASzO,UAAU,EAAG,EAAAmN,sBACrBsB,EAAS7nC,OAAS,EAAAumC,oBAAsB,MAAQ,GAErD,CAQA,wBAAOwB,CAAkBr2B,EAAgCrF,G,MACvD,IAAKqF,EAAS,OAEd,MAAMtE,GACJ,IAAA4X,gCAA+B,QAAQ5V,MACzCsC,EAAQsS,aAAsD,QAAxC,EAAA5W,EAAOU,KAAMyB,GAASA,EAAKvR,KAAOqO,UAAM,eAAE1I,QAAS,EAC3E,CASA,iBAAOqkC,CACLC,EACAC,EACAhc,GAEA,GAAK+b,GAAWC,EAAhB,CAEA,IAAKhc,GAA8B,IAAnBA,EAAQlsB,OAItB,OAHAioC,EAAOnoC,QAAQmnC,QAAU,IACzBiB,EAAaxpB,KAAO,QACpBwpB,EAAalkB,YAAc,IAI7BikB,EAAOnoC,QAAQmnC,SAAW/a,EAAQlsB,OAAS,GAAGkjC,WAC9CgF,EAAaxpB,KAAO,SAASwN,EAAQ,GAAGluB,KACxCkqC,EAAalkB,YAAckI,EAAQ,GAAG3C,IAXF,CAYtC,CAQA,yBAAO4e,CACLC,EACAhgB,IAGE,IAAApD,gCAA+B,WAAW5V,MAGzC5E,OAAQ1K,GAAYA,EAAQ8nB,UAC5B3jB,QAASnE,IACR,MAAM8lB,EAAYwC,aAAW,EAAXA,EAAata,KAC5Bu6B,GAASA,EAAKhgB,SAAWvoB,EAAQ9B,IAE9B0T,EAAU02B,EAActoC,EAAQ9B,IAClC0T,IACFA,EAAQkU,UAAYA,IAG5B,CAUA,wBAAO0iB,CACLC,EACAC,EACAC,EACA7d,G,MAEA,IAAK2d,IAAkBC,EAAmB,OAE1C,IAAKC,EAGH,OAFAF,EAAczoC,QAAQmnC,QAAU,SAChCuB,EAAkBxkB,YAAc,IAIlC,MAAM5W,GACJ,IAAA4X,gCAA+B,eAAe5V,MAC1Cs5B,EAAqB9mC,MAAMC,KAC/B,IAAI+nB,IAAIgB,EAAYoK,QAASlK,GAAeA,EAAWzc,eAGzDk6B,EAAczoC,QAAQmnC,SAAWyB,EAAmB1oC,OAAS,GAAGkjC,WAChEsF,EAAkBxkB,aACgD,QAAhE,EAAA5W,EAAOU,KAAMO,GAAgBA,EAAYrQ,KAAOyqC,UAAgB,eAAE9kC,QAClE,EACJ,CAUA,iCAAOglC,CACLC,EACAC,EACAC,EACAC,G,MAEA,IAAKH,IAAmBC,IAAqBC,EAAgB,OAE7D,IAAKC,GAA0C,IAAzBA,EAAc/oC,OAMlC,YALAvB,KAAKuqC,0BACHJ,EACAC,EACAC,GAKJ,MAAMG,EAAoBF,EAAc,GAClCG,EAA6C,QAA5B,EAAAD,EAAkB5nB,kBAAU,eAAG,GAGtDunB,EAAe9oC,QAAQuM,MAAQ48B,EAAkBvf,gBAAgB,GAEjEjrB,KAAK0qC,wBACHP,EACAC,EACAK,GAEFzqC,KAAK2qC,uBAAuBN,EAAgBC,EAC9C,CASA,gCAAOC,CACLJ,EACAC,EACAC,GAEAF,EAAe9oC,QAAQuM,MAAQ,GAC/Bw8B,EAAiB7kB,YAAc,GAC/B6kB,EAAiB3vB,aAAa,OAAQ,IACtC4vB,EAAehpC,QAAQmnC,QAAU,IACjC6B,EAAehpC,QAAQ8rB,MAAQ,OACjC,CASA,8BAAOud,CACLP,EACAC,EACAK,GAEIA,GACFN,EAAe5kB,YAAc,GAC7B6kB,EAAiB7kB,YAAcklB,EAAe3f,MAAQ,GAElD2f,EAAe1f,OACjBqf,EAAiB3vB,aACf,OACA,YAAYgwB,EAAe1f,WAI7Bof,EAAe5kB,YAAcklB,EAAe3f,KAC5Csf,EAAiB7kB,YAAc,GAC/B6kB,EAAiB78B,UAAY,MAI/B48B,EAAe5kB,YAAc,SAC7B6kB,EAAiB7kB,YAAc,GAEnC,CAQA,6BAAOolB,CACLN,EACAC,GAGAD,EAAehpC,QAAQmnC,SAAW8B,EAAc/oC,OAAS,GAAGkjC,WAG5D,MAAMmG,EAAYN,EAAc96B,KAC7Bkb,GAAyC,UAAxBA,EAAad,QAEjCygB,EAAehpC,QAAQ8rB,MAAQyd,EAAUnG,UAC3C,CASA,+BAAOoG,CACL53B,EACArF,EACAk9B,GAEA,GAAK73B,EAAL,CAEA,GAAc,OAAVrF,EAGF,OAFAqF,EAAQsS,YAAc,QACtBtS,EAAQ5R,QAAQ0pC,SAAW,IAI7B93B,EAAQsS,YAAc3X,EAAM62B,WAC5BxxB,EAAQ5R,QAAQ0pC,SAAWD,EAAiBl9B,EATxB,CAUtB,CAQA,0BAAOo9B,CAAoB/3B,EAAgCrF,GACzD5N,KAAK6qC,yBAAyB53B,EAASrF,EAAQq9B,GACzCA,EAAM,IAAa,KACnBA,EAAM,KAAc,KACjB,IAEX,CAQA,iBAAOC,CAAWj4B,EAAgCrF,GAChD5N,KAAK6qC,yBAAyB53B,EAASrF,EAAQq9B,GAC7CA,GAAO,IAAO,IAAM,IAExB,CAQA,qBAAOE,CAAel4B,EAAgCrF,GACpD5N,KAAK6qC,yBAAyB53B,EAASrF,EAAQq9B,GACzCA,EAAM,KAAc,QACpBA,EAAM,KAAc,QACpBA,GAAO,EAAU,IACd,IAEX,E,6GCtaF,gBACA,UACA,QAOA,gBAIA,UAQA,uBA8CE,WAAAnrC,CAAYmF,GACVjF,KAAKiF,MAAQA,EACbjF,KAAK+gB,UAAW,EAChB/gB,KAAK2nB,GAAK3nB,KAAKorC,kBAGf,EAAAnrC,aAAaorC,UAAU,cAAerrC,KAAKupB,YAAYrpB,KAAKF,OAE5D,EAAAC,aAAaorC,UAAU,SAAUrrC,KAAKsrC,eAAeprC,KAAKF,MAC5D,CAWA,KAAAkgB,GACE,EAAAjgB,aAAage,QAAQ,cAAeje,KAAK+gB,cAAWzR,EAAYtP,KAAKiF,OAGrE,MAAMsmC,EAAoB,IAAIl/B,YAAY,eAAgB,CACxD0L,SAAS,EACTpS,OAAQ,CAAE6lC,SAAUxrC,KAAKiF,SAE3BjF,KAAK2nB,GAAGvb,cAAcm/B,EACxB,CAOA,WAAAhiB,CAAYtkB,GACVjF,KAAK+gB,SAAW9b,IAAUjF,KAAKiF,MAC/BjF,KAAK2nB,GAAGtnB,UAAUqkB,OAAO,YAAa1kB,KAAK+gB,SAC7C,CAQA,cAAAuqB,GACE,GACE,EAAArrC,aAAagM,QAAQ,eACrB,EAAAhM,aAAagM,QAAQ,mBAErB,OAAOjM,KAAKyrC,mBAKd,GADiB,EAAAxrC,aAAagM,QAAQ,aACtBjM,KAAKiF,MACnB,OAAOjF,KAAK0rC,sBAGd,MAAM7oB,EAAS,EAAA5iB,aAAa0rC,iBAAiB3rC,KAAKiF,OAClD,IAAK4d,GAAqB,YAAXA,GAAmC,iBAAXA,EACrC,OAAO7iB,KAAKyrC,mBAGdzrC,KAAK4rC,oBAGL,EAAAxtB,QAAQ5Y,QAASoL,GAAW5Q,KAAK6rC,qBAAqBj7B,EAAQiS,IAE9D7iB,KAAK2nB,GAAGtnB,UAAUC,OAAO,WAAY,gBACvC,CAUQ,eAAA8qC,GACN,MAAMzjB,EAAKhlB,SAASC,cAAc,MAIlC,OAHA+kB,EAAGtnB,UAAUE,IAAI,YACjBonB,EAAGnmB,UAAY,gBAAgB,EAAA4c,QAAQ7c,gBACvComB,EAAG5lB,iBAAiB,QAAS/B,KAAKkgB,MAAMhgB,KAAKF,OACtC2nB,CACT,CAKQ,gBAAA8jB,GACNzrC,KAAK2nB,GAAGtnB,UAAUE,IAAI,YACtBP,KAAK2nB,GAAGnmB,UAAY,gBAAgB,EAAA4c,QAAQ7c,eAC9C,CAKQ,mBAAAmqC,GACN1rC,KAAK2nB,GAAGtnB,UAAUE,IAAI,iBACtBP,KAAK2nB,GAAGnmB,UAAY,gBAAgB,EAAA4c,QAAQ7c,eAC9C,CAOQ,iBAAAqqC,GACN5rC,KAAK2nB,GAAGnmB,UAAYxB,KAAK8rC,uBACzB9rC,KAAK+rC,kBACP,CAOQ,oBAAAD,GACN,OAAO,EAAA1tB,QAAQzf,IAAKiS,GACA,kBAAdA,EAAOrR,IACF,IAAAysC,6BAEF,EAAAjE,iBAAiBn3B,EAAOrR,KAAO,IACrC4F,KAAK,GACV,CAOQ,gBAAA4mC,GACN/rC,KAAKisC,sBACLjsC,KAAKksC,0BACLlsC,KAAKmsC,wBACP,CAKQ,mBAAAF,G,UAENjsC,KAAKosC,YAAcpsC,KAAK2nB,GAAGjmB,cAAc,qBAGzC1B,KAAKsoC,KAAOtoC,KAAK2nB,GAAGjmB,cAAc,gBAClC1B,KAAKuoC,YAAsB,QAAT,EAAAvoC,KAAKsoC,YAAI,eAAE5mC,cAAc,OAAQ,KAGnD,MAAM2qC,EAAarsC,KAAK2nB,GAAGjmB,cACzB,sCAEF1B,KAAK0oC,sBACH2D,aAAU,EAAVA,EAAY3qC,cAAc,iBAAkB,KAC9C1B,KAAK2oC,sBACH0D,aAAU,EAAVA,EAAY3qC,cAAc,iBAAkB,KAG9C,MAAM4qC,EAAWtsC,KAAK2nB,GAAGjmB,cAAc,yBACvC1B,KAAK6oC,aAAcyD,aAAQ,EAARA,EAAU5qC,cAAc,cAAe,KAC1D1B,KAAK8oC,aAAcwD,aAAQ,EAARA,EAAU5qC,cAAc,cAAe,KAG1D1B,KAAKusC,OAASvsC,KAAK2nB,GAAGjmB,cAAc,2BAGpC1B,KAAKwpC,OAASxpC,KAAK2nB,GAAGjmB,cAAc,WACpC1B,KAAKypC,cAA0B,QAAX,EAAAzpC,KAAKwpC,cAAM,eAAE9nC,cAAc,OAAQ,KAGvD1B,KAAK8pC,cAAgB9pC,KAAK2nB,GAAGjmB,cAAc,kBAC3C1B,KAAK+pC,mBACe,QAAlB,EAAA/pC,KAAK8pC,qBAAa,eAAEpoC,cAAc,uBAAwB,KAG5D,MAAM8qC,EAAaxsC,KAAK2nB,GAAGjmB,cAAc,4BACzC1B,KAAKmqC,gBACHqC,aAAU,EAAVA,EAAY9qC,cAAc,4BAA6B,KACzD1B,KAAKoqC,kBAAmBoC,aAAU,EAAVA,EAAY9qC,cAAc,OAAQ,KAC1D1B,KAAKqqC,gBAAiBmC,aAAU,EAAVA,EAAY9qC,cAAc,eAAgB,IAClE,CAKQ,uBAAAwqC,GACNlsC,KAAK2pC,cAAgB,CAAC,EACtB3pC,KAAK2nB,GACFtkB,iBACC,+DAEDmC,QAASzF,IACR,MAAMkT,EAAUlT,EACV0sC,EAAYx5B,EAAQ5R,QAAQA,QAC9BorC,IACFzsC,KAAK2pC,cAAc8C,GAAax5B,IAGxC,CAKQ,sBAAAk5B,GAEN,MAAMO,EAAkB1sC,KAAK2nB,GAAGjmB,cAAc,oBAC9C1B,KAAK2sC,yBACHD,aAAe,EAAfA,EAAiBhrC,cAAc,uBAAwB,KAGzD,MAAMkrC,EAAS5sC,KAAK2nB,GAAGjmB,cAAc,WACrC1B,KAAK6sC,gBAAiBD,aAAM,EAANA,EAAQlrC,cAAc,uBAAwB,KAGpE,MAAMorC,EAAa9sC,KAAK2nB,GAAGjmB,cAAc,eACzC1B,KAAK+sC,oBACHD,aAAU,EAAVA,EAAYprC,cAAc,uBAAwB,IACtD,CAQQ,oBAAAmqC,CAAqBj7B,EAAgBiS,G,MAC3C,MAAMmqB,EAAiB,CACrBhF,WAAY,IACV,EAAAiF,mBAAmB7E,gBACjBpoC,KAAKosC,YACLvpB,EAAOtjB,GACP,YAAYsjB,EAAOtjB,MAEvB0oC,UAAW,IACT,EAAAgF,mBAAmB5E,aACjBroC,KAAKsoC,KACLtoC,KAAKuoC,WACL1lB,EAAOqqB,qBAEXnkC,SAAU,IACR,EAAAkkC,mBAAmBxE,eACjBzoC,KAAK0oC,qBACL1oC,KAAK2oC,qBACL9lB,EAAOT,WACPS,EAAO9Z,UAEXm/B,QAAS,IACP,EAAA+E,mBAAmBrE,aACjB5oC,KAAK6oC,YACL7oC,KAAK8oC,YACLjmB,EAAOjG,UACPiG,EAAOkmB,WAEX/kC,KAAM,IACJ,EAAAipC,mBAAmB3D,kBAAkBtpC,KAAKusC,OAAQ1pB,EAAO7e,MAC3D8+B,KAAM,IACJ,EAAAmK,mBAAmB1D,WACjBvpC,KAAKwpC,OACLxpC,KAAKypC,aACL5mB,EAAO4K,SAEX0f,cAAe,IACb,EAAAF,mBAAmBvD,mBACjB1pC,KAAK2pC,cACL9mB,EAAO8G,aAEX/Z,YAAa,IACX,EAAAq9B,mBAAmBpD,kBACjB7pC,KAAK8pC,cACL9pC,KAAK+pC,kBACLlnB,EAAOuqB,wBACPvqB,EAAOsJ,aAEXgc,sBAAuB,IACrB,EAAA8E,mBAAmB/C,2BACjBlqC,KAAKmqC,eACLnqC,KAAKoqC,iBACLpqC,KAAKqqC,eACLxnB,EAAO6H,cAEXyG,cAAe,IACb,EAAA8b,mBAAmBjC,oBACjBhrC,KAAK2sC,wBACL9pB,EAAOsO,eAEXG,KAAM,IACJ,EAAA2b,mBAAmB/B,WAAWlrC,KAAK6sC,eAAgBhqB,EAAOyO,MAC5DG,SAAU,IACR,EAAAwb,mBAAmB9B,eACjBnrC,KAAK+sC,mBACLlqB,EAAO4O,WAGY,QAAzB,EAAAub,EAAep8B,EAAOrR,WAAG,gBAC3B,E,qFC7WF,gBACA,UAuEA,gBAmCE,WAAAO,CAAYutC,GAhBJ,KAAAC,iBAA2B,EAE3B,KAAAC,YAAsB,EAEtB,KAAAC,cAAwB,EAExB,KAAAC,mBAA6B,EAWnCztC,KAAK0E,UAAY2oC,EAEjBrtC,KAAK0tC,uBAEL,MAAMnK,EAAWvjC,KAAK2tC,uBACtB3tC,KAAK4tC,iBAAmBrK,EAASsK,UACjC7tC,KAAK8tC,gBAAkBvK,EAASx6B,SAChC/I,KAAK+tC,aAAexK,EAASja,MAE7BtpB,KAAKguC,mBACLhuC,KAAKiuC,8BACP,CAKQ,oBAAAP,GACN1tC,KAAK0E,UAAUyhB,mBACb,YACA,qLASJ,CAKQ,oBAAAwnB,GACN,MAAME,EAAY7tC,KAAK0E,UAAUhD,cAAc,QAC/C,IAAKmsC,EACH,MAAM,IAAIzuC,MAAM,sCAGlB,MAAM2J,EAAW8kC,EAAUnsC,cAAc,aACnC4nB,EAAQukB,EAAUnsC,cAAc,UACtC,IAAKqH,IAAaugB,EAChB,MAAM,IAAIlqB,MACR,6DAIJ,MAAO,CAAEyuC,YAAW9kC,WAAUugB,QAChC,CAKQ,gBAAA0kB,GACN,EAAA/tC,aAAaC,KAAK,SAAUF,MAC5B,EAAAC,aAAaC,KAAK,kBAAmBF,MACrC,EAAAC,aAAaC,KAAK,WAAYF,KAChC,CAKQ,4BAAAiuC,GACFnqB,OAAOoqB,WAAW,sCAAsCC,SAC1DnuC,KAAKouC,uBAEPpuC,KAAKquC,sBACP,CAWA,MAAAC,CAAOnvC,EAAiBovC,GACtB,MAAMC,EAAW,EAAAvuC,aAAagM,QAAQ,YAChCwiC,EAAkB,EAAAxuC,aAAagM,QAAQ,mBACvCyiC,EACJF,EAAW,EAAAG,UAAiD,EAArC3uC,KAAK4tC,iBAAiB5iC,aACzC4jC,EAAaL,EAAGxlC,SAAS4D,IAAM+hC,EAErC,IAAIllB,EAAS9f,KAAK8B,KAAKojC,EAAaH,GACpCjlB,EAASA,EAAS,EAAI,EAAIA,EAC1BA,EACEA,EAASglB,EAAWC,EAAkBA,EAAkBD,EAAWhlB,EAErE,EAAAvpB,aAAage,QAAQ,SAAUuL,GAC/BxpB,KAAK6uC,6BACP,CAMA,MAAArlB,CAAOA,GACLxpB,KAAK8tC,gBAAgBvoB,aAAeiE,EAAS,GAAGib,WAChDzkC,KAAK8uC,8BAIHhrB,OAAOoqB,WAAW,uCAAuCC,SACzDnuC,KAAK0E,UAAUrE,UAAUmc,SAAS,UAItC,CAMA,eAAAiyB,CAAgBA,GACdzuC,KAAK+tC,aAAaxoB,YAAckpB,EAAgBjpB,iBAChDxlB,KAAK8uC,4BACP,CAKA,QAAAN,GACExuC,KAAK8uC,4BACP,CASA,UAAAC,GACE/uC,KAAK0E,UAAUrE,UAAUC,OAAO,UAClC,CAKA,kBAAA0uC,GACEhvC,KAAK0E,UAAUrE,UAAUE,IAAI,UAC/B,CAOA,wBAAA0uC,CAAyB36B,EAAgB46B,GACvC,MAAMC,EAAYnvC,KAAKovC,4BACrB96B,EACA46B,GAEIG,EAAgBrvC,KAAKsvC,yBAAyBH,GAEpDnvC,KAAKytC,mBAAqB4B,EAAgB,EAAAV,UAC1C,EAAA1uC,aAAage,QAAQ,SAAUoxB,GAC/BrvC,KAAKuvC,eAAeF,EACtB,CAMA,YAAAG,CAAal7B,GACX,MAAMm7B,EAAczvC,KAAK0vC,yBAAyBp7B,GAElD,GAAIm7B,EAAYE,oBAAsB3vC,KAAKytC,mBACzC,OAGFztC,KAAKytC,mBAAqBgC,EAAYE,kBACtC,MAAMnmB,EAASxpB,KAAK4vC,2BAA2B5vC,KAAKytC,oBACpD,EAAAxtC,aAAage,QAAQ,SAAUuL,EACjC,CAMA,cAAA+lB,CAAe/lB,GACb,MAAMimB,EAAczvC,KAAK6vC,4BAA4BrmB,GACrDxpB,KAAK8vC,sBAAsB9vC,KAAK4tC,iBAAkB6B,EAAajmB,EACjE,CASQ,0BAAAslB,GACN,MAAMtlB,EAAS,EAAAvpB,aAAagM,QAAQ,UAC9BuiC,EAAW,EAAAvuC,aAAagM,QAAQ,YAChCwiC,EAAkB,EAAAxuC,aAAagM,QAAQ,mBAEvC8jC,EAActB,EAAkB,EAAAE,UAChC3jC,EAAewe,EAAS,EAAAmlB,UACxBqB,EAAgBxB,EAAW,EAAAG,UAC3BsB,EAAcD,EAAgBD,EAEpC,IAAIG,EAAYxmC,KAAK8B,KAAKwkC,EAAgBC,GAC1CC,EACEA,EAlTuB,MAkTmCA,EAE5D,MACMC,GADkBH,EAA4B,EAAZE,GACAH,EAClCK,EAAS1mC,KAAK8B,KAAKR,EAAemlC,GAExCnwC,KAAK4tC,iBAAiBziC,MAAMC,OAAS,GAAG8kC,MACxClwC,KAAK4tC,iBAAiBziC,MAAMwB,IAAM,GAAGyjC,MACrCpwC,KAAK6uC,8BAEY,IAAbL,GAAkBC,IAAoBD,EACxCxuC,KAAK4tC,iBAAiBvtC,UAAUE,IAAI,aAEpCP,KAAK4tC,iBAAiBvtC,UAAUC,OAAO,YAE3C,CAKQ,2BAAAuuC,QACwBv/B,IAA1BtP,KAAKqwC,kBACPvsB,OAAOkZ,aAAah9B,KAAKqwC,kBAE3BrwC,KAAKqwC,iBAAmBvsB,OAAOzJ,WAC7Bra,KAAKswC,oBAAoBpwC,KAAKF,MA5UX,KA+UrBA,KAAK0E,UAAUrE,UAAUE,IAAI,YAC/B,CAKQ,mBAAA+vC,GACNtwC,KAAK0E,UAAUrE,UAAUC,OAAO,YAClC,CASQ,wBAAAovC,CAAyBp7B,GAC/B,MAAMm6B,EAAkB,EAAAxuC,aAAagM,QAAQ,mBACvCuiC,EAAW,EAAAvuC,aAAagM,QAAQ,YAEhC8jC,EAActB,EAAkB,EAAAE,UACtC,IAAI4B,EAAmBR,EAAcvB,EAAW,EAAAG,UAChD4B,EAAmB7mC,KAAKqT,IAAI,EAAGwzB,GAO/B,MAAO,CACLR,cACAQ,mBACAZ,kBARwB3vC,KAAKwwC,qBAC7BxwC,KAAKytC,mBAAqBn5B,EAC1B,CAAEwc,IAAK,EAAG/T,IAAKwzB,IAQnB,CAKQ,oBAAAC,CAAqB5iC,EAAe6iC,GAC1C,OAAO/mC,KAAKqT,IAAI0zB,EAAO3f,IAAKpnB,KAAKonB,IAAIljB,EAAO6iC,EAAO1zB,KACrD,CAKQ,0BAAA6yB,CAA2Bc,GACjC,OAAOhnC,KAAK8B,KAAKklC,EAAiB,EAAA/B,UACpC,CAKQ,2BAAAS,CACN96B,EACA46B,GAEA,MAAMV,EAAW,EAAAvuC,aAAagM,QAAQ,YAChCwiC,EAAkB,EAAAxuC,aAAagM,QAAQ,mBAGvC2iC,EAAat6B,GADKk6B,EAAW,EAAAG,WAGnC,OAAOjlC,KAAK8B,KAAKojC,EAAaH,GAAmBS,CACnD,CAKQ,wBAAAI,CAAyB9lB,GAC/B,MAAMglB,EAAW,EAAAvuC,aAAagM,QAAQ,YAChCwiC,EAAkB,EAAAxuC,aAAagM,QAAQ,mBAGvC0kC,EAAYjnC,KAAKqT,IAAI,EAAG0xB,EAAkBD,GAEhD,OAAO9kC,KAAKqT,IAHM,EAGSrT,KAAKonB,IAAItH,EAAQmnB,GAC9C,CAKQ,2BAAAd,CAA4BrmB,GAClC,MAAMglB,EAAW,EAAAvuC,aAAagM,QAAQ,YAGhC8jC,EAFkB,EAAA9vC,aAAagM,QAAQ,mBAEP,EAAA0iC,UAChCqB,EAAgBxB,EAAW,EAAAG,UAC3BsB,EAAcD,EAAgBD,EAEpC,IAAIG,EAAYxmC,KAAK8B,KAAKwkC,EAAgBC,GAC1CC,EAAYxmC,KAAKqT,IAAImzB,EA1aI,IA4azB,MACMC,GADkBH,EAAgBE,GACAH,EAGxC,MAAO,CACLG,YACAE,OAJa1mC,KAAK8B,KAAKge,EAAS,EAAAmlB,UAAYwB,GAK5CF,cAEJ,CAKQ,qBAAAH,CACNjC,EACA4B,EACAjmB,GAGAqkB,EAAU1iC,MAAMC,OAAS,GAAGqkC,EAAYS,cACxCrC,EAAU1iC,MAAMwB,IAAM,GAAG8iC,EAAYW,WAGrCpwC,KAAK4wC,uBAAuB/C,EAAWrkB,GAGvCxpB,KAAK0E,UAAUrE,UAAUE,IAAI,UAC/B,CAKQ,sBAAAqwC,CAAuBC,EAAkBrnB,GAC/C,MAAMzgB,EAAW8nC,EAAInvC,cAAc,aAC/BqH,IACFA,EAASwc,YAAcjgB,OAAOkkB,EAAS,GAE3C,CASQ,oBAAA4kB,GACNpuC,KAAK8wC,eAAiB,CACpBC,YAAY,EACZC,OAAQ,EACRC,SAAU,GAGZjxC,KAAKkxC,yBACLlxC,KAAKmxC,4BACP,CAKQ,sBAAAD,GACNlxC,KAAK4tC,iBAAiBziC,MAAMimC,OAAS,MACvC,CAKQ,0BAAAD,GACNnxC,KAAK4tC,iBAAiB7rC,iBACpB,YACA/B,KAAKqxC,aAAanxC,KAAKF,OAEzB2C,SAASZ,iBAAiB,YAAa/B,KAAKsxC,aAAapxC,KAAKF,OAC9D2C,SAASZ,iBAAiB,UAAW/B,KAAKuxC,WAAWrxC,KAAKF,MAC5D,CAKQ,YAAAqxC,CAAalyC,GACda,KAAK8wC,iBAEV3xC,EAAEs2B,iBACFz1B,KAAK8wC,eAAeC,YAAa,EACjC/wC,KAAK8wC,eAAeE,OAAS7xC,EAAEqyC,QAC/BxxC,KAAK8wC,eAAeG,SAClB7/B,SAASpR,KAAK4tC,iBAAiBziC,MAAMwB,MAAQ,EAE/C3M,KAAKyxC,yBAAwB,GAC/B,CAKQ,YAAAH,CAAanyC,G,MACnB,KAAwB,QAAnB,EAAAa,KAAK8wC,sBAAc,eAAEC,YAAY,OAEtC5xC,EAAEs2B,iBAEF,MAAMnhB,EAASnV,EAAEqyC,QAAUxxC,KAAK8wC,eAAeE,OACzCU,EAAS1xC,KAAK8wC,eAAeG,SAAW38B,EACxCq9B,EAAiB3xC,KAAK4xC,+BAA+BF,GAE3D1xC,KAAK6xC,sBAAsBF,GAC3B3xC,KAAK8xC,kBAAkBH,EACzB,CAKQ,UAAAJ,G,OACkB,QAAnB,EAAAvxC,KAAK8wC,sBAAc,eAAEC,cAE1B/wC,KAAK8wC,eAAeC,YAAa,EACjC/wC,KAAKyxC,yBAAwB,GAC7BzxC,KAAK6uC,8BACP,CASQ,oBAAAR,GACNruC,KAAK4tC,iBAAiB7rC,iBACpB,aACA/B,KAAK+xC,cAAc7xC,KAAKF,MACxB,CACEgyC,SAAS,IAGbhyC,KAAK4tC,iBAAiB7rC,iBACpB,YACA/B,KAAKiyC,aAAa/xC,KAAKF,MACvB,CACEgyC,SAAS,IAGbhyC,KAAK4tC,iBAAiB7rC,iBACpB,WACA/B,KAAKkyC,YAAYhyC,KAAKF,MACtB,CACEgyC,SAAS,GAGf,CAKQ,aAAAD,CAAc5yC,GACpBA,EAAEs2B,iBACFz1B,KAAKstC,iBAAkB,EACvBttC,KAAKutC,YAAcpuC,EAAEgzC,QAAQ,GAAGX,QAChCxxC,KAAKwtC,cAAgBp8B,SAASpR,KAAK4tC,iBAAiBziC,MAAMwB,MAAQ,EAClE3M,KAAK0E,UAAUrE,UAAUE,IAAI,aAC7BP,KAAK0E,UAAUrE,UAAUE,IAAI,UAC/B,CAKQ,YAAA0xC,CAAa9yC,GACnB,IAAKa,KAAKstC,gBAAiB,OAC3BnuC,EAAEs2B,iBAEF,MACMnhB,EADWnV,EAAEgzC,QAAQ,GAAGX,QACJxxC,KAAKutC,YACzBmE,EAAS1xC,KAAKwtC,cAAgBl5B,EAEpCtU,KAAK8xC,kBAAkBJ,EACzB,CAKQ,WAAAQ,CAAY/yC,GACba,KAAKstC,kBACVnuC,EAAEs2B,iBACFz1B,KAAKstC,iBAAkB,EACvBttC,KAAK6uC,8BACL7uC,KAAK0E,UAAUrE,UAAUC,OAAO,WAClC,CASQ,8BAAAsxC,CAA+BF,GACrC,MAAMU,EACJpyC,KAAK0E,UAAUsG,aAAehL,KAAK4tC,iBAAiB5iC,aACtD,OAAOtB,KAAKqT,IAAI,EAAGrT,KAAKonB,IAAI4gB,EAAQU,GACtC,CAKQ,qBAAAP,CAAsBllC,GAC5B3M,KAAK4tC,iBAAiBziC,MAAMwB,IAAM,GAAGA,KACvC,CAKQ,iBAAAmlC,CAAkBnlC,GACxB,MAAM0lC,EAAyB,CAAEtpC,SAAU,CAAE4D,QAC7C3M,KAAKsuC,OAAO,KAAM+D,EACpB,CAKQ,uBAAAZ,CAAwBV,GAC9B/wC,KAAK4tC,iBAAiBziC,MAAMimC,OAASL,EAAa,WAAa,OAE3DA,GACF/wC,KAAK0E,UAAUrE,UAAUE,IAAI,YAEjC,E,8LCppBF,gBACA,aACA,UACA,UACA,UACA,UAyBA,MAAau7B,EAsCX,WAAAh8B,CAAYC,GACVC,KAAKD,IAAMA,EAGX,MAAM,OAAEK,EAAM,SAAEkyC,EAAQ,MAAEC,EAAK,MAAEtpB,EAAK,eAAEupB,GACtCxyC,KAAKyyC,kBACPzyC,KAAKipB,MAAQA,EACbjpB,KAAKwyC,eAAiBA,EAGtBxyC,KAAK0yC,yBAGL1yC,KAAK2yC,sBACL3yC,KAAK4yC,uBAAuBL,GAC5B,MAAMM,EAAa7yC,KAAK8yC,oBAGxB9yC,KAAK+yC,6BAA6B3yC,EAAQkyC,EAAUO,GAGpD7yC,KAAKgzC,wBACP,CAUA,MAAAxpB,CAAOA,GACLxpB,KAAKizC,YAAYC,mBAAmB1pB,EACtC,CAMA,cAAA2pB,CAAeb,GACbtyC,KAAKizC,YAAYG,qBAAqBd,EACxC,CAMA,YAAAe,CAAajzC,GACXJ,KAAKizC,YAAYK,mBAAmBlzC,EACtC,CAMA,aAAAmzC,CAAcC,GACZxzC,KAAKizC,YAAYQ,oBACfD,EACAxzC,KAAK0zC,aAAaC,eAClB3zC,KAAK0zC,aAAaE,8BAA8B1zC,KAAKF,KAAK0zC,cAE9D,CAMA,OAAA50B,CAAQA,GACN9e,KAAKizC,YAAYY,oBAAoB/0B,EACvC,CAKA,iBAAA6R,GACE3wB,KAAKizC,YAAYtiB,kBACf3wB,KAAK0zC,aAAaC,eAClB3zC,KAAK0zC,aAAaE,8BAA8B1zC,KAAKF,KAAK0zC,cAE9D,CAMA,SAAAnyB,CAAU5E,GACR3c,KAAK2wB,mBACP,CASQ,eAAA8hB,GAiBN,MAAO,CAAEryC,OAhBMJ,KAAKD,IAAI2B,cACtBo6B,EAAYgY,UAAUC,QAePzB,SAbAtyC,KAAKD,IAAI2B,cACxBo6B,EAAYgY,UAAUE,UAYGzB,MAVbvyC,KAAKD,IAAI2B,cACrBo6B,EAAYgY,UAAUG,aASUhrB,MAPpBjpB,KAAKD,IAAI2B,cACrBo6B,EAAYgY,UAAUI,aAMiB1B,eAJlBxyC,KAAKD,IAAI2B,cAC9Bo6B,EAAYgY,UAAUK,iBAI1B,CAMQ,sBAAAzB,GACN5W,EAAYsY,eAAe5uC,QAASR,IAClC,EAAA/E,aAAaC,KAAK8E,EAAKhF,QAEzB2C,SAASZ,iBAAiB,UAAW/B,KAAKq0C,SAASn0C,KAAKF,MAC1D,CAMQ,mBAAA2yC,GACN3yC,KAAKD,IACF2B,cAAco6B,EAAYgY,UAAUK,iBACpChuB,mBAAmB,WAAY,kCAClCnmB,KAAK6tC,UAAY,IAAI,UACnB7tC,KAAKD,IAAI2B,cAAco6B,EAAYgY,UAAUQ,YAEjD,CAKQ,sBAAA1B,CAAuBL,GAC7BA,EAAM/wC,UAAY,OAAO,EAAA4c,QAAQzf,IAC9BiS,GACC,cAAcA,EAAOrR,wCAAwCqR,EAAOrR,OAAOqR,EAAO1L,kBACpFC,KAAK,UACT,CAKQ,iBAAA2tC,GACN,MAAMD,EAAalwC,SAASC,cAAc,SAE1C,OADAD,SAAS+f,qBAAqB,QAAQ,GAAGzI,YAAY44B,GAC9CA,CACT,CAMQ,4BAAAE,CACN3yC,EACAkyC,EACAO,GAEA7yC,KAAK0zC,aAAe,IAAI,EAAAa,wBACtBv0C,KAAKD,IACLC,KAAKipB,MACLjpB,KAAKwyC,gBAEPxyC,KAAKizC,YAAc,IAAI,EAAAuB,uBACrBx0C,KAAKD,IACLK,EACAkyC,EACAtyC,KAAKipB,MACL4pB,GAIF7yC,KAAKy0C,yBACP,CAMQ,sBAAAzB,GAENhzC,KAAKizC,YAAYY,oBAAoB,EAAA5zC,aAAagM,QAAQ,YAG1DjM,KAAK0zC,aAAaE,+BACf5zC,KAAK0zC,aAAaC,eAEvB,CAKQ,iBAAAe,GACN,MAAO,YAAa/xC,SAChB,QACA,iBAAkBA,SAClB,aACA,gBACN,CAKQ,uBAAA8xC,GAENz0C,KAAKipB,MAAMlnB,iBACT/B,KAAK00C,oBACL10C,KAAK20C,QAAQz0C,KAAKF,OAIpBA,KAAK0zC,aAAakB,mBAAmB,CACnCC,cAAe,KACb70C,KAAK6tC,UAAUmB,sBAEjB8F,SAAU,CAACxgC,EAAQygC,KACjB/0C,KAAK6tC,UAAUoB,yBAAyB36B,EAAQygC,IAElDC,YAAa,KACXh1C,KAAK6tC,UAAUkB,eAGrB,CAMQ,OAAA4F,CAAQx1C,GACdA,EAAEgb,kBAEe,IAAbhb,EAAEmV,QAENtU,KAAK6tC,UAAU2B,aAAarwC,EAAEmV,OAChC,CAMQ,QAAA+/B,CAASl1C,GACf,QAA4CmQ,IAAxC,EAAArP,aAAagM,QAAQ,iBAErB,IAAAixB,cAAa,eACf,OAAQ/9B,EAAE6F,KACR,IAAK,UACHhF,KAAKizC,YAAYgC,kBAAkB,GACnC,MACF,IAAK,YACHj1C,KAAKizC,YAAYgC,iBAAiB,GAClC,MACF,IAAK,SACH,EAAAh1C,aAAage,QAAQ,mBAAe3O,GAI5C,EAjTF,gBAE0B,EAAAwkC,UAAY,CAClCC,OAAQ,kCACRC,SAAU,YACVG,gBAAiB,kBACjBF,YAAa,+CACbC,YAAa,+CACbI,WAAY,eAIU,EAAAF,eAAiB,CACvC,eACA,gBACA,UACA,SACA,YACA,iB,qHChDJ,gBACA,UACA,UAmDA,+BAsBE,WAAAt0C,CACEC,EACAK,EACAkyC,EACArpB,EACA4pB,GAvBM,KAAA32B,KAAyB,GAyB/Blc,KAAKD,IAAMA,EACXC,KAAKI,OAASA,EACdJ,KAAKsyC,SAAWA,EAChBtyC,KAAKipB,MAAQA,EACbjpB,KAAK6yC,WAAaA,CACpB,CAUA,cAAIqC,GACF,OAAOl1C,KAAKkc,IACd,CAOA,iBAAAyU,CACEwkB,EACAvB,GAEA,GAAI5zC,KAAKo1C,oBACP,OAGF,MAAM3F,EAAczvC,KAAKq1C,wBACzBr1C,KAAKs1C,iBAAiB7F,EAAYjB,UAClCxuC,KAAKu1C,cAAc9F,GACnBzvC,KAAKw1C,yBAAyBL,EAAevB,EAC/C,CAMA,kBAAAV,CAAmB1pB,GACjB,GAAIxpB,KAAKy1C,0BACP,OAGF,MAAMlpC,EAAoBvM,KAAK01C,8BAC3Bh2C,OAAOD,KAAK8M,GAAmBhL,OAAS,GAC1C,EAAAtB,aAAage,QAAQ,gCAAiC1R,EAE1D,CAMA,oBAAA6mC,CAAqBd,GACnBtyC,KAAKsyC,SAAS9wC,UAAY,GAE1BxB,KAAK21C,uBAAuBrD,EAAS/S,OAAQ,UAC7Cv/B,KAAK21C,uBAAuBrD,EAAS9S,QAAS,WAC9Cx/B,KAAK21C,uBAAuBrD,EAAS7iB,MAAO,QAC9C,CAMA,kBAAA6jB,CAAmBlzC,GACjB,MAAM,UAAE++B,EAAS,SAAE1Z,GAAarlB,EAEhCJ,KAAKI,OAAOoB,UACV,yCAAyC29B,EAAU3Z,gDACpBC,EAASD,2BAE1CxlB,KAAK41C,qBAAkC,IAAbnwB,EAC5B,CAQA,mBAAAguB,CACED,EACA2B,EACAvB,GAGA,MAAMiC,EAAa,EAAA51C,aAAagM,QAAQ,mBAClC6pC,EAAa,EAAA71C,aAAagM,QAAQ,cAEpC4pC,GAAcC,EAChB/gC,sBAAsB,IACpB/U,KAAKyzC,oBACHD,EACA2B,EACAvB,IAMD5zC,KAAK+1C,gBAKV/1C,KAAK2wB,kBAAkBwkB,EAAevB,GAJpCpkB,QAAQwmB,KAAK,gBAKjB,CAMA,mBAAAnC,CAAoB/0B,GAClB9e,KAAKi2C,uBACLj2C,KAAKk2C,mBAAmBp3B,EAC1B,CAMA,gBAAAm2B,CAAiBkB,GACf,MAAM5gC,EAAQvV,KAAKo2C,qBACbC,EAAWr2C,KAAKs2C,mBAAmB/gC,EAAO4gC,GAC1CI,EAAiBv2C,KAAKw2C,0BAC1BjhC,EACA8gC,EACAF,GAGEI,IAAmBhhC,EAAMiU,QAC3B,EAAAvpB,aAAage,QAAQ,SAAUs4B,GAGjC,EAAAt2C,aAAage,QAAQ,cAAeo4B,EACtC,CASQ,iBAAAjB,GACN,OAAO,EAAAn1C,aAAagM,QAAQ,aAC9B,CAKQ,qBAAAopC,GACN,MAAM3G,EAAkB1uC,KAAKy2C,4BACvBC,EAAchtC,KAAK6B,MAAMmjC,EAAkB,EAAAC,WAC3CF,EAAkB,EAAAxuC,aAAagM,QAAQ,mBACvCud,EAAS,EAAAvpB,aAAagM,QAAQ,UAC9BuiC,EAAW9kC,KAAKonB,IAAI4lB,EAAajI,GAIvC,OAFA,EAAAxuC,aAAage,QAAQ,WAAYuwB,GAE1B,CACLkI,cACAlI,WACAC,kBACAjlB,SAEJ,CAKQ,yBAAAitB,G,MACN,MAAME,GAAmD,QAAjC,IAAA12C,aAAagM,QAAQ,oBAAY,eAAEb,SAAU,EACrE,OACE0Y,OAAO4M,YACP1wB,KAAKipB,MAAMvV,wBAAwB/G,IACnCgqC,EACA,EAAAC,qBAzN6B,CA4NjC,CAKQ,gBAAAtB,CAAiBuB,GACvB,KAAO72C,KAAKkc,KAAK3a,OAASs1C,GAAkB,CAC1C,MAAMrL,EAAWxrC,KAAKkc,KAAK3a,OACrBu1C,EAAU,IAAI,EAAAC,eAAevL,GACnCxrC,KAAKkc,KAAKxR,KAAKosC,GACf92C,KAAKipB,MAAMhP,YAAY68B,EAAQnvB,GACjC,CACF,CAKQ,aAAA4tB,CAAc9F,GACpB,MAAM,YAAEiH,EAAW,gBAAEjI,EAAe,OAAEjlB,GAAWimB,EAE3CuH,EAAaN,GADIjI,EAAkBjlB,GAGzC,GAAIwtB,EAAa,EAAG,CAClB,MAAM7H,EAAYnvC,KAAKi3C,yBAAyBztB,EAAQwtB,GACxD,EAAA/2C,aAAage,QAAQ,SAAUkxB,EACjC,CACF,CAKQ,wBAAA8H,CACNC,EACAF,GAEA,OAAIE,GAAiBF,EAEZE,EAAgBF,EAGhB,CAEX,CAKQ,wBAAAxB,CACNL,EACAvB,GAEA7+B,sBAAsB,KACpB/U,KAAKkc,KAAK1W,QAAS2xC,GAAQA,EAAI7L,kBAE3B6J,GACFvB,GAA8B,IAGpC,CAKQ,uBAAA6B,GACN,OACE,EAAAx1C,aAAagM,QAAQ,oBACrB,EAAAhM,aAAagM,QAAQ,aAEzB,CAKQ,2BAAAypC,G,QACN,MAAMlH,EAAW,EAAAvuC,aAAagM,QAAQ,YAChCmrC,EAAmD,CAAC,EAG1D,IAAK,IAAI50B,EAAI,EAAGA,EAAIgsB,EAAUhsB,IAAK,CACjC,MAAMiH,EAAS,EAAAxpB,aAAa0rC,iBAAiBnpB,GAEzCxiB,KAAKq3C,eAAe5tB,KACgB,QAAtC,EAAC2tB,EAAoB,EAAA3tB,EAAOrH,mBAAU,QAArCg1B,EAAoB,GAAuB,IAAI1sC,KAAK+e,EAAO9e,MAEhE,CAEA,OAAO3K,KAAKs3C,kBAAkBF,EAChC,CAKQ,cAAAC,CAAe5tB,GACrB,OACEA,GACkB,iBAAXA,GACsB,iBAAtBA,EAAOrH,YACU,iBAAjBqH,EAAO9e,KAElB,CAKQ,iBAAA2sC,CAAkBF,GAGxB,MAAMG,EAA6B,CAAC,EAEpC,IAAK,MAAMn1B,KAAcg1B,EAAqB,CAC5C,MAAMvqC,EAAYuqC,EAAoBh1B,GACtCm1B,EAAQn1B,GAAc,CACpBzX,MAAOjB,KAAKonB,OAAOjkB,GACnBjC,IAAKlB,KAAKqT,OAAOlQ,GAErB,CAEA,OAAO0qC,CACT,CAKQ,sBAAA5B,CACN6B,EACAxzC,GAEIwzC,IACFx3C,KAAKsyC,SAAS9wC,WAAa,wBAAwBwC,MAASwzC,UAEhE,CAKQ,oBAAA5B,CAAqB6B,GACvBA,EACFz3C,KAAKD,IAAIM,UAAUE,IAAI,cAEvBP,KAAKD,IAAIM,UAAUC,OAAO,aAE9B,CAMQ,aAAAy1C,GACN,MAAM2B,EAAU,EAAAz3C,aAAagM,QAAQ,iBAC/BwiC,EAAkB,EAAAxuC,aAAagM,QAAQ,mBAE7C,OACE9I,MAAMw0C,QAAQD,IACa,iBAApBjJ,GACPA,GAAmB,CAEvB,CAKQ,oBAAAwH,GACN,MAAM2B,EAAQ53C,KAAK6yC,WAAW+E,MAC9B,GAAKA,EAEL,KAAOA,EAAMC,SAASt2C,OAAS,GAC7Bq2C,EAAME,WAAW,EAErB,CAKQ,kBAAA5B,CAAmBp3B,GACzB,MAAM84B,EAAQ53C,KAAK6yC,WAAW+E,MACzBA,GAEL94B,EAAQtZ,QAAQ,CAACoL,EAAQ3L,KACvB,MAAM8yC,EAAennC,EAAOiO,OAAS,aAAe,OAC9Cm5B,EACJ,2CAA2CpnC,EAAOrR,+CACPqR,EAAOrR,iBACtCw4C,MAEdH,EAAMK,WAAWD,EAAM/yC,IAE3B,CAKQ,kBAAAmxC,GACN,MAAO,CACL8B,aAAc,EAAAj4C,aAAagM,QAAQ,eACnCuiC,SAAU,EAAAvuC,aAAagM,QAAQ,YAC/Bud,OAAQ,EAAAvpB,aAAagM,QAAQ,UAC7BwiC,gBAAiB,EAAAxuC,aAAagM,QAAQ,mBAE1C,CAKQ,kBAAAqqC,CAAmB/gC,EAAY4gC,GACrC,MAAME,EAAW9gC,EAAM2iC,aAAe/B,EACtC,OAAOzsC,KAAKqT,IAAI,EAAGrT,KAAKonB,IAAIulB,EAAU9gC,EAAMi5B,SAAW,GACzD,CAKQ,yBAAAgI,CACNjhC,EACA8gC,EACAF,GAEA,IAAI,OAAE3sB,GAAWjU,EAYjB,OAVI4gC,EAAY,GAAkB,IAAbE,GAAkB7sB,EAAS,EAE9CA,IACS2sB,EAAY,GAAKE,IAAa9gC,EAAMi5B,SAAW,GAEpDhlB,EAAS6sB,EAAW9gC,EAAMk5B,gBAAkB,GAC9CjlB,IAIGA,CACT,E,oHC/eF,MA+BM2uB,EAEgB,GAFhBA,EAIc,GAJdA,EAMW,IAOjB,gCAsBE,WAAAr4C,CACEC,EACAkpB,EACAupB,GAdM,KAAA2C,eAAyB,EAGzB,KAAAiD,gBAAmC,CAAC,EAa1Cp4C,KAAKD,IAAMA,EACXC,KAAKipB,MAAQA,EACbjpB,KAAKwyC,eAAiBA,EAEtBxyC,KAAKq4C,uBACLr4C,KAAKs4C,oBACLt4C,KAAKu4C,kBACP,CAUA,kBAAA3D,CAAmB4D,GACjBx4C,KAAKo4C,gBAAkB,OAAH,UAAQI,EAC9B,CAMA,mBAAAC,CAAoBjvB,GAClBxpB,KAAK04C,WAAW3D,YAAcvrB,CAChC,CAMA,kBAAImqB,GACF,OAAO3zC,KAAKm1C,aACd,CAMA,6BAAAvB,CAA8B+E,GAC5B34C,KAAK44C,kCAAkCD,GACvC34C,KAAK64C,4BACP,CASQ,oBAAAR,GACNr4C,KAAK04C,WAAa,CAChB1H,OAAQ,EACR8H,OAAQ,EACRC,UAAW,EACXC,MAAO,EACPC,MAAO,EACPC,SAAU,EACVriC,SAAU,EACVsiC,aAAa,EACbpE,YAAa,EAEjB,CAKQ,iBAAAuD,GACNt4C,KAAKm1C,cACH,iBAAkBrxB,QAAUwX,UAAU8d,eAAiB,CAC3D,CAKQ,gBAAAb,GACgB,CAACv4C,KAAKwyC,eAAgBxyC,KAAKipB,OAEnCzjB,QAASyN,IACrBA,EAAQlR,iBACN,aACA/B,KAAKq5C,kBAAkBn5C,KAAKF,MAC5B,CACEgyC,SAAS,EACTsH,SAAS,IAGbrmC,EAAQlR,iBAAiB,YAAa/B,KAAKu5C,iBAAiBr5C,KAAKF,MAAO,CACtEgyC,SAAS,EACTsH,SAAS,IAEXrmC,EAAQlR,iBAAiB,WAAY/B,KAAKw5C,gBAAgBt5C,KAAKF,MAAO,CACpEgyC,SAAS,EACTsH,SAAS,MAIbt5C,KAAKipB,MAAMlnB,iBACT,eACA/B,KAAKy5C,oBAAoBv5C,KAAKF,MAElC,CAKQ,iCAAA44C,CAAkCD,GAClB34C,KAAKD,IAAIsD,iBApLjC,sHAwLgBmC,QAASyN,IACrBA,EAAQ9H,MAAMuuC,cAAgBf,EAAU,OAAS,QAErD,CAKQ,0BAAAE,GACe74C,KAAKD,IAAIsD,iBAC5B,0CAGWmC,QAASyN,IACpBA,EAAQ9H,MAAMuuC,cAAgB,QAElC,CAKQ,mBAAAC,CAAoBx6C,GAC1B,OACGa,KAAKD,IAAIyc,SAASrd,EAAE8R,SACnBjR,KAAKD,IAAIyc,SAASrd,EAAEy6C,kBACrBz6C,EAAEy6C,gBAAkB55C,KAAKwyC,gBACxBrzC,EAAEy6C,gBAAkB55C,KAAKipB,MAE/B,CAKQ,gBAAA4wB,GACN75C,KAAK04C,WAAWS,aAAc,EAC9Bn5C,KAAK04C,WAAWQ,SAAW,EAC3Bl5C,KAAK04C,WAAW1H,OAAS,EACzBhxC,KAAK04C,WAAWI,OAAS,EACzB94C,KAAK04C,WAAWM,MAAQ,EACxBh5C,KAAK04C,WAAWO,MAAQ,EACxBj5C,KAAK04C,WAAWK,UAAY,EAC5B/4C,KAAK04C,WAAW7hC,SAAW,CAC7B,CAKQ,oBAAAijC,CACNC,EACAC,GAEA,MAAM1lC,EAASylC,EAAW/5C,KAAK04C,WAAW1H,OACpCiJ,EAASD,EAAWh6C,KAAK04C,WAAWI,OACpCI,EAAWxvC,KAAKwwC,KAAKD,EAASA,EAAS3lC,EAASA,GAIhD6lC,EAFmBzwC,KAAKC,IAAI2K,GAAU5K,KAAKC,IAAIswC,IAC5Bf,EAAWf,EAG9BthC,EAAWujC,KAAKC,MAAQr6C,KAAK04C,WAAWK,UAK9C,MAAO,CACLuB,MAJApB,EAAWf,GACXthC,EAAWshC,EAIXgC,WACA7lC,SACA2lC,SAEJ,CAMQ,iBAAAZ,CAAkBl6C,GACxB,IAAKa,KAAK25C,oBAAoBx6C,IAA2B,IAArBA,EAAEgzC,QAAQ5wC,OAC5C,OAGFvB,KAAK65C,mBAEL,MAAMU,EAAQp7C,EAAEgzC,QAAQ,GACxBnyC,KAAK04C,WAAW1H,OAASuJ,EAAM/I,QAC/BxxC,KAAK04C,WAAWI,OAASyB,EAAMC,QAC/Bx6C,KAAK04C,WAAWM,MAAQuB,EAAM/I,QAC9BxxC,KAAK04C,WAAWO,MAAQsB,EAAMC,QAC9Bx6C,KAAK04C,WAAWK,UAAYqB,KAAKC,MAEjCr6C,KAAK4zC,+BAA8B,EACrC,CAMQ,gBAAA2F,CAAiBp6C,G,YACvB,IAAKa,KAAK25C,oBAAoBx6C,IAA2B,IAArBA,EAAEgzC,QAAQ5wC,OAC5C,OAGF,MAAMg5C,EAAQp7C,EAAEgzC,QAAQ,GAClBsI,EAAUz6C,KAAK85C,qBAAqBS,EAAM/I,QAAS+I,EAAMC,SAE/Dx6C,KAAK04C,WAAWQ,SAAWxvC,KAAKwwC,KAC9BO,EAAQR,OAASQ,EAAQR,OAASQ,EAAQnmC,OAASmmC,EAAQnmC,QAGzDmmC,EAAQN,WACLn6C,KAAK04C,WAAWS,cACnBn5C,KAAK04C,WAAWS,aAAc,EAC9Bn5C,KAAK4zC,+BAA8B,GACD,QAAlC,KAAA5zC,KAAKo4C,iBAAgBvD,qBAAa,kBAGpC70C,KAAK04C,WAAWM,MAAQuB,EAAM/I,QACD,QAA7B,KAAAxxC,KAAKo4C,iBAAgBtD,gBAAQ,iBAC1B2F,EAAQnmC,OAAS6jC,EAClBn4C,KAAK04C,WAAW3D,aAGtB,CAMQ,eAAAyE,CAAgBr6C,G,QACtBa,KAAK04C,WAAW7hC,SAAWujC,KAAKC,MAAQr6C,KAAK04C,WAAWK,UAGtD/4C,KAAK04C,WAAWQ,SAAWf,GAC3Bn4C,KAAK04C,WAAW7hC,SAAWshC,EAG3Bn4C,KAAK4zC,+BAA8B,GAC1B5zC,KAAK04C,WAAWS,aACzBn5C,KAAK04C,WAAWS,aAAc,EAC9Bn5C,KAAK4zC,+BAA8B,GACH,QAAhC,KAAA5zC,KAAKo4C,iBAAgBpD,mBAAW,kBAEhCh1C,KAAK4zC,+BAA8B,GAGrC5zC,KAAK65C,kBACP,CAMQ,mBAAAJ,CAAoBt6C,GACrBa,KAAKm1C,eACVn1C,KAAK4zC,+BAA8B,EACrC,E,4oBCrVF,gBACA,UACA,QACA,QACA,mBAGA,IAAM8G,EAAN,cAAqC,EAAAxoC,WAArC,c,oBAG8B,KAAAhN,MAAgB,GAChB,KAAApC,cAAwB,GACxB,KAAA8K,MAAgB,GACf,KAAAM,cAAwB,CAiDvD,CA/CU,aAAAysC,CAAcx7C,GACpBA,EAAEgb,kBACFna,KAAKoM,cACH,IAAIC,YAAY,wBAAyB,CACvC1G,OAAQ3F,KAAK4N,MACbmK,SAAS,IAGf,CAGA,MAAAxF,GACMvS,KAAKqB,UACPrB,KAAKqB,QAAQyB,cAAgB9C,KAAK8C,cAClC9C,KAAKqB,QAAQuM,MAAQ5N,KAAK4N,OAG5B,IAAIg5B,EAAkC,GAWtC,MAV2B,YAAvB5mC,KAAK8C,eAAsD,aAAvB9C,KAAK8C,gBAC3C8jC,EAAS,EAAAv7B,IAAI;wBACKrL,KAAK4N;uCAGE,6BAAvB5N,KAAK8C,gBACP8jC,EAAS,EAAAv7B,IAAI;uBACIrL,KAAK4N;kCAGjB,EAAAvC,IAAI;;;;iCAIkBrL,KAAK8C;uBACf9C,KAAK4N;;YAEhB5N,KAAKkF,QAAQlF,KAAKkO,aAChB,EAAA7C,IAAI;;;yBAGOrL,KAAK26C;0BAEhB,EAAAtnC;;UAEJuzB;;KAGR,GArDO,EAAAp0B,OAAS,CAAC,WAEW,IAA3B,IAAAmgB,UAAS,CAAE3uB,KAAMsB,S,qDACU,IAA3B,IAAAqtB,UAAS,CAAE3uB,KAAMsB,S,6DACU,IAA3B,IAAAqtB,UAAS,CAAE3uB,KAAMsB,S,qDACW,IAA5B,IAAAqtB,UAAS,CAAE3uB,KAAMyR,U,6DANdilC,EAAsB,IAD3B,IAAAvoB,eAAc,8BACTuoB,GAyDN,UAAeA,C,6qBChEf,gBACA,UACA,YAKMpU,EAAO,CACXnf,UAAW,YACX7B,MAAO,QACPkhB,QAAS,MACTC,QAAS,MACTC,SAAU,OASL,IAAMkU,EAAN,cAAsC,EAAA1oC,WAAtC,c,oBAOuB,KAAA0D,KAAiB0wB,EAAKnf,UAGtB,KAAA/jB,KAAe,EAGf,KAAAwjB,GAAa,EAGb,KAAAkR,OAAiB,IAGhB,KAAArS,UAAoB,CAqOnD,CA5NE,MAAAlT,GACE,OAAO,EAAAlH,IAAI;;;;;;6BAMcrL,KAAKoD;2BACPpD,KAAK4mB;;qCAEK5mB,KAAKylB;;;KAIxC,CAMA,YAAArO,GACEpX,KAAK66C,MAAQ76C,KAAKk4B,WAAY70B,iBAAiB,QAC/CrD,KAAK86C,sBACP,CAMQ,oBAAAA,GACN,MAAMC,EAAiB/6C,KAAKk4B,WAAYx2B,cACtC,mBAEIs5C,EAAgBr4C,SAASC,cAAc,OAC7Co4C,EAAc36C,UAAUE,IAAI,SAE5B,IAAK,IAAIiiB,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC5B,MAAMuW,EAAQiiB,EAAc7iB,YAC5BY,EAAM5tB,MAAMkG,KAAO,QAAY,GAAJmR,QAAaA,EAAI,QAC5Cu4B,EAAe9gC,YAAY8e,EAC7B,CACF,CAWA,SAAAkO,CACEnkC,EACA8S,EACAxS,EACAwjB,EACAkR,EACArS,GAEAzlB,KAAK8C,cAAgBA,EACrB9C,KAAK4V,KAAOA,EACZ5V,KAAKoD,KAAOA,EACZpD,KAAK4mB,GAAKA,EACV5mB,KAAK83B,OAASA,EACd93B,KAAKylB,SAAWA,EAChBzlB,KAAKqB,QAAQuU,KAAOA,EAEpB5V,KAAKi7C,0BACLj7C,KAAKk7C,eACP,CAMQ,uBAAAD,GACFj7C,KAAK4V,OAAS0wB,EAAKnf,WAAcnnB,KAAK66C,QAEtB,MAAhB76C,KAAK83B,OACP93B,KAAKm7C,oBAELn7C,KAAKo7C,oBAET,CAMQ,iBAAAD,GACDn7C,KAAK66C,QAEV76C,KAAK66C,MAAM,GAAG1vC,MAAMkG,KAAsB,IAAZrR,KAAKoD,KAAR,IAC3BpD,KAAK66C,MAAM,GAAG1vC,MAAMyI,MAAmC,KAAvB5T,KAAK4mB,GAAK5mB,KAAKoD,MAAnB,IAC5BpD,KAAK66C,MAAM,GAAG1vC,MAAMyI,MAAQ,KAC9B,CAMQ,iBAAAwnC,GACDp7C,KAAK66C,QAEV76C,KAAK66C,MAAM,GAAG1vC,MAAMkG,KAAO,KAC3BrR,KAAK66C,MAAM,GAAG1vC,MAAMyI,MAAuB,IAAZ5T,KAAKoD,KAAR,IAC5BpD,KAAK66C,MAAM,GAAG1vC,MAAMkG,KAAoB,IAAVrR,KAAK4mB,GAAR,IAC3B5mB,KAAK66C,MAAM,GAAG1vC,MAAMyI,MAA2B,KAAf,EAAI5T,KAAK4mB,IAAb,IAC9B,CAMA,cAAI8b,GACF,MAAMrhC,EAAU,CAAEypB,KAAM9qB,KAAKqB,QAAQA,SAErC,MAA2B,YAAvBrB,KAAK8C,cACA9C,KAAKq7C,mBAAmBh6C,GAExBrB,KAAKs7C,oBAAoBj6C,EAEpC,CAQQ,kBAAAg6C,CAAmBh6C,GACzB,MAAoB,MAAhBrB,KAAK83B,OACA93B,KAAKu7C,2BAA2Bl6C,GAEhCrB,KAAKw7C,yBAAyBn6C,EAEzC,CAQQ,0BAAAk6C,CAA2Bl6C,GACjC,MAAO,CACLc,GAAI,CACF,CACEglB,UAAW,CACT9lB,UACA8lB,UAAW,CACTnE,IAAK,EACLC,IAAKjjB,KAAKoD,MAEZqiB,SAAUzlB,KAAKylB,WAGnB,CACE0B,UAAW,CACT9lB,UACA8lB,UAAW,CACTnE,IAAKhjB,KAAK4mB,GACV3D,IAAK,GAEPwC,SAAUzlB,KAAKylB,YAKzB,CAQQ,wBAAA+1B,CAAyBn6C,GAC/B,MAAMuN,EAAS5O,KAAKy7C,oBACpB,MAAO,CACLt0B,UAAW,CACT9lB,UACA,CAACrB,KAAK4V,MAAOhH,EACb6W,SAAUzlB,KAAKylB,UAGrB,CAQQ,mBAAA61B,CAAoBj6C,GAC1B,MAAMuN,EAAS5O,KAAKy7C,oBACpB,MAAO,CACLt0B,UAAW,CACT9lB,UACA84B,SAAU,CACRn1B,IAAKshC,EAAKtmC,KAAK4V,MACf0P,MAAO1W,GAET6W,SAAUzlB,KAAKylB,UAGrB,CAOQ,iBAAAg2B,GACN,MAAM7sC,EAAiC,CAAC,EAGxC,MAF0B,KAAtBtJ,OAAOtF,KAAKoD,QAAcwL,EAAOoU,IAAMhjB,KAAKoD,MACxB,KAApBkC,OAAOtF,KAAK4mB,MAAYhY,EAAOqU,IAAMjjB,KAAK4mB,IACvChY,CACT,GAvPW,EAAAgsC,wBAAAA,EACJ,EAAApoC,OAAS,CAAC,WAGW,IAA3B,IAAAmgB,UAAS,CAAE3uB,KAAMsB,S,6DAGU,IAA3B,IAAAqtB,UAAS,CAAE3uB,KAAMsB,S,oDAGU,IAA3B,IAAAqtB,UAAS,CAAE3uB,KAAM4uB,S,oDAGU,IAA3B,IAAAD,UAAS,CAAE3uB,KAAM4uB,S,kDAGU,IAA3B,IAAAD,UAAS,CAAE3uB,KAAMsB,S,sDAGW,IAA5B,IAAAqtB,UAAS,CAAE3uB,KAAMyR,U,mFAnBPmlC,EAAuB,IADnC,IAAAzoB,eAAc,+BACFyoB,GA0Pb,UAAeA,C,4oBC/Qf,gBACA,UACA,UACA,aAGA,IACM19B,EADN,cAC0B,EAAAhL,WAyBxB,WAAApS,CAAYmT,EAA0ByoC,GACpC16C,QAxBF,KAAA26C,WAAmC,IAAAzlC,aAgCP,KAAAwlC,YAAsB,GACtB,KAAA9tC,MAAgB,GAsBpC,KAAAguC,YAAc,KAChB57C,KAAK27C,UAAU/tC,QACjB5N,KAAK27C,UAAU/tC,MAAMA,MAAQ5N,KAAK4N,QAhCpC5N,KAAK07C,YAAcA,GAAe,GAE9BzoC,GACFA,EAAQgH,YAAYja,KAExB,CAMA,iBAAAwa,GACExZ,MAAMwZ,oBACNsJ,OAAO/hB,iBAAiB,OAAQ/B,KAAK47C,YACvC,CAEA,oBAAA1hB,GACEl5B,MAAMk5B,uBACNpW,OAAOrP,oBAAoB,OAAQzU,KAAK47C,YAC1C,CAGA,UAAAtlC,CAAWulC,GACLA,EAAQloC,IAAI,UAAY3T,KAAK27C,UAAU/tC,QACzC5N,KAAK27C,UAAU/tC,MAAMA,MAAQ5N,KAAK4N,MAEtC,CAcQ,YAAAkuC,CAAa38C,GACnBA,EAAEs2B,iBACF,MAAMxkB,EAAS9R,EAAE8R,OACjBjR,KAAK4N,MAAQqD,EAAOrD,MACpB5N,KAAKoM,cACH,IAAIC,YAAY,eAAgB,CAC9B1G,OAAQ3F,KAAK4N,MACbmK,SAAS,EACTC,UAAU,IAGhB,CAKQ,WAAA+jC,CAAY58C,GACJ,UAAVA,EAAE6F,KACJ7F,EAAEs2B,gBAEN,CAIQ,iBAAAumB,GACFh8C,KAAK27C,UAAU/tC,QACjB5N,KAAK27C,UAAU/tC,MAAMA,MAAQ,GAC7B5N,KAAK4N,MAAQ,IAEf5N,KAAKoM,cAAc,IAAIC,YAAY,eACrC,CAEA,MAAAkG,GACE,OAAO,EAAAlH,IAAI;;;8CAG+BrL,KAAK+7C;;;;iBAInC,IAAAxkC,KAAIvX,KAAK27C;;6BAEI37C,KAAK07C;uBACX17C,KAAK87C;;;;;;uBAML97C,KAAKg8C;;;;;WAM1B,GAzHO,EAAAxpC,OAAS,CAAC,WAiCW,IAA3B,IAAAmgB,UAAS,CAAE3uB,KAAMsB,S,2DACU,IAA3B,IAAAqtB,UAAS,CAAE3uB,KAAMsB,S,qDAnCd4X,EAAW,IADhB,IAAAiV,eAAc,gB,uBA0BS8pB,eAAgB,UAzBlC/+B,GA6HN,UAAeA,C,4oBCpIf,gBACA,UAEA,aAIe,IAAMg/B,EAAN,cAA2B,EAAAhqC,WAGxC,WAAApS,GACEkB,OACF,CAEA,MAAAuR,GACE,OAAO,EAAAlH,IAAI,+BACb,GARO,EAAAmH,OAAyB,CAAC,WADd0pC,EAAY,IADhC,IAAA/pB,eAAc,iB,2BACM+pB,G,UAAAA,C,kJCPrB,gBAgCa,EAAAC,SAGA,CACL,CACEn3C,IAAK,UACL4I,MAAO,qCAET,CACE5I,IAAK,OACL4I,MAAO,SAET,CACE5I,IAAK,SACL4I,MAAO,eAET,CACE5I,IAAK,UACL4I,MAAO,eAET,CACE5I,IAAK,wBACL4I,MAAO,eAET,CACE5I,IAAK,sBACL4I,MAAO,wBAET,CACE5I,IAAK,QACL4I,MAAO,uBAET,CACE5I,IAAK,QACL4I,MAAO,sBA4CJ,EAAAwuC,oBAAyC,CACpDV,YAAa,6CACbW,cAAe,GAAG,EAAAvsC,kBAClBwsC,qBAAsB,OACtBv5C,QAAS,CACP2X,cAAe,CACbC,SAAU,OACVC,SAAU,OACVe,WAAY,YAEd4gC,cAAe,CACbzZ,KAAM,aACNjzB,QAAS,mBAMF,EAAA2sC,mBAA6B,qC,oHChI1C,gBACA,UACA,UAUA,+BAGE,WAAA18C,CAAY28C,GACVz8C,KAAKy8C,KAAOA,CACd,CAOA,MAAA7zC,CAAOmX,GACD,EAAAy8B,mBAAmBE,KAAK38B,KAC1BA,EAAOA,EAAK4V,QAAQ,gBAAiB,IAAIlc,eAEhCjC,SAAS,QAChBuI,EAAOA,EAAK4V,QAAQ,KAAM,SAI9B,IAAAzpB,0BAAyB,OAAQ6T,EACnC,CAMA,UAAA48B,CAAW58B,GACT/f,KAAKy8C,KAAKG,MAAQ78B,EAGlB,MAAM88B,EAAoB,OAAH,UAClB,EAAA58C,aAAagM,QAAQ,2BAG1B4wC,EAAkB98B,KAAOA,GAAQ,GACjC,EAAA9f,aAAage,QAAQ,yBAA0B4+B,EACjD,CAGA,KAAAC,GACE98C,KAAKy8C,KAAKG,MAAQ,GAClB58C,KAAKy8C,KAAKphC,OAAS,GACnBrb,KAAKy8C,KAAKM,kBAAmB,GAG7B,IAAA7wC,0BAAyB,OAAQ,GACnC,CAMA,gBAAA8wC,CAAiBC,GACfj9C,KAAKy8C,KAAKM,kBAAmB,EAC7B/8C,KAAKy8C,KAAKphC,OAAS4hC,EAAW/3C,MAC9BlF,KAAKy8C,KAAKG,MAAQK,EAAW/3C,MAC7BlF,KAAK4I,OAAOq0C,EAAW/3C,MACzB,CAMA,aAAAg4C,CAAcC,GACZn9C,KAAKy8C,KAAKM,kBAAmB,EAC7B/8C,KAAKy8C,KAAKphC,OAAS8hC,EAAQvvC,MAC3B5N,KAAKy8C,KAAKG,MAAQO,EAAQvvC,MAC1B5N,KAAK4I,OAAOu0C,EAAQvvC,MACtB,CAKA,oBAAAwvC,QAC0B9tC,IAApBtP,KAAKy8C,KAAKG,OACd58C,KAAK4I,OAAO5I,KAAKy8C,KAAKG,MACxB,CAKA,mBAAAS,GACEr9C,KAAK4I,OAAO5I,KAAKy8C,KAAKG,OAAS,GACjC,E,sHCxFF,kCAIE,WAAA98C,CACE28C,EACAa,GAUF,KAAAC,sBAAyBp+C,IACvBa,KAAKs9C,WAAWN,iBAAiB79C,EAAEwG,SAOrC,KAAA63C,sBAAyBr+C,IACvBa,KAAKs9C,WAAWJ,cAAc/9C,EAAEwG,SAOlC,KAAA83C,gBAAmBt+C,IACjBa,KAAKs9C,WAAWX,WAAWx9C,EAAEwG,SAI/B,KAAA+3C,gBAAkB,KAChB19C,KAAKs9C,WAAWF,wBAIlB,KAAAO,wBAA0B,KACxB39C,KAAKs9C,WAAWD,uBAIlB,KAAAO,iBAAmB,KACjB59C,KAAKy8C,KAAKM,kBAAmB,GAI/B,KAAAc,iBAAmB,KACjB79C,KAAKs9C,WAAWR,SA7ChB98C,KAAKy8C,KAAOA,EACZz8C,KAAKs9C,WAAaA,CACpB,E,4oBCnBF,gBACA,UACA,UAEA,aAUe,IAAMQ,EAAN,cAAmC,EAAA5rC,WAAnC,c,oBAKb,KAAA6rC,SAA0B,EA4B5B,CAtBU,WAAAC,CAAYb,GAClBn9C,KAAKoM,cACH,IAAIC,YAAY,mBAAoB,CAClC1G,OAAQw3C,EACRplC,SAAS,EACTC,UAAU,IAGhB,CAEA,MAAAzF,GACE,OAAO,EAAAlH,IAAI;SACP,IAAA1M,KACAqB,KAAK+9C,SACJZ,GACC,EAAA9xC,IAAI,cAAc,IAAMrL,KAAKg+C,YAAYb;kBACjCA,EAAQn4C;kBACRm4C,EAAQvvC;;KAIxB,GA/BO,EAAA4E,OAAyB,CAAC,WAIjC,IADC,IAAAmgB,UAAS,CAAE3uB,KAAMb,Q,uDAJC26C,EAAoB,IADxC,IAAA3rB,eAAc,2BACM2rB,G,UAAAA,C,4oBCdrB,gBACA,UACA,QACA,QACA,QACA,gBACA,SACA,UACA,UACA,aAMA,IACM/hB,EADN,cAC+B,EAAA7pB,WAM7B,WAAApS,GACEkB,QAcO,KAAAqa,OAAiB,GACjB,KAAAuhC,OAAgB,IAAA33B,0BAAyB,SAAW,GACpD,KAAA83B,kBAA4B,EAqB7B,KAAAkB,yBAA2B,KACjCj+C,KAAKk+C,eAAeP,2BAId,KAAAQ,uBAA0Bh/C,IAChCa,KAAKk+C,eAAeV,sBAAsBr+C,IA1C1C,MAAM8T,EAAUtQ,SAASwJ,eAAe,oBACpC8G,GACFA,EAAQgH,YAAYja,MAItBA,KAAKo+C,YAAc,IAAI,EAAAC,uBAAuBr+C,MAC9CA,KAAKk+C,eAAiB,IAAI,EAAAI,0BAA0Bt+C,KAAMA,KAAKo+C,YACjE,CAcA,cAAId,GACF,OAAOt9C,KAAKo+C,WACd,CAGA,iBAAIG,GACF,OAAOv+C,KAAKk+C,cACd,CAoBA,MAAA3rC,GACE,OAAO,EAAAlH,IAAI;;;;yBAIU,EAAA+wC,oBAAoBV;2BAClB,EAAAU,oBAAoBC;kCACb,EAAAD,oBAAoBE;qBACjC,EAAAF,oBAAoBr5C;kBACvB/C,KAAK48C;6BACM58C,KAAK+8C;qCACG/8C,KAAKk+C,eAAeX;+BAC1Bv9C,KAAKk+C,eAAeR;wBAC3B19C,KAAKk+C,eAAeT;mBACzBz9C,KAAKk+C,eAAeN;yBACd59C,KAAKk+C,eAAeL;;;gCAGb79C,KAAKi+C;;;oBAGjB,EAAA9B;4BACQn8C,KAAKm+C;;KAG/B,GAjFO,EAAA3rC,OAAyB,CAAC,WAoBxB,IAAR,IAAA+C,S,sDACQ,IAAR,IAAAA,S,qDACQ,IAAR,IAAAA,S,iEAvBGwmB,EAAgB,IADrB,IAAA5J,eAAc,sB,2BACT4J,GAqFN,UAAeA,C,6GCrGf,gBAmBA,MAAMyiB,UAAuB,EAAAzrC,eAC3B,MAAAR,GAAgB,CAOhB,MAAA9C,CAAO6D,GAAiByN,IACtB,IAAKA,EACH,OAGF,MAAM9N,EAAUjT,KAAKy+C,oBAAoBnrC,IACpCL,aAAO,EAAPA,EAASY,gBAId7T,KAAK0+C,qBAAqBzrC,EAAQY,cAAeZ,EACnD,CAOQ,mBAAAwrC,CAAoBnrC,GAE1B,MAAI,YAAaA,GAAQA,EAAKL,QACrBK,EAAKL,QAEP,IACT,CASQ,kBAAA0rC,CACNvrC,EACAwrC,EACAC,GAEA,OACED,EAAUjyC,KAAOyG,EAAWzG,KAC5BiyC,EAAUE,QAAU1rC,EAAWzG,IAAMkyC,EAAazzC,MAEtD,CAQQ,yBAAA2zC,CACN3rC,EACAwrC,GAEA,MAAMI,EAAYJ,EAAUjyC,IAAMyG,EAAWzG,IACvCsyC,EAAYL,EAAUE,OAAS1rC,EAAW0rC,OAEhD,MAAO,CACLE,YACAC,YACAC,gBAAiBx1C,KAAKC,IAAIq1C,GAAat1C,KAAKC,IAAIs1C,GAEpD,CAYQ,oBAAAP,CAAqB3tC,EAAiBY,GAC5C,MAAMyB,EAAarC,EAAO2C,wBACpBmrC,EAA6B,CACjCzzC,OAAQ2F,EAAOtE,aACfmH,MAAO7C,EAAOQ,aAGVqtC,EAAYjtC,EAAM+B,wBAGxB,GAAI1T,KAAK2+C,mBAAmBvrC,EAAYwrC,EAAWC,GACjD,OAIF,MAAMM,EAAan/C,KAAK++C,0BAA0B3rC,EAAYwrC,GAGxDQ,EAAeD,EAAWD,gBAC5BC,EAAWH,UACXG,EAAWF,UAEfluC,EAAOiuC,WAAaI,CACtB,EAOW,EAAAC,gBAAiB,IAAArqC,WAAUwpC,E,4oBCnIxC,gBACA,UACA,UACA,UACA,aACA,UAeA,IAAMc,EAAN,cAAyC,EAAAptC,WAAzC,c,oBAI6B,KAAAqtC,YAAgC,GAG/B,KAAAC,4BAAsC,EAGtD,KAAAC,UAAoB,GAGpB,KAAAC,aAAuB,GAGvB,KAAAC,WAAqB,GAGrB,KAAA1yB,MAAgB,GAGC,KAAA2yB,gBAA0B,CAgDzD,CA1CU,aAAAC,CAAc/uC,GACpB9Q,KAAKoM,cACH,IAAIC,YAAY,sBAAuB,CACrC1G,OAAQmL,EACRiH,SAAS,EACTC,UAAU,IAGhB,CAEA,MAAAzF,GACE,OAAO,EAAAlH,IAAI;QACPrL,KAAKitB,MAAQ,EAAA5hB,IAAI,qBAAqBrL,KAAKitB,aAAe,EAAA5Z;;UAEvDrT,KAAK4/C,eAEH5/C,KAAKu/C,aAA2C,IAA5Bv/C,KAAKu/C,YAAYh+C,QAEtC,IAAA5C,KACEqB,KAAKu/C,YACL,CAACzuC,EAAsB7L,IAAkB,EAAAoG,IAAI;;gCAE3BrL,KAAKw/C,6BAA+Bv6C,EAC9C,YACA;gCACU,IAAMjF,KAAK6/C,cAAc/uC;oBACpC,EAAAuuC,eACDr/C,KAAKw/C,6BAA+Bv6C;;qBAGpC,IAAA66C,aAAWhvC,aAAI,EAAJA,EAAMivC,aAAajvC,aAAI,EAAJA,EAAO9Q,KAAK0/C;oBAC1C1/C,KAAK2/C,aAAc7uC,aAAI,EAAJA,EAAO9Q,KAAK2/C,aAC7B,EAAAt0C,IAAI;iCACOyF,EAAK9Q,KAAK2/C;yBAErB,EAAAtsC;;iBAlBV,EAAAhI,IAAI,0CAFJ,EAAAgI;;KA0BV,GApEO,EAAAb,OAAyB,CAAC,WAGN,IAA1B,IAAAmgB,UAAS,CAAE3uB,KAAMb,Q,0DAGU,IAA3B,IAAAwvB,UAAS,CAAE3uB,KAAM4uB,S,0EAGN,IAAX,IAAAD,Y,yDAGW,IAAX,IAAAA,Y,4DAGW,IAAX,IAAAA,Y,0DAGW,IAAX,IAAAA,Y,qDAG4B,IAA5B,IAAAA,UAAS,CAAE3uB,KAAMyR,U,+DAtBd6pC,EAA0B,IAD/B,IAAAntB,eAAc,kCACTmtB,GAwEN,UAAeA,C,4oBC5Ff,gBACA,UACA,UAGA,QACA,QACA,gBACA,UACA,UACA,UAEA,aAGMU,EACM,KADNA,EAEM,OAFNA,EAGQ,WAQd,SAASC,EAAiCl9C,G,UACxC,MAAO,CACL2X,cAAe,CACbC,UAAgC,QAAtB,EAAA5X,aAAO,EAAPA,EAAS2X,qBAAa,eAAEC,WAAYqlC,EAC9CplC,UAAgC,QAAtB,EAAA7X,aAAO,EAAPA,EAAS2X,qBAAa,eAAEE,WAAYolC,EAC9CrkC,YAAkC,QAAtB,EAAA5Y,aAAO,EAAPA,EAAS2X,qBAAa,eAAEiB,aAAcqkC,GAEpDzD,eAAex5C,aAAO,EAAPA,EAASw5C,gBAAiB,CAAC,EAE9C,CA8DA,IACM7gC,EADN,cACyC,EAAAxJ,WA6CvC,WAAApS,CACS47C,EACPW,EACAC,EACArpC,EACAlQ,GAEA/B,QANO,KAAA06C,YAAAA,EAxCG,KAAAW,cAAwB,GACxB,KAAAC,qBAA+B,GAEd,KAAA4D,iBAA2B,EAK/C,KAAAngC,KAAe,GACf,KAAAnS,MAAgB,GAChB,KAAA1I,MAAgB,GAChB,KAAAi7C,iBAA2B,EAC3B,KAAAC,qBAA+B,EAC/B,KAAAR,gBAA0B,EAC1B,KAAAS,cAAwB,EACxB,KAAAC,wBAAkC,EAClC,KAAAC,6BAAuC,EACvC,KAAAhB,YAAmD,CAAC,EAC5C,KAAAiB,6BAAyC,GA8F1D,KAAAC,iBAAoBthD,GACXa,KAAK0gD,iBAAiBD,iBAAiBthD,GAIhD,KAAAwhD,yBAA4BxhD,GACnBa,KAAK4gD,kBAAkBD,yBAAyBxhD,GAIzD,KAAA0hD,YAAe1hD,GACNa,KAAK8gD,cAAcD,YAAY1hD,GAIxC,KAAA6+C,YAAc,IACLh+C,KAAK8gD,cAAc9C,cAI5B,KAAA+C,cAAgB,IACP/gD,KAAK8gD,cAAcC,gBAI5B,KAAAC,eAAiB,IACRhhD,KAAK8gD,cAAcE,iBAI5B,KAAAnD,iBAAmB,IACV79C,KAAK8gD,cAAcjD,mBAI5B,KAAAoD,sBAAwB,KACtBjhD,KAAKmgD,iBAAkB,GAIzB,KAAAnD,iBAAoBC,GACXj9C,KAAK4gD,kBAAkB54C,OAAOi1C,GAIvC,KAAAiE,wBAA2BnhC,GAClB/f,KAAK4gD,kBAAkBO,oBAAoBphC,GAIpD,KAAAqhC,wBAA0B,KACxB,GAAIphD,KAAKmgD,kBAAoD,IAAjCngD,KAAKsgD,uBAA+B,CAC9D,MAAMe,EACJrhD,KAAKu/C,YACHv/C,KAAKshD,qBAAqBthD,KAAKugD,+BAC/BvgD,KAAKsgD,wBAETtgD,KAAKg9C,iBAAiBqE,GACtBrhD,KAAKuhD,yBACLvhD,KAAKihD,uBACP,GAIF,KAAAO,+BAAiC,KAC/BxhD,KAAKkhD,wBAAwBlhD,KAAK+f,OAIpC,KAAA0hC,iBAAmB,KACjBzhD,KAAKihD,wBACLjhD,KAAKogD,qBAAsB,GAI7B,KAAAsB,0BAA4B,KAC1B1hD,KAAKo+C,YAAY8B,mBAInB,KAAAyB,0BAA4B,KAC1B3hD,KAAKo+C,YAAY+B,mBAInB,KAAAyB,2BAA6B,KAC3B5hD,KAAKo+C,YAAYyD,oBAInB,KAAAN,uBAAyB,KACvBvhD,KAAK0gD,iBAAiBoB,kBA5JtB9hD,KAAKq8C,cAAgBA,EACrBr8C,KAAKs8C,qBAAuBA,EAG5Bt8C,KAAK+hD,4BAA8B9B,EAAiCl9C,GAGpE/C,KAAKo+C,YAAc,IAAI,EAAA4D,sBAAsBhiD,MAC7CA,KAAK0gD,iBAAmB,IAAI,EAAAuB,0BAA0BjiD,MACtDA,KAAK4gD,kBAAoB,IAAI,EAAAsB,2BAA2BliD,MACxDA,KAAK8gD,cAAgB,IAAI,EAAAqB,kBAAkBniD,MAGvCiT,GAASA,EAAQgH,YAAYja,KACnC,CAMA,WAAIoiD,GACF,OAAOpiD,KAAKo+C,YAAYgE,OAC1B,CAGA,uBAAIC,GACF,OAAOriD,KAAK+hD,2BACd,CAGA,wBAAIT,GACF,OAAOthD,KAAKwgD,4BACd,CAGA,wBAAIc,CAAqB1zC,GACvB5N,KAAKwgD,6BAA+B5yC,CACtC,CAMA,UAAA0I,CAAWiD,GACLA,EAAkB5F,IAAI,kBACxB3T,KAAKo+C,YAAYkE,cACftiD,KAAKq8C,cACLr8C,KAAKs8C,sBAIL/iC,EAAkB5F,IAAI,YAAc3T,KAAK+C,UAE3C/C,KAAK+hD,4BAA8B9B,EAAiCjgD,KAAK+C,UAGvEwW,EAAkB5F,IAAI,qBACxB3T,KAAKmgD,iBAAmBngD,KAAKkgD,gBAEjC,CAwGU,yBAAAqC,G,QAGNviD,KAAKsgD,wBAGJ,QAFD,EAAAtgD,KAAKu/C,YACHv/C,KAAKshD,qBAAqBthD,KAAKugD,sCAChC,eAAEh/C,QACD,IAEFvB,KAAKsgD,wBAGF,QAFD,EAAAtgD,KAAKu/C,YACHv/C,KAAKshD,qBAAqBthD,KAAKugD,sCAChC,eAAEh/C,QAAS,EAElB,CAKA,MAAAgR,GACE,OAAO,EAAAlH,IAAI;;;gBAGCrL,KAAK+f;uBACE/f,KAAK07C;wBACJ17C,KAAK6gD;iBACZ7gD,KAAKg+C;mBACHh+C,KAAK+gD;oBACJ/gD,KAAKghD;mBACNhhD,KAAKygD;uBACDzgD,KAAK69C;;;UAGlB79C,KAAKu/C,aACPv/C,KAAKmgD,iBACLngD,KAAK4/C,iBACJ5/C,KAAKkgD,gBACF,EAAA70C,IAAI;iBACA,IAAA1M,KACAqB,KAAKshD,qBACL,CAACt8C,EAAaw9C,K,YACZ,OAAO,EAAAn3C,IAAI;;;uCAGUrL,KAAKu/C,YAAYv6C;uDACDw9C,IAC/BxiD,KAAKugD,6BACDvgD,KAAKsgD,wBACJ;qCACQ;wCACG;sCACqC,QAAvC,EAAwB,QAAxB,EAAAtgD,KAAKqiD,2BAAmB,eAAE3nC,qBAAa,eACjDiB;0CACc3b,KAAK4/C;gCACwB,QAAvC,EAAwB,QAAxB,EAAA5/C,KAAKqiD,2BAAmB,eAAE9F,qBAAa,eAAGv3C;+CAC3BhF,KAAK2gD;;;;cAOxC,EAAAttC;;KAGV,GAxRO,EAAAb,OAAyB,CAAC,WAKrB,IAAX,IAAAmgB,Y,6DACW,IAAX,IAAAA,Y,oEAC2B,IAA3B,IAAAA,UAAS,CAAE3uB,KAAMtE,S,uDACW,IAA5B,IAAAizB,UAAS,CAAE3uB,KAAMyR,U,gEAKT,IAAR,IAAAF,S,oDACQ,IAAR,IAAAA,S,qDACQ,IAAR,IAAAA,S,qDACQ,IAAR,IAAAA,S,gEACQ,IAAR,IAAAA,S,oEACQ,IAAR,IAAAA,S,+DACQ,IAAR,IAAAA,S,6DACQ,IAAR,IAAAA,S,sEACQ,IAAR,IAAAA,S,4EACQ,IAAR,IAAAA,S,2DACgB,IAAhB,IAAAA,S,2EAxBGmG,EAA0B,IAD/B,IAAAyW,eAAc,iC,4CAkDD9D,YAAW,UAjDnB3S,GA4RN,UAAeA,C,8GC3Xf,0BAIE,WAAA5b,CAAY28C,GAKZ,KAAAoE,YAAe1hD,IAEb,IAAIsjD,EACJ,GAAItjD,aAAakN,YACfo2C,EAAan9C,OAAOnG,EAAEwG,SAAW,OAC5B,CAEL,MAAMsL,EAAS9R,EAAE8R,OACjBwxC,GAAaxxC,aAAM,EAANA,EAAQrD,QAAS,EAChC,CAEA5N,KAAKy8C,KAAK18B,KAAO0iC,EAGjBziD,KAAKy8C,KAAK4D,cAAe,EAGrBrgD,KAAKy8C,KAAK2D,sBACZpgD,KAAKy8C,KAAK2D,qBAAsB,GAGlCpgD,KAAKy8C,KAAKrwC,cACR,IAAIC,YAAY,aAAc,CAC5B1G,OAAQ88C,EACR1qC,SAAS,EACTC,UAAU,KAKVhY,KAAKy8C,KAAK18B,KAAKxe,OAAS,IAC1BvB,KAAKy8C,KAAKiF,4BACV1hD,KAAKy8C,KAAKmF,+BAKd,KAAA5D,YAAc,KACZh+C,KAAKy8C,KAAK8E,0BAIZ,KAAAR,cAAgB,K,OAGE,QAAd,EAAA/gD,KAAKy8C,KAAK18B,YAAI,eAAExe,QAAS,IACxBvB,KAAKy8C,KAAK2D,qBACXpgD,KAAKy8C,KAAK4D,cAEVrgD,KAAKy8C,KAAKkF,6BAKd,KAAAX,eAAiB,KACfhhD,KAAKy8C,KAAKwE,yBAIZ,KAAApD,iBAAmB,KACjB79C,KAAKy8C,KAAK18B,KAAO,GACjB/f,KAAKy8C,KAAK7uC,MAAQ,GAClB5N,KAAKy8C,KAAKv3C,MAAQ,GAClBlF,KAAKy8C,KAAK0D,iBAAkB,EAC5BngD,KAAKy8C,KAAK4D,cAAe,EACzBrgD,KAAKy8C,KAAKmF,6BACV5hD,KAAKy8C,KAAKwE,wBACVjhD,KAAKy8C,KAAKrwC,cAAc,IAAIC,YAAY,iBAvExCrM,KAAKy8C,KAAOA,CACd,CA0EA,eAAAiG,GACE1iD,KAAKy8C,KAAK18B,KAAO,GACjB/f,KAAKy8C,KAAK7uC,MAAQ,GAClB5N,KAAKy8C,KAAKv3C,MAAQ,EACpB,CAGA,qBAAAy9C,GACE,OAAO3iD,KAAKy8C,KAAK18B,MAAQ/f,KAAKy8C,KAAK18B,KAAKxe,QAAU,CACpD,E,gbC5FF,gBACA,SACA,UAIA,8BAME,WAAAzB,CAAY28C,GAHJ,KAAAmG,eAAoD,KAI1D5iD,KAAKy8C,KAAOA,EACZz8C,KAAK6iD,oBACP,CAGQ,kBAAAA,GACN7iD,KAAKoiD,QAAU,IAAI,EAAAU,KACjB9iD,KAAKy8C,MACL,IAAA7f,UAAgBmmB,GAAqC,EAAD,+BAClD,MAAMhjC,EAAOgjC,EAAa,GAE1B,GAAIhjC,GAAQA,EAAKxe,QAAU,GAAKvB,KAAKy8C,KAAK4D,aAAc,CAEtDrgD,KAAKy8C,KAAK0D,iBAAkB,EAQ5B,GALwBngD,KAAKy8C,KAAKmD,gBAAkBlgD,OAAOD,KAAKO,KAAKy8C,KAAK8C,aAAah+C,OAAS,IAE9FvB,KAAKy8C,KAAKmD,gBAAiB,IAGxB5/C,KAAK4iD,eACR,MAAM,IAAIxjD,MAAM,mCAGlB,IACE,MAAM,KAAEkW,SAAe,EAAA0mB,MAAM/nB,IAAIjU,KAAK4iD,eAAe7iC,IACrD,IAAIijC,EAeJ,OAZI7/C,MAAMw0C,QAAQriC,IAEhB0tC,EAAe,CAAE1tC,KAAMA,GACvBtV,KAAKy8C,KAAK6E,qBAAuB,CAAC,UAGlC0B,EAAe1tC,EACftV,KAAKy8C,KAAK6E,qBAAuB5hD,OAAOD,KAAK6V,IAG/CtV,KAAKy8C,KAAK8C,YAAcyD,EACxBhjD,KAAKy8C,KAAKmD,gBAAiB,EACpBoD,CACT,CAAE,MAAOvzB,GAEP,MADAzvB,KAAKy8C,KAAKmD,gBAAiB,EACrBnwB,CACR,CACF,CAQA,QAJK1P,GAAQA,EAAKxe,OAAS,KACzBvB,KAAKy8C,KAAK0D,iBAAkB,EAC5BngD,KAAKy8C,KAAKmD,gBAAiB,GAEtB,CAAC,CACV,GAAG,KACH,IAAM,CAAC5/C,KAAKy8C,KAAK18B,MAErB,CAOA,aAAAuiC,CAAcjG,EAAuBC,GACnCt8C,KAAK4iD,eAAkB1tC,IACrB,MAAMqY,EAAM,IAAInJ,IAAIi4B,GAEpB,OADA9uB,EAAIlJ,aAAa5Q,IAAI6oC,EAAsBpnC,GACpCqY,EAAIkX,WAEf,CAGA,eAAAyb,GACElgD,KAAKy8C,KAAK0D,iBAAkB,CAC9B,CAGA,eAAAA,GACEngD,KAAKy8C,KAAK0D,iBAAkB,CAC9B,CAGA,gBAAA0B,GACE7hD,KAAKy8C,KAAK8C,YAAc,CAAC,EACzBv/C,KAAKy8C,KAAKmD,gBAAiB,CAC7B,E,sHClGF,kCAIE,WAAA9/C,CAAY28C,GAKZ,KAAAgE,iBAAoBthD,IAelB,OAd4B,CAC1B,UACA,YACA,YACA,cAGUqY,SAASrY,EAAE6F,MACrBhF,KAAKy8C,KAAK0D,kBAC4B,IAAtCngD,KAAKy8C,KAAK6D,wBAEVnhD,EAAEs2B,iBAGIt2B,EAAE6F,KACR,IAAK,YACHhF,KAAKijD,mBACL,MAEF,IAAK,aACHjjD,KAAKkjD,oBACL,MAEF,IAAK,UACHljD,KAAKmjD,iBACL,MAEF,IAAK,YACHnjD,KAAKojD,mBACL,MAEF,IAAK,QACHpjD,KAAKqjD,eACL,MAEF,IAAK,SACHrjD,KAAKsjD,kBAzCTtjD,KAAKy8C,KAAOA,CACd,CAiDQ,gBAAAwG,G,MACFjjD,KAAKy8C,KAAK8D,6BAA+B,EAAI,EAC/CvgD,KAAKy8C,KAAK8D,8BACsB,QAA9B,EAAAvgD,KAAKy8C,KAAK6E,4BAAoB,eAAE//C,QAAS,GAG7CvB,KAAKy8C,KAAK8D,+BACVvgD,KAAKuiD,4BACP,CAGQ,iBAAAW,G,MAEJljD,KAAKy8C,KAAK8D,6BAA+B,GACX,QAA9B,EAAAvgD,KAAKy8C,KAAK6E,4BAAoB,eAAE//C,QAAS,EAEzCvB,KAAKy8C,KAAK8D,6BAA+B,GAG3CvgD,KAAKy8C,KAAK8D,+BACVvgD,KAAKuiD,4BACP,CAGQ,cAAAY,G,MACFnjD,KAAKy8C,KAAK6D,uBAAyB,EAAI,EACzCtgD,KAAKy8C,KAAK6D,wBAGP,QAFD,EAAAtgD,KAAKy8C,KAAK8C,YACRv/C,KAAKy8C,KAAK6E,qBAAqBthD,KAAKy8C,KAAK8D,sCAC1C,eAAEh/C,QAAS,EAGhBvB,KAAKy8C,KAAK6D,wBACZ,CAGQ,gBAAA8C,G,MAEJpjD,KAAKy8C,KAAK6D,uBAAyB,GAGlC,QAFD,EAAAtgD,KAAKy8C,KAAK8C,YACRv/C,KAAKy8C,KAAK6E,qBAAqBthD,KAAKy8C,KAAK8D,sCAC1C,eAAEh/C,QACD,EAEFvB,KAAKy8C,KAAK6D,uBAAyB,EAGrCtgD,KAAKy8C,KAAK6D,wBACZ,CAGQ,YAAA+C,GACFrjD,KAAKy8C,KAAK0D,kBAAyD,IAAtCngD,KAAKy8C,KAAK6D,uBAEzCtgD,KAAKy8C,KAAK2E,0BAGVphD,KAAKy8C,KAAK+E,gCAEd,CAGQ,aAAA8B,GACNtjD,KAAKy8C,KAAKgF,kBACZ,CAGQ,yBAAAc,G,QAEJviD,KAAKy8C,KAAK6D,wBAGT,QAFD,EAAAtgD,KAAKy8C,KAAK8C,YACRv/C,KAAKy8C,KAAK6E,qBAAqBthD,KAAKy8C,KAAK8D,sCAC1C,eAAEh/C,QACD,IAEFvB,KAAKy8C,KAAK6D,wBAGP,QAFD,EAAAtgD,KAAKy8C,KAAK8C,YACRv/C,KAAKy8C,KAAK6E,qBAAqBthD,KAAKy8C,KAAK8D,sCAC1C,eAAEh/C,QAAS,EAElB,CAGA,cAAAugD,GACE9hD,KAAKy8C,KAAK6D,wBAA0B,EACpCtgD,KAAKy8C,KAAK8D,6BAA+B,CAC3C,E,uHC3IF,mCAME,WAAAzgD,CAAY28C,GAQZ,KAAAz0C,OAAUi1C,IACR,MAAMtiC,EACJsiC,EAAWj9C,KAAKy8C,KAAK4F,oBAAoB3nC,cAAcC,WAAa,GAChEC,EACJqiC,EAAWj9C,KAAKy8C,KAAK4F,oBAAoB3nC,cAAcE,WAAa,GAGtE5a,KAAKy8C,KAAK7uC,MAAQ5N,KAAKujD,uBAAuB5oC,GAC9C3a,KAAKy8C,KAAKv3C,MAAQlF,KAAKujD,uBAAuB3oC,GAG9C5a,KAAKy8C,KAAK2D,qBAAsB,EAEhCpgD,KAAKy8C,KAAK4D,cAAe,EAEzBrgD,KAAKy8C,KAAKrwC,cACR,IAAIC,YAAY,0BAA2B,CACzC1G,OAAQ,CAAEpG,GAAIS,KAAKy8C,KAAK7uC,MAAO1I,MAAOlF,KAAKy8C,KAAKv3C,OAChD6S,SAAS,EACTC,UAAU,MAShB,KAAAmpC,oBAAuBphC,IAErB/f,KAAKy8C,KAAK2D,qBAAsB,EAEhCpgD,KAAKy8C,KAAK4D,cAAe,EAEzBrgD,KAAKy8C,KAAKrwC,cACR,IAAIC,YAAY,oBAAqB,CACnC1G,OAAQoa,EACRhI,SAAS,EACTC,UAAU,KAGdhY,KAAKy8C,KAAKwE,yBAOZ,KAAAN,yBAA4BxhD,IAC1Ba,KAAKgI,OAAO7I,EAAEwG,SAxDd3F,KAAKy8C,KAAOA,CACd,CA+DQ,6BAAA+G,GACN,OAAOxjD,KAAKy8C,KAAK6E,qBAAqB//C,OAAS,CACjD,CAOQ,aAAAkiD,CAAcC,GACpB,OAAOp+C,OAAOo+C,GAAO,IAClB/tB,QAAQ,MAAO,QACfA,QAAQ,KAAM,MACnB,CAgBQ,sBAAA4tB,CAAuB31C,GAC7B,MAAM+1C,EAAe3jD,KAAKyjD,cAAc71C,GAExC,OAAI5N,KAAKwjD,gCAEA,IAAIG,KAGJA,CAEX,E,shDCnHF,mBACA,UAMA,U,qEA6BI3jD,KAAKie,QAAQ,cAAc,GAE3B6F,OAAO/hB,iBAAiB,WAAY,EAAA6hD,oBAAoB1jD,KAAKF,OAC7DA,KAAKqrC,UAAU,aAAcrrC,KAAK6jD,WAAW3jD,KAAKF,MACpD,EAqNW,EAAAC,aAAe,IAlP5B,MAoBE,WAAAH,G,YAnBA,WAAmC,CAAC,GACpC,WAAa,IAAI+S,KACjB,WAAqB,CACnB0O,UAAW,GACXsiC,WAAY,GACZloB,6BAA8B,GAC9BhZ,uBAAwB,CAAC,EACzB7D,QAAS,GACTy0B,cAAe,GACf9E,gBAAiB,EACjBjlB,OAAQ,EACRglB,SAAU,EACVruC,UAAW,YACXqkC,SAAS,EACTsR,YAAY,EACZgO,iBAAiB,EACjBx3C,8BAA+B,CAAC,IAIhC,EAAAtM,KAAI,SAAqB,KAAzBA,KACF,CAUA,OAAAiM,CAAiBjH,GACf,OAAOhF,KAAK+jD,UAAU,EAAA/jD,KAAI,OAAQgF,GACpC,CAGA,OAAAiZ,CAAoCjZ,EAAQ2zB,GAC1C,MAAMD,EAAW,EAAA14B,KAAI,OAAQgF,GAEL,iBAAb2zB,GAAsC,OAAbA,EAS/B5c,EAAEioC,QAAQtrB,EAAUC,KACvB,EAAA34B,KAAI,OAAQgF,GAAOgnB,gBAAgB2M,GACnC34B,KAAK4/B,QAAQ56B,IAVRtF,OAAOukD,GAAGvrB,EAAUC,KACvB,EAAA34B,KAAI,OAAQgF,GAAO2zB,EACnB34B,KAAK4/B,QAAQ56B,GAUnB,CAIA,SAAAqmC,CACErmC,EACA02B,G,MAEK,EAAA17B,KAAI,OAAY2T,IAAI3O,IACvB,EAAAhF,KAAI,OAAYyT,IAAIzO,EAAK,IAAImmB,KAEP,QAAxB,IAAAnrB,KAAI,OAAYiU,IAAIjP,UAAI,SAAEzE,IAAIm7B,EAChC,CAYA,IAAAx7B,CAAc8E,EAAaiM,QACG3B,IAAxB,EAAAtP,KAAI,OAAWgF,GAEjB,EAAAhF,KAAI,OAAWgF,GAAO,CAACiM,GAGvB,EAAAjR,KAAI,OAAWgF,GAAK0F,KAAKuG,EAE7B,CAGA,OAAA2uB,CAAoC56B,G,MACV,QAAxB,IAAAhF,KAAI,OAAYiU,IAAIjP,UAAI,SAAEQ,QAASk2B,GAAaA,EAAS,EAAA17B,KAAI,OAAQgF,KAGjE,EAAAhF,KAAI,OAAWgF,IACjB,EAAAhF,KAAI,OAAWgF,GAAKQ,QAAS5B,IAC3B,MAAMsgD,EAAYlkD,KAAK+jD,UAAU,EAAA/jD,KAAI,OAAQgF,IAChB,mBAAlBpB,EAASoB,GAClBpB,EAASoB,GAAKk/C,GAEd10B,QAAQwmB,KACN,8CACApyC,EACAoB,IAKV,CAGA,SAAA++C,CAAan2C,GACX,OAAc,OAAVA,GAAmC,iBAAVA,EAA2BA,EACjDoe,gBAAgBpe,EACzB,CAMA,UAAAoxB,CAAWmlB,EAAuB36B,GAEhCxpB,KAAKie,QAAQ,mBAAmB,GAEhC,MAAMmmC,EAAiBjhD,MAAMnD,KAAKiM,QAAQ,oBAAoBo4C,KAAK,MAGnErkD,KAAKiM,QAAQ,iBAAiBzG,QAAQ,CAACikB,EAAQxkB,KACzCwkB,IACF26B,EAAen/C,GAASwkB,KAI5B06B,EAAQ3+C,QAAQ,CAACikB,EAAQxkB,KACvBm/C,EAAe56B,EAASvkB,GAASwkB,IAInCzpB,KAAKie,QAAQ,gBAAiBmmC,GAE9BpkD,KAAK4/B,QAAQ,iBAEb5/B,KAAKie,QAAQ,cAAc,GAE3Bje,KAAKie,QAAQ,mBAAmB,EAClC,CAIA,gBAAA0tB,CAAiB1mC,GACf,GAAIjF,KAAKiM,QAAQ,mBAAoB,MAAO,UAC5C,MAAMq4C,EAActkD,KAAKiM,QAAQ,UAAYhH,EAE7C,GAAIq/C,EAAc,EAAAtkD,KAAI,OAAQyuC,gBAAiB,CAC7C,MAAMhlB,EAAS,EAAAzpB,KAAI,OAAQuzC,cAAc+Q,GACzC,OAAI76B,EAAezpB,KAAK+jD,UAAUt6B,KAClC,IAAAkU,eAAc39B,KAAKiM,QAAQ,UAAYhH,GAChC,UACT,CACA,MAAO,cACT,CAGA,iBAAAykB,GACE,YAAgCpa,IAA5B,EAAAtP,KAAI,OAAQupB,YACP,EAAAvpB,KAAI,OAAQuzC,cACjB,EAAAvzC,KAAI,OAAQwpB,OAAS,EAAAxpB,KAAI,OAAQupB,aAG5B,IAEX,CAKM,gBAAA4b,G,wCACJ,IACE,GAA+B,0BAA3BrhB,OAAOf,SAASwhC,OAElB,YADAvkD,KAAKie,QAAQ,WAAW,GAI1B,MAAMq/B,EAAa,IAAInf,gBACjBqmB,EAAYnqC,WAAW,IAAMijC,EAAWvf,QAAS,KAEjDY,QAAiBC,MAAM,GAAG9a,OAAOf,SAASwhC,qBAAsB,CACpEnmB,OAAQkf,EAAWlf,SAClB0B,MAAM,KACP,MAAM,IAAI1gC,MAAM,iCAGlB49B,aAAawnB,GAET7lB,aAAoB8lB,WACE,MAApB9lB,EAASv+B,OACXJ,KAAKie,QAAQ,WAAW,GAExBuR,QAAQwmB,KAAK,kCAAkCrX,EAASv+B,UAG9D,CAAE,MAAOqvB,GACPD,QAAQC,MAAM,8BAA+BA,GAC7CzvB,KAAKie,QAAQ,WAAW,EAC1B,CACF,E,CAMA,UAAA4lC,CAAWjuC,GACT5V,KAAKie,QAAQ,mBAAmB,GAEhC,IASE,OARAje,KAAKie,QAAQ,SAAU,GACvBje,KAAKie,QAAQ,mBAAe3O,GAC5BtP,KAAKie,QAAQ,gBAAiB,IAC9Bje,KAAKie,QAAQ,kBAAmB,GAChCje,KAAKie,QAAQ,WAAY,GAEzBtb,SAASwd,KAAK9e,QAAQwiD,WAAajuC,EAE3BA,GACN,IAAK,UACH,IAAA8uC,qCACA1kD,KAAK4/B,QAAQ,0BACb,MACF,IAAK,WACH,MAAMl6B,EAAY1F,KAAKiM,QAAQ,6BAC/B,IAAA9C,4BAA2BzD,IAC3B,IAAAi/C,uCAKJ3kD,KAAKie,QAAQ,YAAa,cAC1B,IAAA0f,eAAc,GAAG,EACnB,C,QACE39B,KAAKie,QAAQ,mBAAmB,EAClC,CACF,E,oCCxPF,eACE,MAAMoG,EAAe,IAAIugC,gBAAgB9gC,OAAOf,SAASna,QAIzC,aAHAyb,EAAapQ,IAAI,QAI/B,EAAAhU,aAAage,QAAQ,aAAc,YAEnC,EAAAhe,aAAage,QAAQ,aAAc,SAEvC,EAZA,e,i3BCiBA,2BAqDA,oCAEE4mC,EAAiBC,GACjBC,EAA2B,CAAE,CAACF,GAAeC,GAC/C,EA0BA,oCAAyC9/C,G,MACvC,OAAqD,QAA9C,IAAA/E,aAAagM,QAAQ,iCAAyB,eAAGjH,EAC1D,EAGA,0CAA+CA,GAC7C,OAAO,EAAA/E,aACJgM,QAAQ,gCACRoD,KAAM3J,GAAgCA,EAAUnG,KAAOyF,EAC5D,EAGA,sCAmCA,yCACE,MAAM22B,EAA+B,EAAA17B,aAAagM,QAC9C,gCAEF+4C,EAAkB,CAAC,EACrB,IAAK,MAAMt/C,KAAai2B,EACtB,OAAQj2B,EAAU1B,MAChB,IAAK,SACL,IAAK,UACkB,SAAjB0B,EAAUnG,KACZylD,EAAgBt/C,EAAUnG,IAAMmG,EAAUgc,SAC5C,MACF,IAAK,QACH,CACE,MAAMujC,EAAO,CAAC,EACd,IAAK,MAAMn0C,KAAQpL,EAAUiL,MAC3Bs0C,EAAKn0C,EAAKvR,IAAMuR,EAAK4Q,QAEvBsjC,EAAgBt/C,EAAUnG,IAAM0lD,CAClC,EAINF,EAA2BC,EAC7B,EAKA,+BAAoCz9B,GAKlCw9B,EAHkBrqB,EAAG/b,MAAMmF,OAAOf,SAASna,OAAO+xB,UAAU,KAGtB,EACxC,EAIA,sCAA2CuqB,GACzC,EAAAjlD,aAAage,QAAQ,2BAA4BinC,GACjD,EAAAjlD,aAAage,QAAQ,YAAa,aAGlC0mC,KAEA,IAAAhnB,eAAc,GAAG,EACnB,EAEA,wCApMA,mBACA,UACA,UAOA,IAAIlD,EAAoBC,EAAG/b,MAAMmF,OAAOf,SAASna,OAAO+xB,UAAU,IAQlE,SAAgBiB,EACdihB,EAAmD,CAAC,G,QAEpD,MAAMsI,EAA6C,EAAAllD,aAAagM,QAC9D,gCAGIm5C,EAA0C,CAAC,EAC3CC,EAAe,IAAIxyC,IACvBsyC,EAAuBxmD,IAAK+G,GAAc,CAACA,EAAUnG,GAAImG,KAG3D,IAAK,MAAOm/C,EAAcC,KAAmBplD,OAAOk1B,QAClDioB,GACC,CACD,MAAMyI,EAAkBD,EAAapxC,IAAI4wC,GACzC,GAAKS,EAEL,OAAQA,EAAgBthD,MACtB,IAAK,QAAS,CACZ,MAAMuhD,EAAkD,CAAC,EACzD,GAA8B,iBAAnBT,GAAkD,OAAnBA,EACxC,IAAK,MAAOU,EAASC,KAAc/lD,OAAOk1B,QAAQkwB,GAAiB,CAI7DW,KADH,QAFoB,EAAqB,QAArB,EAAAH,EAAgB30C,aAAK,eAAEtB,KACzCyB,GAASA,EAAKvR,KAAOimD,UACvB,eAAE9jC,WAED6jC,EAAeC,GAAWC,EAE9B,CAEE/lD,OAAOD,KAAK8lD,GAAgBhkD,OAAS,IACvC6jD,EAAeP,GAAgBU,GAEjC,KACF,CAEA,IAAK,UACL,IAAK,SAECT,IADiBQ,EAAgB5jC,UAEnC0jC,EAAeP,GAAgBC,GAEjC,MAGN,CAEA,OAAOM,CACT,CAWA,SAASL,EACPG,EACAQ,GAGA,MAAMC,EAAoB,OAAH,UAClB,EAAA1lD,aAAagM,QAAQ,2BAE1BvM,OAAOD,KAAKylD,GAAqB1/C,QAASq/C,IACxCc,EAAkBd,GAAgBK,EAAoBL,KAExD,EAAA5kD,aAAage,QAAQ,yBAA0B0nC,GAG1CD,GAAwD,WAAvC,EAAAzlD,aAAagM,QAAQ,eACzCy4C,IAGF,EAAAzkD,aAAage,QAAQ,YAAa,cAClC,IAAA0f,eAAc,GAAG,EACnB,CAeA,SAAgB+mB,IAEd,MAAM7H,EAAoB,EAAA58C,aAAagM,QAAQ,0BACzCm5C,EAAiBxpB,EAAuBihB,GAGxC+I,EAAc/I,EAAkB98B,MAAQ,GAGH,IAAvCrgB,OAAOD,KAAK2lD,GAAgB7jD,QAAgC,KAAhBqkD,EAC9CnrB,EAAoB,CAClB7kB,KAAM,WAIR6kB,EAAoB,OAAH,QACf7kB,KAAM,UACHwvC,GAIe,KAAhBQ,EACFnrB,EAAkB1a,KAAO6lC,SAElBnrB,EAAkB1a,MAK7B,MAAM8lC,EAAS,GAAG/hC,OAAOf,SAASwhC,SAChCzgC,OAAOf,SAAS+iC,YACdprB,EAAG1b,UAAUyb,KACjB3W,OAAOiiC,QAAQC,UAAUvrB,EAAmB,GAAIorB,EAClD,CAmDA,SAAgBlB,IACdlqB,EAAkB7kB,KAAO,WACzBkO,OAAOiiC,QAAQC,UACbvrB,EACA,GACA,GAAG3W,OAAOf,SAASwhC,SAASzgC,OAAOf,SAAS+iC,yBAEhD,CA/LAzrC,WAAW,MAkMX,WACE,MAAMgK,EAAe,IAAIugC,gBAAgB9gC,OAAOf,SAASna,QAIzC,aAHAyb,EAAapQ,IAAI,QAI/B,EAAAhU,aAAage,QAAQ,aAAc,YAEnC,EAAAhe,aAAage,QAAQ,aAAc,SAEvC,CA3MEgoC,IACC,I","sources":["webpack://togo_var/./app/frontend/assets/ lazy ^\\.\\/.*\\/karyotype\\.tsv$ namespace object","webpack://togo_var/./app/frontend/src/classes/ActivityIndicator.js","webpack://togo_var/./app/frontend/src/classes/ConditionGroupView.js","webpack://togo_var/./app/frontend/src/classes/AdvancedSearchToolbar.js","webpack://togo_var/./app/frontend/src/classes/AdvancedSearchSelection.js","webpack://togo_var/./app/frontend/src/classes/AdvancedSearchBuilderView.js","webpack://togo_var/./app/frontend/src/classes/ChromosomeView.js","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditor.js","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorCheckboxes.js","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorColumns.js","webpack://togo_var/./app/frontend/src/components/ErrorModal.js","webpack://togo_var/./app/frontend/src/components/ConditionDiseaseSearch/flipColumn.js","webpack://togo_var/./app/frontend/src/components/ConditionDiseaseSearch/ConditionDiseaseSearchOntologyCard.js","webpack://togo_var/./app/frontend/src/components/ConditionDiseaseSearch/ConditionDiseaseSearchColumn.js","webpack://togo_var/./app/frontend/src/components/ConditionDiseaseSearch/ConditionDiseaseSearchOntologyView.js","webpack://togo_var/./app/frontend/src/components/ConditionDiseaseSearch/ConditionDiseaseSearch.js","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorDisease.js","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorGene.js","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorLocation.js","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorVariantID.js","webpack://togo_var/./app/frontend/src/classes/ConditionView.js","webpack://togo_var/./app/frontend/src/classes/Configuration.js","webpack://togo_var/./app/frontend/src/classes/DownloadButton.js","webpack://togo_var/./app/frontend/src/classes/Karyotype.js","webpack://togo_var/./app/frontend/src/classes/ModuleTabsView.js","webpack://togo_var/./app/frontend/src/classes/PanelView.js","webpack://togo_var/./app/frontend/src/classes/PanelViewCheckList.js","webpack://togo_var/./app/frontend/src/classes/PanelViewFilterAlternativeAlleleFrequency.js","webpack://togo_var/./app/frontend/src/classes/CollapseView.js","webpack://togo_var/./app/frontend/src/classes/PanelViewFilterConsequence.js","webpack://togo_var/./app/frontend/src/classes/PanelViewFilterVariantCallingQuality.js","webpack://togo_var/./app/frontend/src/classes/PanelViewPreviewAlternativeAlleleFrequencies.js","webpack://togo_var/./app/frontend/src/classes/PanelViewPreviewClinicalSignificance.js","webpack://togo_var/./app/frontend/src/classes/PanelViewPreviewConsequence.js","webpack://togo_var/./app/frontend/src/classes/PanelViewPreviewExternalLinks.js","webpack://togo_var/./app/frontend/src/classes/PanelViewPreviewGene.js","webpack://togo_var/./app/frontend/src/classes/PreviewToVariantReport.js","webpack://togo_var/./app/frontend/src/classes/SideBar.js","webpack://togo_var/./app/frontend/src/classes/TippyBox.js","webpack://togo_var/./app/frontend/src/classes/TopPageLayoutManager.js","webpack://togo_var/./app/frontend/src/components/ConditionPathogenicityPredictionSearch/PredictionDatasets.js","webpack://togo_var/./app/frontend/stylesheets/object/component/prediction-range-slider.scss","webpack://togo_var/./app/frontend/src/components/ConditionPathogenicityPredictionSearch/PredictionRangeSliderView.js","webpack://togo_var/./app/frontend/stylesheets/object/component/prediction-value-view.scss","webpack://togo_var/./app/frontend/src/components/ConditionPathogenicityPredictionSearch/PredictionValueView.js","webpack://togo_var/./app/frontend/stylesheets/object/component/tab-view.scss","webpack://togo_var/./app/frontend/src/components/ConditionPathogenicityPredictionSearch/TabView.js","webpack://togo_var/./app/frontend/src/components/ConditionPathogenicityPredictionSearch/createGradientSlider.js","webpack://togo_var/./app/frontend/src/components/ConditionPathogenicityPredictionSearch/setInequalitySign.js","webpack://togo_var/./app/frontend/src/components/LogarithmizedBlockGraphFrequencyView.js","webpack://togo_var/./app/frontend/src/components/RangeSliderView.js","webpack://togo_var/./app/frontend/src/definition.js","webpack://togo_var/./app/frontend/src/home.js","webpack://togo_var/./app/frontend/src/utils/cachedAxios.js","webpack://togo_var/./app/frontend/src/utils/capitalizeFirstLetter.js","webpack://togo_var/./app/frontend/src/utils/debounce.js","webpack://togo_var/./app/frontend/src/utils/keyDownEvent.js","webpack://togo_var/./app/frontend/assets/GRCh37/search_conditions.json","webpack://togo_var/./app/frontend/assets/GRCh38/search_conditions.json","webpack://togo_var/./app/frontend/assets/tooltips.json","webpack://togo_var/./app/frontend/stylesheets/object/component/condition-item-value-view.scss","webpack://togo_var/./app/frontend/stylesheets/object/component/frequency-count-value-view.scss","webpack://togo_var/./app/frontend/stylesheets/object/component/search-field-suggestions-list.scss","webpack://togo_var/./app/frontend/stylesheets/object/component/search-field-with-suggestions.scss","webpack://togo_var/./app/frontend/stylesheets/object/component/search-field.scss","webpack://togo_var/./app/frontend/stylesheets/object/component/simple-search-button.scss","webpack://togo_var/./app/frontend/stylesheets/object/component/simple-search-examples.scss","webpack://togo_var/./app/frontend/stylesheets/object/component/simple-search-view.scss","webpack://togo_var/./app/frontend/src/api/fetchData.ts","webpack://togo_var/./app/frontend/src/classes/ConditionItemView.ts","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorClinicalSignificance.ts","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorColumnsDataset.ts","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorFrequencyCount.ts","webpack://togo_var/./app/frontend/src/classes/ConditionValueEditorPathogenicityPrediction.ts","webpack://togo_var/./app/frontend/src/classes/ConditionValues.ts","webpack://togo_var/./app/frontend/src/classes/Results/ResultsRowTemplates.ts","webpack://togo_var/./app/frontend/src/classes/Results/ResultsRowUpdaters.ts","webpack://togo_var/./app/frontend/src/classes/Results/ResultsRowView.ts","webpack://togo_var/./app/frontend/src/classes/Results/ResultsScrollBar.ts","webpack://togo_var/./app/frontend/src/classes/Results/ResultsView.ts","webpack://togo_var/./app/frontend/src/classes/Results/ResultsViewDataManager.ts","webpack://togo_var/./app/frontend/src/classes/Results/ResultsViewTouchHandler.ts","webpack://togo_var/./app/frontend/src/components/ConditionItemValueView.ts","webpack://togo_var/./app/frontend/src/components/FrequencyCountValueView.ts","webpack://togo_var/./app/frontend/src/components/SearchField/SearchField.ts","webpack://togo_var/./app/frontend/src/components/SearchField/SimpleSearch/SimpleSearchButton.ts","webpack://togo_var/./app/frontend/src/components/SearchField/SimpleSearch/SimpleSearchConstants.ts","webpack://togo_var/./app/frontend/src/components/SearchField/SimpleSearch/SimpleSearchController.ts","webpack://togo_var/./app/frontend/src/components/SearchField/SimpleSearch/SimpleSearchEventHandlers.ts","webpack://togo_var/./app/frontend/src/components/SearchField/SimpleSearch/SimpleSearchExamples.ts","webpack://togo_var/./app/frontend/src/components/SearchField/SimpleSearch/SimpleSearchView.ts","webpack://togo_var/./app/frontend/src/components/SearchField/scrollIntoView.ts","webpack://togo_var/./app/frontend/src/components/SearchField/suggestions/SearchFieldSuggestionsList.ts","webpack://togo_var/./app/frontend/src/components/SearchField/suggestions/SearchFieldWithSuggestions.ts","webpack://togo_var/./app/frontend/src/components/SearchField/suggestions/handlers/InputEventHandler.ts","webpack://togo_var/./app/frontend/src/components/SearchField/suggestions/handlers/SearchFieldController.ts","webpack://togo_var/./app/frontend/src/components/SearchField/suggestions/handlers/SuggestionKeyboardHandler.ts","webpack://togo_var/./app/frontend/src/components/SearchField/suggestions/handlers/SuggestionSelectionHandler.ts","webpack://togo_var/./app/frontend/src/store/StoreManager.ts","webpack://togo_var/./app/frontend/src/store/initializeApp.ts","webpack://togo_var/./app/frontend/src/store/searchManager.ts"],"sourcesContent":["var map = {\n\t\"./GRCh37/karyotype.tsv\": [\n\t\t1298,\n\t\t298\n\t],\n\t\"./GRCh38/karyotype.tsv\": [\n\t\t1,\n\t\t1\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 550;\nmodule.exports = webpackAsyncContext;","import { storeManager } from '../store/StoreManager';\n\nexport default class ActivityIndicator {\n  constructor(elm) {\n    this.elm = elm;\n    storeManager.bind('appStatus', this);\n  }\n\n  appStatus(status) {\n    switch (status) {\n      case 'searching':\n        this.elm.classList.remove('-hidden');\n        break;\n      default:\n        this.elm.classList.add('-hidden');\n        break;\n    }\n  }\n}\n","import ConditionView from './ConditionView.js';\nimport ConditionItemView from './ConditionItemView';\nimport { CONDITION_ITEM_TYPE } from '../definition.js';\n\nexport default class ConditionGroupView extends ConditionView {\n  /**\n   *\n   * @param {AdvancedSearchBuilderView} builder\n   * @param {*} parentView\n   * @param {String} logicalOperator\n   * @param {Array} conditionViews\n   * @param {Node} referenceElm\n   * @param {Boolean} isRoot\n   */\n  constructor(\n    builder,\n    parentView,\n    logicalOperator = 'and',\n    conditionViews = [],\n    referenceElm = null,\n    isRoot = false\n  ) {\n    super(CONDITION_ITEM_TYPE.group, builder, parentView, referenceElm);\n\n    // make HTML\n    this._elm.classList.add('advanced-search-condition-group-view');\n    this._isRoot = isRoot;\n    if (isRoot) this._elm.classList.add('-root');\n    this._elm.dataset.numberOfChild = conditionViews.length;\n    this._elm.innerHTML = `<div class=\"logical-operator-switch\"></div>\n    <div class=\"container\"></div>`;\n\n    // reference\n    this._logicalOperatorSwitch = this._elm.querySelector(\n      ':scope > .logical-operator-switch'\n    );\n    this._container = this._elm.querySelector(':scope > .container');\n\n    // contents\n    for (const conditionView of conditionViews) {\n      this._container.append(conditionView.elm);\n      conditionView.parentView = this;\n    }\n\n    // logical operator\n    this._logicalOperatorSwitch.dataset.operator = logicalOperator;\n\n    // events\n    // select/deselect\n    if (!isRoot)\n      this._elm.addEventListener('click', this._toggleSelecting.bind(this));\n    // switch logical operator\n    this._logicalOperatorSwitch.addEventListener('click', (e) => {\n      e.stopImmediatePropagation();\n      this._logicalOperatorSwitch.dataset.operator = { and: 'or', or: 'and' }[\n        this._logicalOperatorSwitch.dataset.operator\n      ];\n      this._doneEditing();\n    });\n    // mutation\n    this._mutationObserver = this._defineObserveConditions();\n  }\n\n  _doneEditing() {\n    this._builder.changeCondition();\n  }\n\n  // public methods\n\n  maketToolbar() {\n    const toolbar = document.createElement('nav');\n    this._elm.append(toolbar);\n    return toolbar;\n  }\n\n  /**\n   *\n   * @param {String} conditionType\n   */\n  addNewConditionItem(conditionType, options, referenceElm = null) {\n    const conditionView = new ConditionItemView(\n      this._builder,\n      this,\n      conditionType,\n      options,\n      referenceElm\n    );\n    return conditionView;\n  }\n\n  /**\n   *\n   * @param {Array} conditionViews\n   * @param {Node} referenceElm\n   */\n  addNewConditionGroup(conditionViews, referenceElm) {\n    const conditionGroupView = new ConditionGroupView(\n      this._builder,\n      this,\n      'or',\n      conditionViews,\n      referenceElm\n    );\n    return conditionGroupView;\n  }\n\n  /**\n   *\n   */\n  ungroup() {\n    const conditionViews = Array.from(\n      this._container.querySelectorAll(\n        ':scope > .advanced-search-condition-view'\n      )\n    );\n    this.parentView.addConditionViews(conditionViews, this.elm);\n    this.remove();\n  }\n\n  /**\n   *\n   * @param {Array} conditionViews\n   * @param {Node} referenceElm\n   */\n  addConditionViews(conditionViews, referenceElm) {\n    for (const view of conditionViews) {\n      this._container.insertBefore(view, referenceElm);\n    }\n  }\n\n  /**\n   *\n   * @param {ConditionItemView | ConditionGroupView} conditionView\n   */\n  removeConditionView(conditionView) {\n    this._container.removeChild(conditionView.elm);\n  }\n\n  remove() {\n    this._mutationObserver.disconnect();\n    super.remove();\n  }\n\n  // select() {\n  //   // this._elm.classList\n  // }\n\n  // deselect() {\n\n  // }\n\n  // private methods\n\n  _defineObserveConditions() {\n    const config = { attributes: false, childList: true, subtree: false };\n    const callback = function (mutationsList) {\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n          const numberOfChild = this._numberOfChild;\n          this._elm.dataset.numberOfChild = numberOfChild;\n          // if the number of child is less than 2, ungroup\n          if (!this._isRoot && numberOfChild <= 1) this.ungroup();\n        }\n      }\n    };\n    const observer = new MutationObserver(callback.bind(this));\n    observer.observe(this._container, config);\n    return observer;\n  }\n\n  // accessor\n\n  get query() {\n    const children = Array.from(\n      this._container.querySelectorAll(\n        ':scope > .advanced-search-condition-view'\n      )\n    );\n    switch (this._numberOfChild) {\n      case 0:\n        return {};\n      case 1:\n        return children[0].delegate.query;\n      default:\n        return {\n          [this._logicalOperatorSwitch.dataset.operator]: children.map(\n            (el) => el.delegate.query\n          ),\n        };\n    }\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  get childViews() {\n    return Array.from(this._container.childNodes).map((el) => el.delegate);\n  }\n\n  get _numberOfChild() {\n    return this._container.querySelectorAll(\n      ':scope > .advanced-search-condition-view'\n    ).length;\n  }\n}\n","import { ADVANCED_CONDITIONS } from '../global.js';\n\nexport default class AdvancedSearchToolbar {\n  constructor(delegate, toolbar) {\n    this._delegate = delegate;\n\n    toolbar.classList.add('advanced-search-toolbar');\n\n    // make HTML\n    const COMMANDS = [\n      {\n        command: 'group',\n        label: 'Group',\n        shortcut: [71],\n      },\n      {\n        command: 'ungroup',\n        label: 'Ungroup',\n        shortcut: [16, 71],\n      },\n      // {\n      //   command: 'copy',\n      //   label: 'Copy',\n      //   shortcut: [67]\n      // },\n      // {\n      //   command: 'edit',\n      //   label: 'Edit',\n      //   shortcut: [69]\n      // },\n      {\n        command: 'delete',\n        label: 'Delete',\n        shortcut: [46],\n      },\n    ];\n\n    toolbar.innerHTML = `\n    <ul>\n      <li class=\"-haschild\">\n        <p>Add condition</p>\n        <ul>\n          ${Object.keys(ADVANCED_CONDITIONS)\n            .map(\n              (key, index) => `\n          <li class=\"command\" data-command=\"add-condition\" data-condition=\"${key}\" data-shortcut=\"${\n                index + 1\n              }\">\n            <p>${ADVANCED_CONDITIONS[key].label}</p>\n            <small class=\"shortcut\"><span class=\"char -command\"></span>${\n              index + 1\n            }</small>\n          </li>\n          `\n            )\n            .join('')}\n        </ul>\n      </li>\n      ${COMMANDS.map(\n        (command) => `\n      <li class=\"command\" data-command=\"${command.command}\">\n        <p>${\n          command.label\n        }<small class=\"shortcut\"><span class=\"char -command\"></span>${String.fromCharCode(\n          ...command.shortcut\n        )}</small></p>\n      </li>\n      `\n      ).join('')}\n     \n    </ul>\n    `;\n\n    // references\n\n    // events\n    toolbar.querySelectorAll('.command').forEach((command) => {\n      command.addEventListener('click', (e) => {\n        e.stopImmediatePropagation();\n        switch (command.dataset.command) {\n          case 'add-condition':\n            this._delegate.addCondition(command.dataset.condition, e.detail);\n            break;\n          case 'group':\n            this._delegate.group();\n            break;\n          case 'ungroup':\n            this._delegate.ungroup();\n            break;\n          case 'copy':\n            this._delegate.copy();\n            break;\n          case 'edit':\n            this._delegate.edit();\n            break;\n          case 'delete':\n            this._delegate.delete();\n            break;\n        }\n      });\n    });\n  }\n\n  // public methods\n\n  canSearch(can) {\n    if (can) this._searchButton.classList.remove('-disabled');\n    else this._searchButton.classList.add('-disabled');\n  }\n}\n","import SelectionArea from '@simonwep/selection-js';\n// import AdvancedSearchBuilderView from './AdvancedSearchBuilderView';\n\nexport default class AdvancedSearchSelection {\n  /**\n   *\n   * @param {*} area\n   * @param {AdvancedSearchBuilderView} builder\n   */\n  constructor(area, builder) {\n    this._builder = builder;\n    this._selectionArea = new SelectionArea({\n      class: 'selection-area',\n      boundaries: ['#AdvancedSearchBuilderView'],\n      selectables: [\n        '#AdvancedSearchBuilderView > .inner > .advanced-search-condition-group-view.-root > .container .advanced-search-condition-group-view',\n        '#AdvancedSearchBuilderView > .inner > .advanced-search-condition-group-view.-root > .container .advanced-search-condition-item-view',\n      ],\n      startareas: ['html'],\n      overlap: 'invert',\n      singleTap: { allow: false },\n    });\n    this._selectionArea.disable();\n\n    /*\n    this._selectionArea\n      // .on('beforestart', ({store, event}) => {\n      //   console.log(store)\n      // })\n      .on('start', ({store, event}) => {\n        document.body.dataset.dragging = true;\n        if (!event.ctrlKey && !event.metaKey) {\n          // Unselect all elements\n          this.deselectAllConditions();\n        }\n      })\n      .on('move', ({store: {changed: {added, removed}}}) => {\n        // Add a custom class to the elements that where selected.\n        for (const el of added) {\n          el.delegate.select();\n        }\n        // Remove the class from elements that where removed\n        // since the last selection\n        for (const el of removed) {\n          el.delegate.deselect();\n        }\n      })\n      .on('stop', (e) => {\n        console.log(e)\n        document.body.dataset.dragging = false;\n        this._selectionArea.keepSelection();\n        console.log(...this._selectionArea.getSelection())\n        // filter only top-level items\n        const minDepth = this._selectionArea.getSelection().reduce((minDepth, el) => {\n          const depth = el.delegate.depth;\n          return minDepth > depth ? depth : minDepth;\n        }, 9999);\n        ([...this._selectionArea.getSelection()]).forEach(el => {\n          const depth = el.delegate.depth;\n          if (depth > minDepth) this._selectionArea.deselect(el);\n        });\n        console.log(...this._selectionArea.getSelection())\n        this._builder.selectedConditionViews(e.store.selected.map(el => el.delegate));\n      });\n    */\n  }\n\n  // public methods\n\n  getSelectingConditionViews() {\n    const conditionEls = this._selectionArea.getSelection();\n    if (conditionEls.length > 0) {\n      // sort\n      const siblingEls = Array.from(conditionEls[0].parentNode.childNodes);\n      conditionEls.sort(\n        (el1, el2) => siblingEls.indexOf(el1) - siblingEls.indexOf(el2)\n      );\n    }\n    return conditionEls.map((el) => el.delegate);\n  }\n\n  deselectAllConditions() {\n    for (const el of this._selectionArea.getSelection()) {\n      el.delegate.deselect();\n    }\n    this._selectionArea.clearSelection();\n  }\n\n  /**\n   * @param {Array} conditionViews\n   * @param {Boolean} deselectSelecting\n   */\n  selectConditionView(conditionView, deselectSelecting = true) {\n    if (deselectSelecting) this.deselectAllConditions();\n\n    // checks if an already selected element is a sibling element\n    const existingConditionViews = this.getSelectingConditionViews();\n    const siblings = conditionView.siblingElms;\n    existingConditionViews.forEach((view) => {\n      if (siblings.indexOf(view.elm) === -1) this.deselectConditionView(view);\n    });\n\n    conditionView.select();\n    this._selectionArea.select(conditionView.elm);\n    this._selectionArea.keepSelection();\n    this._builder.selectedConditionViews(\n      this._selectionArea.getSelection().map((el) => el.delegate)\n    );\n  }\n\n  deselectConditionView(conditionView) {\n    conditionView.deselect();\n    this._selectionArea.deselect(conditionView.elm);\n    this._builder.selectedConditionViews(\n      this._selectionArea.getSelection().map((el) => el.delegate)\n    );\n  }\n\n  // private methods\n}\n","import { setAdvancedSearchCondition } from '../store/searchManager';\nimport ConditionGroupView from './ConditionGroupView.js';\nimport AdvancedSearchToolbar from './AdvancedSearchToolbar.js';\nimport AdvancedSearchSelection from './AdvancedSearchSelection.js';\n// import {ADVANCED_CONDITIONS} from '../global.js';\n// import {API_URL} from \"../global.js\";\nimport { CONDITION_ITEM_TYPE } from '../definition.js';\n\nexport default class AdvancedSearchBuilderView {\n  constructor(elm) {\n    this._elm = elm;\n    this._container = elm.querySelector(':scope > .inner');\n    this._rootGroup = new ConditionGroupView(this, this, 'and', [], null, true);\n\n    // toolbar\n    this._toolbar = new AdvancedSearchToolbar(\n      this,\n      this._rootGroup.maketToolbar()\n    );\n\n    // events\n    // storeManager.bind('advancedSearchConditions', this);\n    this._defineEvents();\n\n    // select conditions\n    this._selection = new AdvancedSearchSelection(this._rootGroup.elm, this);\n  }\n\n  // public methods\n\n  // advancedSearchConditions(values) {\n  //   console.log(values);\n  // }\n\n  /**\n   *\n   * @param {Array} conditionViews\n   */\n  selectedConditionViews(conditionViews) {\n    // change status\n    let canUngroup = false;\n    let canCopy = false;\n    if (conditionViews.length === 1) {\n      canUngroup = conditionViews[0].type === CONDITION_ITEM_TYPE.group;\n      canCopy = conditionViews[0].type === CONDITION_ITEM_TYPE.condition;\n    }\n    // can delete\n    this._elm.dataset.canDelete = conditionViews.length > 0;\n    // can group\n    this._elm.dataset.canGroup =\n      conditionViews.length > 1 &&\n      conditionViews[0].siblingElms.length > conditionViews.length;\n    // can ungroup\n    this._elm.dataset.canUngroup = canUngroup;\n    // can copy\n    this._elm.dataset.canCopy = canCopy;\n    // can edit\n    // TODO:\n  }\n\n  // deselectedConditions(conditions) {\n  //   console.log(conditions)\n  // }\n\n  // addConditions(conditions) {\n\n  // }\n\n  // removeConditions(conditions) {\n\n  // }\n\n  changeCondition() {\n    const query = this._rootGroup.query;\n    this.search();\n  }\n\n  group() {\n    const conditionViews = this._selection.getSelectingConditionViews();\n    const parentGroupView = conditionViews[0].parentView;\n    // insert position\n    const siblingViews = parentGroupView.childViews;\n    let position = Infinity,\n      referenceElm = null;\n    conditionViews.forEach((view) => {\n      const index = siblingViews.indexOf(view);\n      if (index < position) {\n        position = index;\n        referenceElm = view.elm;\n      }\n    });\n    // add new gropu\n    const conditionGroupView = parentGroupView.addNewConditionGroup(\n      conditionViews,\n      referenceElm\n    );\n    this._selection.selectConditionView(conditionGroupView, true);\n    this.changeCondition();\n  }\n\n  ungroup() {\n    const conditionViews = this._selection.getSelectingConditionViews();\n    // deselect selecting group\n    conditionViews.forEach((conditionView) => {\n      this._selection.deselectConditionView(conditionView);\n    });\n    // ungroup\n    conditionViews[0].ungroup();\n    this.changeCondition();\n  }\n\n  // copy() {\n  //   console.log('_copy')\n  //   const selectingConditionViews = this._selection.getSelectingConditionViews();\n  //   // TODO:\n  //   this.changeCondition();\n  // }\n\n  // edit() {\n  //   console.log('_edit')\n  //   this.changeCondition();\n  // }\n\n  /**\n   *\n   * @param {Array<ConditionView>} views\n   */\n  delete(views) {\n    const conditionViews =\n      views ?? this._selection.getSelectingConditionViews();\n    for (const view of conditionViews) {\n      view.remove();\n      this._selection.deselectConditionView(view);\n    }\n    this.changeCondition();\n  }\n\n  search() {\n    const query = this._rootGroup.query;\n\n    setAdvancedSearchCondition(query);\n  }\n\n  // add search condition to the currently selected layer\n  addCondition(conditionType, options) {\n    // get selecting condition\n    const selectingConditionViews =\n      this._selection.getSelectingConditionViews();\n    const selectingConditionView =\n      selectingConditionViews.length > 0\n        ? selectingConditionViews[0]\n        : this._rootGroup;\n\n    // release exist conditions\n    this._selection.deselectAllConditions();\n\n    // add\n    switch (selectingConditionView.type) {\n      case CONDITION_ITEM_TYPE.condition:\n        // TODO: コンディションを選択していた場合に、その後ろに新規条件を追加\n        break;\n      case CONDITION_ITEM_TYPE.group:\n        selectingConditionView.addNewConditionItem(conditionType, options);\n        break;\n    }\n  }\n\n  // private methods\n\n  _defineEvents() {\n    let downX, downY;\n    this._elm.addEventListener('mousedown', (e) => {\n      [downX, downY] = [e.x, e.y];\n    });\n    this._elm.addEventListener('click', (e) => {\n      if (Math.abs(downX - e.x) > 2 || Math.abs(downY - e.y) > 2) return;\n      e.stopImmediatePropagation();\n      this._selection.deselectAllConditions();\n    });\n  }\n\n  // accessor\n\n  get elm() {\n    return this._elm;\n  }\n\n  get container() {\n    return this._container;\n  }\n\n  get selection() {\n    return this._selection;\n  }\n}\n","import { storeManager } from '../store/StoreManager';\nimport { setSimpleSearchCondition } from '../store/searchManager';\n\nconst WIDTH = 12;\nconst PADDING = 5;\n\nexport default class ChromosomeView {\n  /* @param elm:HTMLElement\n   * @param no:Number Chromosome number\n   * @param map:Array Position data\n   * @param maxLength:Number Max length of chromosomes\n   */\n  constructor(elm, no, map, maxLength) {\n    //return;\n    this._no = no;\n    this._map = map;\n    this._elm = elm;\n\n    this._elm.innerHTML = `\n      <div class=\"upper\">\n        <p class=\"no\">${this._no}</p>\n      </div>\n      <div class=\"lower\">\n        <div class=\"selectedregion\"></div>\n        <div class=\"filteredregion\"></div>\n        <svg class=\"chromosome\"></svg>\n        <div class=\"displayregion\"></div>\n      </div>\n    `;\n\n    // 参照\n    this._filteredRegion = this._elm.querySelector('.lower > .filteredregion'); // TODO: フィルターで得られた範囲\n    this._displayRegion = this._elm.querySelector('.lower > .displayregion'); // 表示領域\n    this._selectedRegion = this._elm.querySelector('.lower > .selectedregion'); // 検索条件に region がある場合\n\n    // 粒度の粗いマップ\n    const lowMap = map.reduce((acc, subBand) => {\n      if (acc.length === 0 || acc[acc.length - 1].band !== subBand.band) {\n        acc.push({\n          band: subBand.band,\n          start: subBand.start,\n          end: subBand.end,\n        });\n        return acc;\n      } else {\n        acc[acc.length - 1].end = subBand.end;\n        return acc;\n      }\n    }, []);\n\n    // 染色体の描画\n    this._length = map[map.length - 1].end;\n    this._svg = this._elm.querySelector('svg.chromosome');\n    const chromosomeAreaHeight =\n        elm.offsetHeight -\n        elm.querySelector('.upper').offsetHeight -\n        PADDING * 2,\n      chromosomeHeight = chromosomeAreaHeight * (this._length / maxLength),\n      rate = chromosomeHeight / this._length;\n    this._svg.style.height = `${chromosomeHeight + PADDING * 2}px`;\n    let html = `\n      <defs>\n        <lineargradient id=\"chromosome-gneg\">\n          <stop offset=\"0\" stop-color=\"#A6A6A6\"/>\n          <stop offset=\"0.33\" stop-color=\"#FFFFFF\"/>\n          <stop offset=\"0.67\" stop-color=\"#FFFFFF\"/>\n          <stop offset=\"1\" stop-color=\"#A6A6A6\"/>\n        </lineargradient>\n        <lineargradient id=\"chromosome-gpos25\">\n          <stop offset=\"0\" stop-color=\"#B39BB3\"/>\n          <stop offset=\"0.33\" stop-color=\"#EDCEED\"/>\n          <stop offset=\"0.67\" stop-color=\"#EDCEED\"/>\n          <stop offset=\"1\" stop-color=\"#B39BB3\"/>\n        </lineargradient>\n        <lineargradient id=\"chromosome-gpos50\">\n          <stop offset=\"0\" stop-color=\"#AB78AB\"/>\n          <stop offset=\"0.33\" stop-color=\"#DA9CDA\"/>\n          <stop offset=\"0.67\" stop-color=\"#DA9CDA\"/>\n          <stop offset=\"1\" stop-color=\"#AB78AB\"/>\n        </lineargradient>\n        <lineargradient id=\"chromosome-gpos75\">\n          <stop offset=\"0\" stop-color=\"#9C539C\"/>\n          <stop offset=\"0.33\" stop-color=\"#C86BC8\"/>\n          <stop offset=\"0.67\" stop-color=\"#C86BC8\"/>\n          <stop offset=\"1\" stop-color=\"#9C539C\"/>\n        </lineargradient>\n        <lineargradient id=\"chromosome-gpos100\">\n          <stop offset=\"0\" stop-color=\"#8F2B8F\"/>\n          <stop offset=\"0.33\" stop-color=\"#B53AB5\"/>\n          <stop offset=\"0.67\" stop-color=\"#B53AB5\"/>\n          <stop offset=\"1\" stop-color=\"#8F2B8F\"/>\n        </lineargradient>\n        <lineargradient id=\"chromosome-stalk\">\n          <stop offset=\"0\" stop-color=\"#6e6e6e\"/>\n          <stop offset=\"0.33\" stop-color=\"#8F8F8F\"/>\n          <stop offset=\"0.67\" stop-color=\"#8F8F8F\"/>\n          <stop offset=\"1\" stop-color=\"#6e6e6e\"/>\n        </lineargradient>\n        <lineargradient id=\"chromosome-acen\">\n          <stop offset=\"0\" stop-color=\"#383838\"/>\n          <stop offset=\"0.33\" stop-color=\"#444444\"/>\n          <stop offset=\"0.67\" stop-color=\"#444444\"/>\n          <stop offset=\"1\" stop-color=\"#383838\"/>\n        </lineargradient>\n      </defs>\n    `;\n\n    // draw subbands (drawing area)\n    for (const subBand of this._map) {\n      html += `\n      <g\n        class=\"subband\"\n        data-band=\"${subBand.band}\"\n        data-sub-band=\"${subBand.subBand}\"\n        data-start=\"${subBand.start}\"\n        data-end=\"${subBand.end}\"\n        >\n        <title>${subBand.subBand}</title>\n        <rect\n          class=\"subbandrect ${subBand.stainType}\"\n          x=\"0\"\n          y=\"${Math.floor(PADDING + subBand.start * rate)}\"\n          height=\"${Math.ceil((subBand.end - subBand.start) * rate)}\"\n          width=\"${WIDTH}\"\n        />\n      </g>`;\n    }\n\n    // draw bands (text area)\n    for (const band of lowMap) {\n      html += `\n      <g\n        class=\"band\"\n        data-band=\"${band.band}\"\n        data-start=\"${band.start}\"\n        data-end=\"${band.end}\"\n        transform=\"translate(${WIDTH + 4.5}, ${\n        PADDING + band.start * rate - 0.5\n      })\"\n        >\n        <text x=\"8\" y=\"${\n          (band.end - band.start) * rate * 0.5 + 3\n        }\" class=\"bandtext\">${band.band}</text>\n        <path d=\"M0,1 V${(band.end - band.start) * rate - 1} M0,${Math.round(\n        (band.end - band.start) * rate * 0.5\n      )} H8\" class=\"line\" />\n      </g>\n      `;\n    }\n    this._svg.innerHTML = html + '</g>';\n\n    // event\n    storeManager.bind('displayingRegionsOnChromosome', this);\n\n    // whole\n    this._elm\n      .querySelector(':scope > .upper > .no')\n      .addEventListener('click', () => {\n        this._selectBand(this._no, 1, this._length);\n      });\n\n    // sub bands\n    this._subbands = Array.from(this._svg.querySelectorAll('g.subband'));\n    this._subbands.forEach((subband) => {\n      subband.addEventListener('click', () => {\n        this._selectBand(this._no, subband.dataset.start, subband.dataset.end);\n      });\n    });\n\n    // bands\n    this._bands = this._svg.querySelectorAll('g.band');\n    this._bands.forEach((band) => {\n      if (band.dataset.start) {\n        const [start, end] = [+band.dataset.start, +band.dataset.end];\n        const includesSubbands = this._subbands.filter(\n          (subband) =>\n            start <= +subband.dataset.start && +subband.dataset.end <= end\n        );\n        band.addEventListener('click', () => {\n          this._selectBand(this._no, band.dataset.start, band.dataset.end);\n        });\n        band.addEventListener('mouseenter', () => {\n          includesSubbands.forEach((subband) =>\n            subband.classList.add('-hover')\n          );\n        });\n        band.addEventListener('mouseleave', () => {\n          includesSubbands.forEach((subband) =>\n            subband.classList.remove('-hover')\n          );\n        });\n      }\n    });\n\n    this._svg.querySelector;\n  }\n\n  _selectBand(chr, start, end) {\n    switch (storeManager.getData('searchMode')) {\n      case 'simple':\n        setSimpleSearchCondition('term', `${chr}:${start}-${end}`);\n        break;\n      case 'advanced':\n        document\n          .getElementById('AdvancedSearchBuilderView')\n          .querySelector(\n            ':scope > .inner > .advanced-search-condition-group-view.-root > .advanced-search-toolbar > ul > li > ul > li[data-condition=\"location\"]'\n          )\n          .dispatchEvent(\n            new CustomEvent('click', { detail: { chr, start, end } })\n          );\n\n        break;\n    }\n    // Karyotype 上の座標編集フィールドが廃止になったため、不要\n    //storeManager.setData('region__', {\n    //  chromosome: this._no,\n    //  start: e.delegateTarget.dataset.start,\n    //  end: e.delegateTarget.dataset.end\n    //});\n  }\n\n  displayingRegionsOnChromosome(displayingRegions) {\n    if (displayingRegions[this._no]) {\n      // 表示領域をハイライト\n      this._displayRegion.classList.add('-shown');\n      const displayRegion = displayingRegions[this._no],\n        chromosomeAreaHeight = this._svg.clientHeight - PADDING * 2,\n        rate = chromosomeAreaHeight / this._length,\n        regionHeight = displayRegion.end - displayRegion.start;\n      this._displayRegion.style.top = `${Math.floor(\n        PADDING + displayRegion.start * rate\n      )}px`;\n      this._displayRegion.style.height = `${Math.ceil(regionHeight * rate)}px`;\n    } else {\n      this._displayRegion.classList.remove('-shown');\n    }\n  }\n\n  updateSelectedPositions(positions) {\n    this._subbands.forEach((subband) => {\n      const [start, end] = [+subband.dataset.start, +subband.dataset.end];\n      let intersection = 0;\n      positions.forEach((position) => {\n        intersection += this._intersection(position, [start, end]);\n      });\n      if (intersection > 0) subband.classList.add('-selected');\n      else subband.classList.remove('-selected');\n    });\n    this._bands.forEach((band) => {\n      const [start, end] = [+band.dataset.start, +band.dataset.end];\n      let intersection = 0;\n      positions.forEach((position) => {\n        intersection += this._intersection(position, [start, end]);\n      });\n      if (intersection > 0) band.classList.add('-selected');\n      else band.classList.remove('-selected');\n    });\n  }\n\n  _intersection(range1, range2) {\n    return range1[0] <= range2[1] && range2[1] <= range1[1];\n    // return (\n    //   (range1[0] <= range2[0] && range2[1] <= range1[0]) ||\n    //   (range1[1] <= range2[0] && range2[1] <= range1[1]) ||\n    //   (range1[0] <= range2[0] && range2[1] <= range1[1])\n    // );\n    // TODO: 精度が低い\n  }\n\n  get no() {\n    return this._no;\n  }\n}\n","/** The core of advanced search conditions.\n * Superclass of\n * {@link ConditionValueEditorCheckboxes},\n * {@link ConditionValueEditorColumns},\n * {@link ConditionValueEditorDisease}\n * {@link ConditionValueEditorFrequencyCount},\n * {@link ConditionValueEditorGene},\n * {@link ConditionValueEditorLocation},\n * {@link ConditionValueEditorVariantID},\n */\nclass ConditionValueEditor {\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView */\n  constructor(valuesView, conditionView) {\n    /** @property {ConditionValues} valuesView */\n    this._valuesView = valuesView;\n    /** @property {ConditionItemView} conditionView */\n    this._conditionView = conditionView;\n    /** @property {string} conditionType */\n    this._conditionType = conditionView.conditionType;\n  }\n\n  //protected methods\n  /** Create an element for the edit screen.\n   * @protected\n   * @param {\"checkboxes-editor-view\"|\"clinical-significance-view\"|\"columns-editor-view\"|\"disease-editor-view\"|\"frequency-count-editor-view\"|\"location-editor-view\"|\"text-field-editor-view\"|\"pathogenicity-editor-view\"} className\n   * @param {string} html - \\<header>Select [ConditionType]\\</header>\\<div class=\"body\">\\</div> */\n  _createElement(className, html) {\n    this._el = document.createElement('section');\n    this._el.classList.add(className);\n    this._el.dataset.conditionType = this._conditionType;\n    this._el.innerHTML = html;\n    this._valuesView.sections.append(this._el);\n    this._body = this._el.querySelector(':scope > .body');\n  }\n\n  /** If there is only one value in the condition, update it,\n   * for multiple values, add them without duplicates. (for variant id)\n   * @protected\n   * @param {string} value - The value to add or update.\n   * @param {string} label - The label for the value.\n   * @param {boolean} isOnly - Whether there is one value in one condition\n   * @param {boolean} showDeleteButton - Whether to show the delete button. (for variant id)\n   * @returns {HTMLDivElement} - condition-item-value-view element. */\n  _addValueView(value, label, isOnly = false, showDeleteButton = false) {\n    const selector = isOnly ? '' : `[data-value=\"${value}\"]`;\n    let valueView = this._valuesElement.querySelector(\n      `condition-item-value-view${selector}`\n    );\n\n    if (!valueView) {\n      valueView = document.createElement('condition-item-value-view');\n      valueView.conditionType = this._conditionType;\n      valueView.deleteButton = showDeleteButton;\n\n      this._valuesElement.append(valueView);\n    }\n    valueView.label = label;\n    valueView.value = value;\n    return valueView;\n  }\n\n  /** Remove all valueViews.\n   * @protected */\n  _clearValueViews() {\n    this._valueViews.forEach((valueView) => {\n      valueView.remove();\n    });\n  }\n\n  /** Remove current valueViews and add lastValueViews. (for variant id)\n   * @protected\n   * @param {Array<HTMLDivElement>} lastValueViews */\n  _updateValueViews(lastValueViews) {\n    this._valueViews.forEach((valueView) => {\n      valueView.remove();\n    });\n    this._valuesElement.append(...lastValueViews);\n  }\n\n  /** Delete if argument value contains a value\n   * @protected\n   * @param {string} value */\n  _removeValueView(value) {\n    const selector = value ? `[data-value=\"${value}\"]` : '';\n    const valueView = this._valuesElement.querySelector(\n      `condition-item-value-view${selector}`\n    );\n    if (valueView) {\n      valueView.remove();\n    }\n  }\n\n  //accessor\n  /** div.values which is a wrapper for condition-item-value-view\n   * @protected\n   * @type {HTMLDivElement} */\n  get _valuesElement() {\n    return this._valuesView.conditionView.valuesElement;\n  }\n\n  /** [condition-item-value-view]\n   * @protected\n   * @type {Array<HTMLDivElement>} */\n  get _valueViews() {\n    const valueViews = Array.from(\n      this._valuesElement.querySelectorAll(':scope > condition-item-value-view')\n    );\n    return valueViews;\n  }\n}\n\nexport default ConditionValueEditor;\n","import ConditionValueEditor from './ConditionValueEditor.js';\nimport { ADVANCED_CONDITIONS } from '../global.js';\n\n/** for clinical significance, variant type */\nexport default class ConditionValueEditorCheckboxes extends ConditionValueEditor {\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView */\n  constructor(valuesView, conditionView) {\n    super(valuesView, conditionView);\n\n    // HTML\n    const master = ADVANCED_CONDITIONS[this._conditionType];\n    this._createElement(\n      'checkboxes-editor-view',\n      `\n    <header>Select ${this._conditionType}</header>\n    <div class=\"buttons\">\n      <button class=\"button-view -weak\">Select all</button>\n      <button class=\"button-view -weak\">Clear all</button>\n    </div>\n    <ul class=\"checkboxes body\">${master.values\n        .map(\n          (value) => `\n      <li data-value=\"${value.value}\">\n        <label>\n          <input\n          type=\"checkbox\"\n          value=\"${value.value}\"\n          data-label=\"${value.label}\">${value.label}\n        </label>\n      </li>`\n        )\n        .join('')}\n    </ul>\n    `\n    );\n\n    // delete 'not in clinver'\n    if (this._conditionType === 'significance') {\n      this._el.querySelector('li[data-value=\"NC\"]').remove();\n    }\n\n    // references\n    this._checkboxes = Array.from(\n      this._el.querySelectorAll(':scope > ul > li > label > input')\n    );\n\n    // attach events\n    this._checkboxes.forEach((checkbox) => {\n      checkbox.addEventListener('change', () => {\n        this._update();\n      });\n    });\n    this._el\n      .querySelectorAll(':scope > .buttons > button')\n      .forEach((button, index) => {\n        button.addEventListener('click', () => {\n          this._checkboxes.forEach((checkbox) => (checkbox.checked = !index));\n          this._update();\n        });\n      });\n  }\n\n  // public methods\n\n  keepLastValues() {\n    this._lastValues = Array.from(\n      this._valuesView.conditionView.valuesElement.querySelectorAll(\n        ':scope > condition-item-value-view'\n      )\n    ).map((value) => value.value);\n  }\n\n  restore() {\n    this._checkboxes.forEach((checkbox) => {\n      const value = this._lastValues.find((value) => value === checkbox.value);\n      checkbox.checked = value !== undefined;\n    });\n    this._update();\n  }\n\n  get isValid() {\n    return this._checkboxes.some((checkbox) => checkbox.checked);\n  }\n\n  // private methods\n\n  _update() {\n    // update values\n    this._checkboxes.forEach((checkbox) => {\n      if (checkbox.checked) {\n        this._addValueView(checkbox.value, checkbox.dataset.label);\n      } else {\n        this._removeValueView(checkbox.value);\n      }\n    });\n\n    // validation\n    this._valuesView.update(this._validate());\n  }\n\n  _validate() {\n    return this.isValid;\n  }\n}\n","import ConditionValueEditor from './ConditionValueEditor.js';\nimport { ADVANCED_CONDITIONS, API_URL } from '../global.js';\nimport { CONDITION_TYPE } from '../definition.js';\n\nconst SELECTION_DEPENDED_ON_PARENT = {\n  consequence: true,\n  disease: false,\n};\nconst DISEASE_API = {\n  PATH: `${API_URL}/sparqlist/api/advanced_search_disease_selector`,\n  KEY: 'mesh_in',\n};\n\nexport default class ConditionValueEditorColumns extends ConditionValueEditor {\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView */\n  constructor(valuesView, conditionView) {\n    super(valuesView, conditionView);\n\n    this._data = this._prepareData();\n    this._selectionDependedOnParent =\n      SELECTION_DEPENDED_ON_PARENT[this._conditionType];\n\n    // HTML\n    this._createElement(\n      'columns-editor-view',\n      `\n    <header>Select ${this._conditionType}</header>\n    <div class=\"body\">\n      <div class=\"columns\"></div>\n      <div class=\"description\"></div>\n    </div>`\n    );\n    this._columns = this._body.querySelector(':scope > .columns');\n    this._description = this._body.querySelector(':scope > .description');\n    this._drawColumn();\n  }\n\n  // public methods\n\n  keepLastValues() {\n    this._lastValues = this._data\n      .filter((datum) => datum.value && datum.checked)\n      .map((datum) => datum.value);\n  }\n\n  restore() {\n    this._data.forEach(\n      (datum) => (datum.checked = this._lastValues.indexOf(datum.value) !== -1)\n    );\n    this._update();\n  }\n\n  get isValid() {\n    return this._valueViews.length > 0;\n  }\n\n  // private methods\n\n  _prepareData() {\n    switch (this._conditionType) {\n      case CONDITION_TYPE.consequence:\n      case CONDITION_TYPE.dataset:\n        return ADVANCED_CONDITIONS[this._conditionType].values.map((value) =>\n          Object.assign({ checked: false }, value)\n        );\n      case CONDITION_TYPE.disease:\n        return [];\n    }\n  }\n\n  _drawColumn(parentId) {\n    this._getItems(parentId).then((items) => {\n      // make HTML\n      const column = document.createElement('div');\n      column.classList.add('column');\n      column.dataset.depth =\n        this._columns.querySelectorAll(':scope > .column').length;\n      this._columns.append(column);\n      column.innerHTML = `\n        <ul>\n          ${items\n            .map((item) => {\n              return `<li\n              ${item.id ? `data-id=\"${item.id}\"` : ''}\n              ${item.value ? `data-value=\"${item.value}\"` : ''}\n              ${item.parent ? `data-parent=\"${item.parent}\"` : ''}\n            >\n              <label>\n                <input type=\"checkbox\">\n                ${\n                  this._conditionType === CONDITION_TYPE.dataset\n                    ? `<span class=\"dataset-icon\" data-dataset=\"${item.value}\"></span>`\n                    : ''\n                }\n                <span>${item.label}</span>\n              </label>\n              ${\n                item.children === undefined\n                  ? ''\n                  : `<div class=\"arrow\" data-id=\"${item.id}\"></div>`\n              }\n            </li>`;\n            })\n            .join('')}\n        </ul>`;\n\n      // attach events\n      // add/remove condition\n      for (const item of column.querySelectorAll(\n        ':scope > ul > li > label > input'\n      )) {\n        item.addEventListener('change', (e) => {\n          // change status\n          const li = e.target.closest('li');\n          const datum = this._data.find((datum) => datum.id == li.dataset.id);\n          datum.checked = e.target.checked;\n          // if it has children, aggregate child items\n          if (datum.children) this._updateChildren(datum.id, e.target.checked);\n          this._update(datum.id);\n        });\n      }\n      // drill down\n      for (const item of column.querySelectorAll(':scope > ul > li > .arrow')) {\n        item.addEventListener('click', (e) => {\n          const item = e.target.closest('li');\n          // release selecting item, and remove subdirectory\n          item.parentNode\n            .querySelector(':scope > .-selected')\n            ?.classList.remove('-selected');\n          const depth = parseInt(item.closest('.column').dataset.depth);\n          for (const column of item\n            .closest('.columns')\n            .querySelectorAll(':scope > .column')) {\n            if (parseInt(column.dataset.depth) > depth)\n              column.parentNode.removeChild(column);\n          }\n          // select, and drill down\n          item.classList.add('-selected');\n          this._drawColumn(+e.target.dataset.id);\n        });\n      }\n      this._update();\n\n      // scroll\n      const left = this._body.scrollWidth - this._body.clientWidth;\n      if (left > 0) {\n        this._body.scrollTo({\n          top: 0,\n          left: left,\n          behavior: 'smooth',\n        });\n      }\n    });\n  }\n\n  _getItems(parentId) {\n    return new Promise((resolve, reject) => {\n      // TODO: alt allele, consequence と disease で、取り方が変わる\n      switch (this._conditionType) {\n        case CONDITION_TYPE.consequence:\n          resolve(this._data.filter((datum) => datum.parent === parentId));\n          break;\n        default:\n          reject(new Error('ConditionValueEditorColumns - Not implemented'));\n      }\n    });\n  }\n\n  _updateChildren(id, checked) {\n    // reflect\n    if (!this._selectionDependedOnParent) return;\n    const children = this._data.filter((datum) => datum.parent == id);\n    children.forEach((child) => {\n      child.checked = checked;\n      this._updateChildren(child.id, checked);\n    });\n  }\n\n  _updateIndeterminate() {\n    // if (!this._selectionDependedOnParent) return;\n\n    const checkLeaves = (datum) => {\n      if (!datum.children || datum.children.length === 0) return;\n      let numberOfChecked = 0;\n      datum.children.forEach((child) => {\n        const childDatum = this._data.find((datum) => datum.id === child);\n        if (childDatum.children) {\n          numberOfChecked += checkLeaves(childDatum);\n        } else {\n          numberOfChecked += childDatum.checked;\n        }\n      });\n      let checked, indeterminate;\n      switch (true) {\n        case numberOfChecked === 0:\n          checked = false;\n          indeterminate = false;\n          break;\n        case numberOfChecked === datum.children.length:\n          checked = true;\n          indeterminate = false;\n          break;\n        default:\n          checked = false;\n          indeterminate = true;\n          break;\n      }\n      const checkbox = this._columns.querySelector(\n        `li[data-id=\"${datum.id}\"] > label > input`\n      );\n      if (checkbox) {\n        checkbox.checked = checked;\n        checkbox.indeterminate = indeterminate;\n      }\n      return checked || indeterminate;\n    };\n\n    // top level\n    const topLevelNodes = this._data.filter(\n      (datum) => datum.parent === undefined\n    );\n    topLevelNodes.forEach((datum) => checkLeaves(datum));\n  }\n\n  _update() {\n    // reflect check status in DOM\n    this._data.forEach((datum) => {\n      const checkbox = this._columns.querySelector(\n        `li[data-id=\"${datum.id}\"] > label > input`\n      );\n      if (checkbox) checkbox.checked = datum.checked;\n    });\n    // update selection status of upper hierarchy\n    this._updateIndeterminate();\n\n    // update values\n    this._data.forEach((datum) => {\n      if (!datum.value) return;\n      if (datum.checked) {\n        this._addValueView(datum.value, datum.label);\n      } else {\n        this._removeValueView(datum.value);\n      }\n    });\n\n    // validation\n    this._valuesView.update(this._validate());\n  }\n\n  _validate() {\n    return this.isValid;\n  }\n}\n","import { LitElement, css, html } from 'lit';\n\nexport class ErrorModal extends LitElement {\n  static styles = css`\n    p {\n      font-size: 2em;\n      color: green;\n    }\n  `;\n\n  static properties() {\n    return {\n      erorMessage: { type: String },\n    };\n  }\n\n  constructor() {\n    super(...arguments);\n    this.errorMessage = '';\n  }\n\n  render() {\n    return html`\n      <div class=\"err-container\">\n        <p>${this.errorMessage}</p>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('error-modal', ErrorModal);\n","import { directive, AsyncDirective } from 'lit/async-directive.js';\nimport { noChange, nothing } from 'lit';\n\nconst disconnectedRects = new Map();\nclass Flip extends AsyncDirective {\n  parent;\n  element;\n  boundingRect;\n  id;\n  role = '';\n  parentRect = null;\n\n  render() {\n    return nothing;\n  }\n\n  update(\n    part,\n    [\n      {\n        id = undefined,\n        role = '',\n        options = {},\n        heroId = undefined,\n        scrolledHeroRect = null,\n      } = {},\n    ]\n  ) {\n    this.id = id;\n    this.role = role;\n    this.heroId = heroId;\n    this.scrolledHeroRect = scrolledHeroRect;\n\n    if (\n      this.role === 'hero' &&\n      this.id !== this.heroId &&\n      this.id !== 'MONDO_0000001' &&\n      this.id !== 'dummy'\n    ) {\n      // then remove the element from the DOM with animation\n      disconnectedRects.set(this.id, part.element.getBoundingClientRect());\n      this.remove();\n    }\n\n    if (this.role !== 'hero' && !disconnectedRects.has(this.id)) {\n      disconnectedRects.set(this.id, { y: 0, x: 0, width: 0, height: 0 });\n    }\n\n    this.options = {\n      ...this.options,\n      ...options,\n    };\n\n    if (this.element !== part.element) {\n      this.element = part.element;\n\n      this.parent =\n        this.element.parentElement ||\n        this.element.getRootNode().querySelector('.column');\n    }\n    // memorize boundingRect before element updates\n    if (this.boundingRect) {\n      this.boundingRect = this.element.getBoundingClientRect();\n    }\n    // the timing on which LitElement batches its updates, to capture the \"last\" frame of our animation.\n    Promise.resolve().then(() => this.prepareToFlip());\n    return noChange;\n  }\n\n  prepareToFlip() {\n    if (!this.boundingRect) {\n      this.boundingRect = disconnectedRects.has(this.id)\n        ? disconnectedRects.get(this.id)\n        : this.element.getBoundingClientRect();\n      disconnectedRects.delete(this.id);\n    }\n\n    this.flip();\n  }\n\n  flip(listener, removing) {\n    let previous = this.boundingRect;\n\n    if (this.id === this.heroId) {\n      previous = this.scrolledHeroRect;\n    }\n\n    this.boundingRect = this.element.getBoundingClientRect();\n\n    const deltaY = (previous?.y || 0) - (this.boundingRect?.y || 0);\n\n    if (!deltaY && !removing) {\n      return;\n    }\n\n    const filteredListener = (event) => {\n      if (event.target === this.element) {\n        listener(event);\n        this.element.removeEventListener('transitionend', filteredListener);\n      }\n    };\n\n    this.element.addEventListener('transitionend', filteredListener);\n\n    this.element.animate(\n      [\n        {\n          transform: `translate(0, ${deltaY}px)`,\n        },\n        {\n          transform: `translate(0,0)`,\n        },\n      ],\n      this.options\n    );\n    // }\n  }\n\n  remove() {\n    this.element.animate(\n      [\n        {\n          opacity: 1,\n\n          transform: `translateY(0)`,\n        },\n        {\n          opacity: 0,\n\n          transform: `translateY(${\n            this.element.getBoundingClientRect().y + 200\n          }px)`,\n        },\n      ],\n      this.options\n    ).onfinish = () => {\n      if (disconnectedRects.has(this.id)) {\n        disconnectedRects.delete(this.id);\n      }\n      this.element.remove();\n    };\n  }\n\n  disconnected() {\n    if (this.role === 'hero') {\n      this.remove();\n    }\n\n    this.boundingRect = this.element.getBoundingClientRect();\n    if (typeof this.id !== 'undefined') {\n      disconnectedRects.set(this.id, this.boundingRect);\n      requestAnimationFrame(() => {\n        if (disconnectedRects.has(this.id)) {\n          this.remove();\n        }\n      });\n    }\n  }\n}\n\nexport const flip = directive(Flip);\n","import { LitElement, html, css, nothing } from 'lit';\nimport { ref, createRef } from 'lit/directives/ref.js';\n\nconst KEYS_MAP = {\n  id: {\n    text: 'MONDO',\n    link: 'http://purl.obolibrary.org/obo/',\n  },\n  cui: {\n    text: 'MedGen',\n    link: 'https://www.ncbi.nlm.nih.gov/medgen/',\n  },\n};\n\nexport class OntologyCard extends LitElement {\n  static get properties() {\n    return {\n      data: { type: Object, state: true },\n      hidden: { type: Boolean, attribute: true },\n      id: { type: String, attribute: true, reflect: true },\n      mode: {\n        type: String,\n        state: true,\n      },\n      order: {\n        type: String,\n        state: true,\n      },\n      prevRect: {\n        type: Object,\n        state: true,\n      },\n    };\n  }\n\n  shouldUpdate() {\n    if (this.data.id === 'dummy') {\n      this.hidden = true;\n    } else {\n      this.hidden = false;\n    }\n    return true;\n  }\n\n  constructor() {\n    super();\n    this.data = {};\n    this.hidden = false;\n    this.mode = '';\n    this.order = '';\n    this.prevRect = { x: 0, y: 0, width: 0, height: 0 };\n    this._skipKeys = ['label', 'children', 'parents', 'leaf', 'root'];\n    this.cardRef = createRef();\n    this._leftCoinnector = createRef;\n    this.leftConnectorClassName = '';\n    this.rightConnectorClassName = '';\n  }\n\n  static styles = css`\n    :host {\n      display: block;\n      position: relative;\n      --connector-line: 1px solid #ccc;\n      --selected-bg-color: white;\n      --default-bg-color: white;\n      --selected-border-color: rgb(17, 127, 147);\n    }\n\n    .-hero-right:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-hero-left:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-children-first:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 1px;\n      height: calc(100% - min(50%, 15px) + 5px);\n      border-left: var(--connector-line);\n      bottom: -6px;\n      box-sizing: border-box;\n    }\n\n    .-children-first:after {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-children-last:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 1px;\n      height: calc(min(50%, 15px) + 6px);\n      border-left: var(--connector-line);\n      top: -6px;\n      box-sizing: border-box;\n    }\n\n    .-children-last:after {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-top: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-children-mid:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 1px;\n      height: calc(100% + 14px);\n      border-left: var(--connector-line);\n      top: -6px;\n      box-sizing: border-box;\n    }\n\n    .-children-mid:after {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-parents-first:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 1px;\n      height: calc(100% - min(50%, 15px) + 5px);\n      border-right: var(--connector-line);\n      bottom: -6px;\n      right: 0;\n      box-sizing: border-box;\n    }\n\n    .-parents-first:after {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-parents-last:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 1px;\n      height: calc(min(50%, 15px) + 6px);\n      border-right: var(--connector-line);\n      top: -6px;\n      right: 0;\n      box-sizing: border-box;\n    }\n\n    .-parents-last:after {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-top: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-parents-mid:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 1px;\n      height: calc(100% + 14px);\n      border-right: var(--connector-line);\n      top: -6px;\n      right: 0;\n      box-sizing: border-box;\n    }\n\n    .-parents-mid:after {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-parents-single:after {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .-children-single:before {\n      position: absolute;\n      z-index: 9;\n      content: '';\n      width: 100%;\n      height: 1px;\n      border-bottom: var(--connector-line);\n      top: min(50%, 15px);\n      box-sizing: border-box;\n    }\n\n    .ontology-card {\n      padding: 6px;\n      border: 1px solid #ccc;\n      border-radius: 8px;\n      background-color: #fff;\n      cursor: pointer;\n      position: relative;\n      width: min(80%, 20rem);\n      max-width: 30rem;\n      box-sizing: border-box;\n      margin-bottom: 6px;\n    }\n\n    .ontology-card:hover {\n      filter: brightness(0.98);\n    }\n\n    h3 {\n      display: inline-block;\n      text-transform: lowercase;\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n\n    h3:first-letter {\n      text-transform: uppercase;\n    }\n\n    .card-container {\n      display: flex;\n      flex-direction: row;\n      justify-content: center;\n    }\n\n    .hyper-text {\n      color: var(--color-key-dark3);\n      text-decoration: underline;\n    }\n\n    .hyper-text:active,\n    .hyper-text:hover {\n      color: var(--color-key-dark1);\n    }\n\n    .connector {\n      position: relative;\n      flex-grow: 1;\n    }\n\n    .selected {\n      background-color: var(--selected-bg-color);\n      border-color: var(--selected-border-color);\n    }\n\n    .hidden {\n      visibility: hidden;\n    }\n\n    .table-container {\n      max-height: 10rem;\n      margin-top: 0.3em;\n      overflow-y: auto;\n    }\n  `;\n\n  willUpdate(prevParams) {\n    if (this.mode === 'hero') {\n      if (this.data.leaf) {\n        this.leftConnectorClassName = '-hero-left';\n      } else if (this.data.root) {\n        this.rightConnectorClassName = '-hero-right';\n      } else {\n        this.leftConnectorClassName = `-hero-left`;\n        this.rightConnectorClassName = `-hero-right`;\n      }\n    } else if (this.mode === 'children') {\n      this.leftConnectorClassName = `-${this.mode}-${this.order}`;\n    } else if (this.mode === 'parents') {\n      this.rightConnectorClassName = `-${this.mode}-${this.order}`;\n    }\n\n    this.prevMode = prevParams.get('mode');\n    if (this.data.id === 'dummy') {\n      this.leftConnectorClassName = '';\n      this.rightConnectorClassName = '';\n    }\n  }\n\n  updated() {\n    const animProps = {\n      duration: 500,\n      easing: 'ease-out',\n    };\n\n    if (this.mode === 'hero') {\n      let animation = [\n        {\n          height: `${this.prevRect?.height || 0}px`,\n          overflow: 'hidden',\n        },\n        {\n          height: `${\n            this.cardRef?.value.getBoundingClientRect().height || 0\n          }px`,\n        },\n      ];\n\n      animation[0].backgroundColor = this.defaultBgColor;\n      animation[1].backgroundColor = this.selectedBgColor;\n\n      this.cardRef.value.animate(animation, animProps);\n    }\n  }\n\n  firstUpdated() {\n    this.defaultBgColor = getComputedStyle(this.cardRef.value).getPropertyValue(\n      '--default-bg-color'\n    );\n    this.selectedBgColor = getComputedStyle(\n      this.cardRef.value\n    ).getPropertyValue('--selected-bg-color');\n  }\n\n  render() {\n    return html`\n      <div class=\"card-container\">\n        <div class=\"connector ${this.leftConnectorClassName}\"></div>\n        <div\n          ${ref(this.cardRef)}\n          class=\"ontology-card ${this.hidden ? 'hidden' : ''} ${this.mode ===\n          'hero'\n            ? 'selected'\n            : ''}\"\n        >\n          <div class=\"ontology-card-header\">\n            <h3>${this.data?.label || '...'}</h3>\n            ${this.mode === 'hero'\n              ? html`\n                  <div class=\"table-container\">\n                    <table>\n                      <tbody>\n                        ${Object.keys(this.data)\n                          .filter((key) => !this._skipKeys.includes(key))\n                          .map((key) => {\n                            return html`\n                              <tr>\n                                <td class=\"key\">${KEYS_MAP[key].text}:</td>\n                                <td class=\"data\">\n                                  <a\n                                    class=\"hyper-text -external\"\n                                    href=\"${KEYS_MAP[key].link}${this.data[\n                                      key\n                                    ]}\"\n                                    target=\"_blank\"\n                                    >${this.data[key]}</a\n                                  >\n                                </td>\n                              </tr>\n                            `;\n                          })}\n                      </tbody>\n                    </table>\n                  </div>\n                `\n              : nothing}\n          </div>\n        </div>\n        <div class=\"connector ${this.rightConnectorClassName}\"></div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('ontology-card', OntologyCard);\n","import { LitElement, css, html, nothing } from 'lit';\n\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport { flip } from './flipColumn';\n\nimport './ConditionDiseaseSearchOntologyCard';\n\nexport default class Column extends LitElement {\n  static styles = css`\n    :host {\n      flex-grow: 1;\n      flex-basis: 0;\n      display: block;\n      position: relative;\n    }\n\n    .column {\n      height: 100%;\n\n      position: relative;\n      overflow-y: auto;\n      overflow-x: hidden;\n    }\n\n    ontology-card:last-child {\n      margin-bottom: 10px;\n    }\n  `;\n\n  static get properties() {\n    return {\n      nodes: { type: Array, state: true },\n      role: { type: String, state: true },\n      heroId: {\n        type: String,\n        state: true,\n      },\n      scrolledHeroRect: { type: Object, state: true },\n      animationOptions: { type: Object, state: true },\n    };\n  }\n  constructor() {\n    super();\n    this.nodes = [];\n    this.heroId = undefined;\n    this.role = '';\n    this.scrolledHeroRect = null;\n    this.animationOptions = {};\n  }\n\n  _handleClick(e) {\n    if (e.target.tagName === 'ONTOLOGY-CARD') {\n      // only if clicked on the card itself, not on connector div\n\n      // dispatch event to load new data by id\n      this.dispatchEvent(\n        new CustomEvent('column-click', {\n          detail: {\n            id: e.target.id,\n            role: this.role,\n            rect: e.target.getBoundingClientRect(),\n          },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    }\n  }\n\n  render() {\n    return html`\n      <div\n        class=\"column\"\n        @click=\"${this.nodes[0].id === 'dummy' ? null : this._handleClick}\"\n      >\n        ${this.nodes.length\n          ? html`\n              ${repeat(\n                this.nodes,\n                (node) => node.id,\n                (node, index) => {\n                  return html`<ontology-card\n                    key=\"${node.id}\"\n                    id=\"${node.id}\"\n                    .data=${node}\n                    .mode=${this.role}\n                    .prevRect=${this.scrolledHeroRect}\n                    .order=${this.nodes.length === 1\n                      ? 'single'\n                      : index === 0\n                      ? 'first'\n                      : index === this.nodes.length - 1\n                      ? 'last'\n                      : 'mid'}\n                    ${flip({\n                      id: node.id,\n                      heroId: this.heroId,\n                      role: this.role,\n                      scrolledHeroRect: this.scrolledHeroRect,\n                      options: this.animationOptions,\n                    })}\n                  />`;\n                }\n              )}\n            `\n          : nothing}\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('ontology-column', Column);\n","import '../ErrorModal';\n\nimport { LitElement, html, css } from 'lit';\nimport { ref, createRef } from 'lit/directives/ref.js';\n\nimport { repeat } from 'lit/directives/repeat.js';\n\nimport './ConditionDiseaseSearchColumn';\n\nimport { cachedAxios } from '../../utils/cachedAxios';\nimport { API_URL } from '../../global';\n\nclass Container extends LitElement {\n  flexRef = createRef();\n  clipRef = createRef();\n  nodeRef = createRef();\n  movement = '';\n  flexWidth = 0;\n  deltaWidth = 0;\n  nodeWidth = 0;\n  gap = 0;\n  animate = null;\n  scrolledRect = null;\n  API = new cachedAxios(`${API_URL}/api/inspect`);\n  dataColumns = {\n    _parents: [],\n    parents: [],\n    hero: [],\n    children: [],\n    _children: [],\n  };\n  animationOptions = {\n    duration: 500,\n    easing: 'ease-in-out',\n  };\n\n  static styles = css`\n    :host {\n      font-size: 10px;\n      display: block;\n      height: 100%;\n      position: relative;\n    }\n\n    .clip {\n      height: 200px;\n      overflow: hidden;\n      position: relative;\n    }\n\n    .flex {\n      height: 100%;\n      display: flex;\n      flex-direction: row;\n    }\n  `;\n\n  constructor() {\n    super();\n    this._id = '';\n    this._columns = ['parents', 'hero', 'children'];\n    this.data = {};\n  }\n\n  static get properties() {\n    return {\n      data: { type: Object, state: true },\n      _id: { type: String, attribute: 'id' },\n      _columns: {\n        type: Array,\n        state: true,\n      },\n    };\n  }\n\n  set _id(id) {\n    if (this.data?.id !== id) {\n      this._loadingStarted();\n      this.API.get(`/disease?node=${id}`).then(({ data }) => {\n        this.data = data;\n\n        this._loadingEnded();\n      });\n    }\n  }\n\n  willUpdate(changedProperties) {\n    if (changedProperties.has('data')) {\n      if (changedProperties.get('data')) {\n        if (this.data.id && changedProperties.get('data').id !== this.data.id) {\n          // parents before update\n          this.dataColumns._parents = changedProperties.get('data')\n            ?.parents || [{ id: 'dummy', label: 'dummy' }];\n          // children before update\n          this.dataColumns._children = changedProperties.get('data')\n            ?.children || [{ id: 'dummy', label: 'dummy' }];\n\n          if (this._columns.length === 4) {\n            let movement;\n            if (this._columns.includes('_parents')) {\n              movement = 'left';\n            } else if (this._columns.includes('_children')) {\n              movement = 'right';\n            } else {\n              movement = '';\n            }\n\n            // hero before update\n            if (movement === 'left') {\n              this.dataColumns.hero = this.dataColumns._children;\n            } else if (movement === 'right') {\n              this.dataColumns.hero = this.dataColumns._parents;\n            }\n          } else {\n            this.dataColumns.hero = [this.data];\n          }\n\n          //parents after update\n          this.dataColumns.parents = this.data?.parents || [];\n          //children after update\n          this.dataColumns.children = this.data?.children || [];\n        }\n      }\n    }\n    if (changedProperties.has('_columns')) {\n      this.nodeWidth =\n        this.nodeRef.value?.getBoundingClientRect().width -\n          (this.nodeRef.value?.getBoundingClientRect().right -\n            this.clipRef.value?.getBoundingClientRect().right) || 0;\n      this.gap =\n        (this.clipRef.value?.getBoundingClientRect().width -\n          this.nodeWidth * 3) /\n        2;\n\n      this.flexWidth =\n        this._columns.length === 4\n          ? this.nodeWidth * this._columns.length +\n            (this._columns.length - 1) * this.gap +\n            'px'\n          : '100%';\n\n      this.deltaWidth = this.nodeWidth + this.gap;\n    }\n  }\n\n  firstUpdated() {\n    this.API.get(`/disease?node=${this._id}`).then(({ data }) => {\n      this.data = data;\n    });\n  }\n\n  _loadingStarted() {\n    this.dispatchEvent(\n      new CustomEvent('loading-started', { bubbles: true, composed: true })\n    );\n  }\n\n  _loadingEnded() {\n    if (this.data.id) {\n      this.dispatchEvent(\n        new CustomEvent('disease-selected', {\n          detail: {\n            id: this.data.id,\n            label: this.data.label[0].toUpperCase() + this.data.label.slice(1),\n          },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('loading-ended', { bubbles: true, composed: true })\n    );\n  }\n\n  _handleClick(e) {\n    if (e.target?.role === 'parents' || e.target?.role === 'children') {\n      this.scrolledRect = e.detail?.rect || null;\n\n      this._loadingStarted();\n\n      this.API.get(`/disease?node=${e.detail.id}`).then(({ data }) => {\n        this.data = data;\n        this._loadingEnded();\n        this.updateComplete.then(() => {\n          if (e.detail.role === 'children') {\n            this.movement = 'left';\n\n            this._columns = ['_parents', 'parents', 'hero', 'children'];\n          } else if (e.detail.role === 'parents') {\n            this.movement = 'right';\n\n            this._columns = ['parents', 'hero', 'children', '_children'];\n          }\n        });\n      });\n    }\n  }\n\n  updated() {\n    if (this.movement === 'left') {\n      this.animate = this.flexRef.value.animate(\n        [\n          { transform: 'translateX(0)' },\n          {\n            transform: `translateX(${-this.deltaWidth}px)`,\n          },\n        ],\n        this.animationOptions\n      );\n    } else if (this.movement === 'right') {\n      this.animate = this.flexRef.value.animate(\n        [\n          {\n            transform: `translateX(${-this.deltaWidth}px)`,\n          },\n          { transform: 'translateX(0)' },\n        ],\n        this.animationOptions\n      );\n    }\n\n    if (this.animate) {\n      this.animate.onfinish = () => {\n        this.movement = '';\n        this._columns = ['parents', 'hero', 'children'];\n        this.animate = null;\n      };\n    }\n  }\n\n  render() {\n    return html`\n      <div class=\"clip\" ${ref(this.clipRef)}>\n        <div\n          class=\"flex\"\n          @column-click=\"${this._handleClick}\"\n          style=\"width: ${this.flexWidth}\"\n          ${ref(this.flexRef)}\n        >\n          ${repeat(\n            this._columns,\n            (column) => column,\n            (column) => {\n              return html`\n                <ontology-column\n                  .role=\"${column}\"\n                  .nodes=\"${this.dataColumns[column].length\n                    ? this.dataColumns[column]\n                    : [{ id: 'dummy', label: 'dummy' }]}\"\n                  ${ref(this.nodeRef)}\n                  .heroId=\"${column === 'hero' ? this.data.id : undefined}\"\n                  .scrolledHeroRect=\"${this.scrolledRect}\"\n                  .animationOptions=\"${this.animationOptions}\"\n                ></ontology-column>\n              `;\n            }\n          )}\n        </div>\n      </div>\n    `;\n  }\n}\n\ncustomElements.define('condition-disease-ontology-view', Container);\n","import { LitElement, html, nothing } from 'lit';\n\nimport './ConditionDiseaseSearchOntologyView.js';\nimport '../SearchField/suggestions/SearchFieldWithSuggestions';\n\nimport { API_URL } from '../../global';\n\nconst suggestAPI = `${API_URL}/api/search/disease`;\n\nexport class ConditionDiseaseSearch extends LitElement {\n  _timer = null;\n\n  static get properties() {\n    return {\n      diseaseId: {\n        type: String,\n        reflect: true,\n      },\n      data: { state: true },\n      loading: { type: Boolean, state: true },\n    };\n  }\n\n  constructor(el) {\n    super();\n    el.appendChild(this);\n\n    this._valuesElement = el.parentElement.querySelector(\n      ':scope > .summary > .values'\n    );\n\n    this.data = [];\n    this.diseaseId = 'MONDO_0000001';\n    this.loading = false;\n  }\n\n  _changeDiseaseEventHadnler(e) {\n    e.stopPropagation();\n    this.diseaseId = e.detail.id;\n    this.dispatchEvent(\n      new CustomEvent('disease-selected', {\n        detail: {\n          id: e.detail.id,\n          label: e.detail.label,\n        },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  _loadingStartedHandler(e) {\n    e.stopPropagation();\n\n    this._timer = setTimeout(() => {\n      this.loading = true;\n    }, 200);\n  }\n\n  _loadingEndedHandler(e) {\n    e.stopPropagation();\n    this.loading = false;\n    if (this._timer) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('id', 'ConditionDiseaseSearch');\n  }\n\n  render() {\n    return html`\n      <search-field-with-suggestions\n        .suggestAPIURL=${suggestAPI}\n        .suggestAPIQueryParam=\"${'term'}\"\n        .options=\"${{ valueMappings: { valueKey: 'id', labelKey: 'label' } }}\"\n        .placeholder=${'Breast-ovarian cancer, familial 2'}\n        @new-suggestion-selected=\"${this._changeDiseaseEventHadnler}\"\n      ></search-field-with-suggestions>\n\n      <div class=\"container\">\n        ${this.loading\n          ? html`<div class=\"loading\">\n              <span></span>\n            </div>`\n          : nothing}\n\n        <condition-disease-ontology-view\n          ._id=\"${this.diseaseId}\"\n          @disease-selected=\"${this._changeDiseaseEventHadnler}\"\n          @loading-started=\"${this._loadingStartedHandler}\"\n          @loading-ended=\"${this._loadingEndedHandler}\"\n        ></condition-disease-ontology-view>\n      </div>\n    `;\n  }\n\n  // do not create shadow dom\n  createRenderRoot() {\n    return this;\n  }\n}\n\ncustomElements.define('condition-disease-search', ConditionDiseaseSearch);\n","import ConditionValueEditor from './ConditionValueEditor.js';\n\nimport { ConditionDiseaseSearch } from '../components/ConditionDiseaseSearch/ConditionDiseaseSearch.js';\n\nexport default class ConditionValueEditorDisease extends ConditionValueEditor {\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView */\n  constructor(valuesView, conditionView) {\n    super(valuesView, conditionView);\n\n    this._data = { id: null, label: null };\n\n    // HTML\n    this._createElement(\n      'disease-editor-view',\n      `\n    <header>Select ${this._conditionType}</header>\n    <div class=\"body\"></div>\n    `\n    );\n\n    this._el.classList.add('text-field-editor-view');\n\n    this._conditionElem =\n      this._body.querySelector('condition-disease-search') ||\n      new ConditionDiseaseSearch(this._body);\n\n    this._conditionElem.addEventListener('disease-selected', (e) => {\n      e.stopPropagation();\n      const { id, label } = e.detail;\n\n      if (id) {\n        this._data = { id, label };\n\n        this._addValueView(this._data.id, this._data.label, true);\n\n        this._update();\n      } else {\n        this._removeValueView(this._data.id);\n        this._data = { id: null, label: null };\n        this._update();\n      }\n    });\n  }\n\n  get isValid() {\n    return !!this._data.id;\n  }\n\n  keepLastValues() {\n    this._lastValues = { ...this._data };\n  }\n\n  restore() {\n    this._data.id = { ...this._lastValues };\n    this._update();\n  }\n\n  _validate() {\n    return this.isValid;\n  }\n\n  _update() {\n    this._valuesView.update(this._validate());\n  }\n}\n","import ConditionValueEditor from './ConditionValueEditor.js';\nimport SearchFieldWithSuggestions from '../components/SearchField/suggestions/SearchFieldWithSuggestions';\nimport { API_URL } from '../global.js';\n\n/** Gene Search editing screen */\nclass ConditionValueEditorGene extends ConditionValueEditor {\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView */\n  constructor(valuesView, conditionView) {\n    super(valuesView, conditionView);\n    /** @property {number} _value - value of the selected suggestion */\n    this._value;\n    /** @property {string} _label - label of the selected suggestion */\n    this._label;\n\n    // HTML\n    this._createElement(\n      'text-field-editor-view',\n      `<header>Search for ${this._conditionType}</header>\n      <div class=\"body\"></div>`\n    );\n\n    /** @property {HTMLDivElement} _searchFieldView - CustomElement */\n    this._searchFieldView = new SearchFieldWithSuggestions(\n      'BRCA2',\n      `${API_URL}/api/search/${this._conditionType}`,\n      'term',\n      this._body,\n      {\n        valueMappings: {\n          valueKey: 'id',\n          labelKey: 'symbol',\n          aliasOfKey: 'alias_of',\n        },\n      }\n    );\n\n    this._searchFieldView.addEventListener(\n      'new-suggestion-selected',\n      this._handleSuggestSelect\n    );\n  }\n\n  // public methods\n  /** Retain value when changing to edit screen\n   * See {@link ConditionValues} startToEditCondition */\n  keepLastValues() {\n    let valueView = this._valuesElement.querySelector(\n      'condition-item-value-view'\n    );\n\n    this._lastValue = valueView?.value || '';\n    this._lastLabel = valueView?.label || '';\n  }\n\n  /** If the cancel button is pressed when isFirstTime is false, restore the value before editing\n   *  See {@link ConditionValues} _clickCancelButton */\n  restore() {\n    this._addValueView(this._lastValue, this._lastLabel, true);\n  }\n\n  // private methods\n  /** Add condition-item-value-view with selected suggestion data\n   * @private\n   * @param {CustomEvent} e new-suggestion-selected (SearchElementWithSuggestions) */\n  _handleSuggestSelect = (e) => {\n    this._value = e.detail.id;\n    this._label = e.detail.label;\n    this._addValueView(this._value, this._label, true, false);\n    this.#update();\n  };\n\n  /** Change whether okbutton can be pressed\n   * @private */\n  #update() {\n    this._valuesView.update(this.#validate());\n  }\n\n  /** Whether you can press the ok button\n   * @private\n   * @returns {boolean} */\n  #validate() {\n    return this.isValid;\n  }\n\n  //accessor\n  /** You can press the ok button if there is condition-item-value-view\n   * @type {boolean} */\n  get isValid() {\n    return this._valueViews.length > 0;\n  }\n}\n\nexport default ConditionValueEditorGene;\n","import { storeManager } from '../store/StoreManager';\nimport ConditionValueEditor from './ConditionValueEditor.js';\nimport '../components/ConditionItemValueView';\nimport { CONDITION_TYPE } from '../definition.js';\n\nconst OPTIONS = [\n  '',\n  ...[...Array(22)].map((_, index) => index + 1 + ''),\n  'X',\n  'Y',\n  'MT',\n];\n\nexport default class ConditionValueEditorLocation extends ConditionValueEditor {\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView\n   * @param {0|1} defaultValues ConditionItemView represents \"0\", ConditionGroupView represents \"1\". */\n  constructor(valuesView, conditionView, defaultValues) {\n    super(valuesView, conditionView);\n\n    // HTML\n    this._createElement(\n      'location-editor-view',\n      `\n    <header>Set location</header>\n    <div class=\"body\">\n      <div class=\"row\">\n        <label>\n          <input type=\"checkbox\" name=\"range-or-position\" value=\"single_position\"> Single position\n        </label>\n      </div>\n      <div class=\"row\">\n        <label class=\"chromosome\">\n          <span class=\"label\">Chr.</span>\n          <span class=\"form\">\n            <select>\n              ${OPTIONS.map(\n                (value) => `<option value=\"${value}\">${value}</option>`\n              ).join('')}\n            </select>\n          </span>\n          <span class=\"label\">&nbsp;:&nbsp;&nbsp;</span>\n        </label>\n        <label class=\"position\">\n          <span class=\"form range-inputs-view\" data-type=\"region\">\n            <input class=\"start\" type=\"number\" min=\"1\">\n            <span class=\"line\"></span>\n            <input class=\"end\" type=\"number\" min=\"1\">\n          </span>\n        </label>\n      </div>\n    </div>`\n    );\n\n    // references\n    const rows = this._el.querySelectorAll(':scope > .body > .row');\n    this._chr = rows[1].querySelector(':scope > .chromosome > .form > select');\n    this._rangeInputView = rows[1].querySelector(\n      ':scope > .position > .range-inputs-view'\n    );\n    const inputs = Array.from(\n      this._rangeInputView.querySelectorAll(':scope > input')\n    );\n    this._start = inputs.find((input) => input.classList.contains('start'));\n    this._end = inputs.find((input) => input.classList.contains('end'));\n    this._isWhole = false;\n\n    // attach events\n    this._el\n      .querySelector(':scope > .body > .row:nth-child(1) > label > input')\n      .addEventListener('change', (e) => {\n        this._rangeInputView.dataset.type = e.target.checked\n          ? 'single_position'\n          : 'region';\n        this._update();\n      });\n    [this._chr, ...inputs].forEach((input) => {\n      input.addEventListener('change', (e) => {\n        this._update(e);\n      });\n    });\n\n    this._karyotype = storeManager.getData('karyotype');\n\n    // default values\n    if (defaultValues) {\n      this._chr.value = defaultValues.chr;\n      this._start.value = +defaultValues.start;\n      this._end.value = +defaultValues.end;\n      this._update();\n    }\n  }\n\n  // public methods\n\n  keepLastValues() {\n    // this._lastValue = this._searchFieldView.value;\n  }\n\n  restore() {\n    // this._searchFieldView.setTerm(this._lastValue);\n    this._update();\n  }\n\n  search() {\n    this._update();\n  }\n\n  get isValid() {\n    if (this._chr.value === '') {\n      return false;\n    } else {\n      switch (this._rangeInputView.dataset.type) {\n        case 'region':\n          return (\n            this._start.value !== '' &&\n            this._end.value !== '' &&\n            +this._start.value < +this._end.value\n          );\n        case 'single_position':\n          return this._start.value !== '';\n      }\n    }\n  }\n\n  // private methods\n\n  _update(e) {\n    const reference = this._karyotype.reference;\n    const end =\n      this._karyotype.chromosomes[this._chr.value]?.region[reference][1];\n    // if chromosome changed, change ranges\n    if (e?.target === this._chr) {\n      // reset input\n      this._start.max = end;\n      this._end.max = end;\n      if (this._isWhole) this._end.value = end;\n      if (this._start.value === '') {\n        this._start.value = 1;\n        this._isWhole = true;\n      } else if (this._start.value > end) {\n        this._start.value = end;\n      }\n      if (this._end.value === '') {\n        this._end.value = end;\n        this._isWhole = true;\n      } else if (this._end.value > end) {\n        this._end.value = end;\n        this._isWhole = true;\n      }\n    } else {\n      if (this._end.value < end) {\n        this._isWhole = false;\n      }\n    }\n\n    // update value\n    const valueView = this._valueViews[0];\n    if (this.isValid) {\n      const value = `${this._chr.value}:${this._start.value}${\n        this._rangeInputView.dataset.type === 'single_position'\n          ? ''\n          : `-${this._end.value}`\n      }`;\n      if (valueView) {\n        //update\n        valueView.label = value;\n        valueView.value = value;\n      } else {\n        this._addValueView(value, value, true);\n      }\n    } else {\n      this._removeValueView();\n    }\n\n    // validation\n    this._valuesView.update(this._validate());\n  }\n\n  _validate() {\n    return this.isValid;\n  }\n}\n","import ConditionValueEditor from './ConditionValueEditor.js';\nimport SearchField from '../components/SearchField/SearchField';\n\n/** Variant ID editing screen */\nclass ConditionValueEditorVariantID extends ConditionValueEditor {\n  /**\n   * @param {ConditionValues} valuesView - _cancelButton{HTMLButtonElement}, _conditionView{ConditionItemView}, _editors{ConditionValueEditorVariantID[]}, _okButton{HTMLButtonElement}, _sections{HTMLDivElement}\n   * @param {ConditionItemView} conditionView */\n  constructor(valuesView, conditionView) {\n    super(valuesView, conditionView);\n\n    // HTML\n    this._createElement(\n      'text-field-editor-view',\n      `<header>Search for ${this._conditionType}</header>\n      <div class=\"body\"></div>`\n    );\n\n    /** @property {HTMLDivElement} _searchFieldView - CustomElement */\n    this._searchFieldView = new SearchField(this._body, 'rs1489251879');\n\n    this._searchFieldView.addEventListener('keydown', (e) => {\n      if (e.key === 'Enter') {\n        const id = this._searchFieldView.value;\n\n        if (this._searchFieldView.value.trim().length > 0) {\n          this._addValueView(id, id, false, true);\n          this.#update();\n          this._searchFieldView.value = '';\n        }\n      }\n    });\n\n    this._valuesView.conditionView.elm.addEventListener(\n      'delete-condition-item',\n      this.#handleDeleteValue.bind(this)\n    );\n  }\n\n  // public methods\n  /** Retain _valueViews when changing to edit screen\n   * See {@link ConditionValues} startToEditCondition */\n  keepLastValues() {\n    this._lastValueViews = this._valueViews;\n  }\n\n  /** If the cancel button is pressed when isFirstTime is false, restore the _valueViews before editing\n   * See {@link ConditionValues} _clickCancelButton */\n  restore() {\n    this._updateValueViews(this._lastValueViews);\n  }\n\n  // private methods\n  /** Change whether okbutton can be pressed\n   * @private */\n  #update() {\n    this._valuesView.update(this.#validate());\n  }\n\n  /** Whether you can press the ok button\n   * @private\n   * @returns {boolean} */\n  #validate() {\n    return this.isValid;\n  }\n\n  /** Delete value and _update when value's button.delete is pressed on edit screen\n   * @private\n   * @param {Event} e */\n  #handleDeleteValue(e) {\n    e.stopPropagation();\n    this._removeValueView(e.detail);\n    this.#update();\n  }\n\n  //accessor\n  /** Valid if there is a node in div.values\n   * @type {boolean} */\n  get isValid() {\n    return this._conditionView.valuesElement.hasChildNodes();\n  }\n}\n\nexport default ConditionValueEditorVariantID;\n","// import {ADVANCED_CONDITIONS} from '../global.js';\n\nexport default class ConditionView {\n  /**\n   * @param {Number} type - what number???\n   * @param {AdvancedSearchBuilderView} builder - Static Object(_container, _elm, _rootGroup, _selection, _toolbar)\n   * @param {ConditionItemView | ConditionGroupView} parentView - Dynamic Object(_builder, _container, _elm, _logicalOperatorSwitch, _mutationObserver, _type)\n   * @param {Node} referenceElm - what's this? null??\n   */\n  constructor(type, builder, parentView, referenceElm) {\n    this._type = type;\n    this._builder = builder;\n    // this._parentView = parentView;\n\n    // make HTML\n    this._elm = document.createElement('div');\n    this._elm.classList.add('advanced-search-condition-view');\n    this._elm.delegate = this;\n    parentView.container.insertBefore(this._elm, referenceElm);\n\n    // event\n    // let eventTarget;\n    // switch (type) {\n    //   case 'group':\n    //   eventTarget = this._elm;\n    //   break;\n    //   case 'item':\n    //   eventTarget = this._elm.querySelector(':scope > .body > .summary');\n    //   break;\n    // }\n    // eventTarget.addEventListener('click', e => {\n    //   e.stopPropagation();\n    // });\n  }\n\n  // private methods\n\n  _toggleSelecting(e) {\n    e.stopImmediatePropagation();\n    const ifEditing = this._elm.classList.contains('-editing');\n    if (ifEditing) return;\n\n    if (this.isSelecting) {\n      this._builder.selection.deselectConditionView(this);\n    } else {\n      this._builder.selection.selectConditionView(this, false);\n    }\n\n    // if (e.shiftKey) {\n    //   if (this.isSelecting) {\n    //     this._builder.selection.deselectConditionViews([this]);\n    //   } else {\n    //     this._builder.selection.selectConditionViews([this], false);\n    //   }\n    // } else {\n    //   this._builder.selection.selectConditionViews([this], true);\n    // }\n  }\n\n  // public methods\n\n  select() {\n    this._elm.classList.add('-selected');\n  }\n\n  deselect() {\n    this._elm.classList.remove('-selected');\n  }\n\n  remove() {\n    this.parentView.removeConditionView(this);\n    delete this;\n  }\n\n  // accessor\n\n  /**\n   * @return {HTMLElement}\n   */\n  get elm() {\n    return this._elm;\n  }\n\n  get siblingElms() {\n    return [...this._elm.parentNode.childNodes];\n  }\n\n  /**\n   * @return {Number}\n   */\n  get type() {\n    return this._type;\n  }\n\n  /**\n   * @return {Boolean}\n   */\n  get isSelecting() {\n    return this._elm.classList.contains('-selected');\n  }\n\n  /**\n   * @return {ConditionItemView | ConditionGroupView}\n   */\n  get parentView() {\n    return this.elm.parentNode.closest('.advanced-search-condition-view')\n      .delegate;\n  }\n\n  /**\n   * @param {parentView} conditionGroupView\n   */\n  set parentView(parentView) {\n    this._parentView = parentView;\n  }\n\n  get depth() {\n    let parentView = this.parentView;\n    let depth = 0;\n    while (parentView) {\n      parentView = parentView.parentView;\n      if (parentView) depth++;\n    }\n    return depth;\n  }\n}\n","import { PAGE, COLUMNS } from '../global.js';\nimport { storeManager } from '../store/StoreManager';\n\nexport default class Configuration {\n  constructor(elm) {\n    this.elm = elm;\n    this.bg = elm.querySelector('.bg');\n\n    switch (PAGE) {\n      case 'home':\n        this.initHome();\n        break;\n    }\n  }\n\n  typeEscape(e) {\n    if (e.key === 'Escape') {\n      this.close();\n    }\n  }\n\n  open() {\n    this.elm.classList.add('-shown');\n    storeManager.setData('showModal', true);\n    document.addEventListener('keyup', this.typeEscape.bind(this));\n  }\n\n  close() {\n    this.elm.classList.remove('-shown');\n    storeManager.setData('showModal', false);\n    document.removeEventListener('keyup', this.typeEscape.bind(this));\n  }\n\n  // initialize\n  initHome() {\n    storeManager.bind('columns', this);\n\n    // コンフィグ開く\n    document\n      .querySelector(\n        '#GlobalHeader > .right > nav.menus-view > .menu-wrapper > .config > .config'\n      )\n      .addEventListener('click', () => {\n        this.open();\n      });\n    // コンフィグ閉じる\n    this.bg.addEventListener('click', () => {\n      this.close();\n    });\n\n    // 設定項目\n    const CONFIGURES = [\n      {\n        // column\n        constant: COLUMNS,\n        //localStrageKey: 'columns',\n        storeKey: 'columns',\n        container: document.getElementById('ConfSortColumns'),\n      },\n    ];\n\n    for (const configure of CONFIGURES) {\n      // user settings\n      let stored = localStorage.getItem(configure.storeKey);\n      if (stored) {\n        stored = JSON.parse(stored);\n      } else {\n        // デフォルト値作成\n        stored = configure.constant.map((item) => {\n          const newItem = Object.assign({}, item);\n          newItem.isUsed = newItem.id !== 'type';\n          return newItem;\n        });\n      }\n      // 生成\n      configure.container.innerHTML = stored\n        .map(\n          (item) =>\n            `<li><label><input type=\"checkbox\" value=\"${item.id}\"${\n              item.isUsed ? ' checked' : ''\n            }>${item.label}</label></li>`\n        )\n        .join('');\n      // input イベント\n      configure.container\n        .querySelectorAll('li > label > input')\n        .forEach((input) => {\n          input.addEventListener('change', (e) => {\n            const stored = storeManager.getData(configure.storeKey);\n            const item = stored.find((item) => item.id === e.target.value);\n            item.isUsed = e.target.checked;\n            storeManager.setData(configure.storeKey, stored);\n          });\n        });\n\n      // set to store\n      storeManager.setData(configure.storeKey, stored);\n    }\n  }\n\n  columns(columns) {\n    for (const column of columns) {\n      this.elm.querySelector(\n        `#ConfSortColumns > li > label > input[value=\"${column.id}\"]`\n      ).checked = column.isUsed;\n    }\n    localStorage.setItem('columns', JSON.stringify(columns));\n  }\n}\n","import { storeManager } from '../store/StoreManager';\nimport { API_URL } from '../global.js';\n\nexport default class DownloadButton {\n  #trigger;\n  #filetype;\n  #path;\n\n  constructor(trigger) {\n    this.#trigger = trigger;\n    this.#filetype = trigger.dataset.filetype;\n    this.#path = `${API_URL}/api/download/variant`;\n\n    this.#trigger.addEventListener(\n      'click',\n      this.#downloadFile.bind(this, this.#filetype)\n    );\n  }\n\n  #downloadFile(type) {\n    switch (storeManager.getData('searchMode')) {\n      case 'simple':\n        return this.#downloadFromSimpleSearch(type);\n      case 'advanced':\n        return this.#downloadFromAdvancedSearch(type);\n    }\n  }\n\n  #downloadFromSimpleSearch(type) {\n    const query = storeManager.getData('simpleSearchConditions').term;\n    const anchor = document.createElement('a');\n    anchor.href = `${this.#path}.${type}?term=${query}`;\n    anchor.click();\n  }\n\n  #downloadFromAdvancedSearch(type) {\n    const body = { query: storeManager.getData('advancedSearchConditions') };\n    const form = document.createElement('form');\n    form.action = `${this.#path}.${type}`;\n    form.method = 'post';\n    form.enctype = 'text/plain';\n    form.setAttribute('style', 'display: none;');\n    const input = document.createElement('input');\n    input.setAttribute(\n      'name',\n      JSON.stringify(body).slice(0, -1) + ', \"dummy\": \"'\n    );\n    input.setAttribute('value', '\"}');\n    form.appendChild(input);\n    document.body.appendChild(form);\n\n    form.submit();\n  }\n}\n","import { storeManager } from '../store/StoreManager';\nimport ChromosomeView from './ChromosomeView.js';\n\nconst CHROMOSOME_KEYS = [\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '10',\n  '11',\n  '12',\n  '13',\n  '14',\n  '15',\n  '16',\n  '17',\n  '18',\n  '19',\n  '20',\n  '21',\n  '22',\n  'X',\n  'Y',\n  'MT',\n];\nconst HEIGHTS = [0, 400];\nconst DEFAULT = {\n  isOpened: false,\n  isShowBand: true,\n  height: HEIGHTS[0],\n  reference: 'GRCh37', // TODO:,\n  version: 1,\n  chromosomes: {\n    1: {\n      selected: true,\n      region: {\n        GRCh37: [1, 249250621],\n        GRCh38: [1, 248956422],\n      },\n    },\n    2: {\n      selected: true,\n      region: {\n        GRCh37: [1, 243199373],\n        GRCh38: [1, 242193529],\n      },\n    },\n    3: {\n      selected: true,\n      region: {\n        GRCh37: [1, 198022430],\n        GRCh38: [1, 198295559],\n      },\n    },\n    4: {\n      selected: true,\n      region: {\n        GRCh37: [1, 191154276],\n        GRCh38: [1, 190214555],\n      },\n    },\n    5: {\n      selected: true,\n      region: {\n        GRCh37: [1, 180915260],\n        GRCh38: [1, 181538259],\n      },\n    },\n    6: {\n      selected: true,\n      region: {\n        GRCh37: [1, 171115067],\n        GRCh38: [1, 170805979],\n      },\n    },\n    7: {\n      selected: true,\n      region: {\n        GRCh37: [1, 159138663],\n        GRCh38: [1, 159345973],\n      },\n    },\n    8: {\n      selected: true,\n      region: {\n        GRCh37: [1, 146364022],\n        GRCh38: [1, 145138636],\n      },\n    },\n    9: {\n      selected: true,\n      region: {\n        GRCh37: [1, 141213431],\n        GRCh38: [1, 138394717],\n      },\n    },\n    10: {\n      selected: true,\n      region: {\n        GRCh37: [1, 135534747],\n        GRCh38: [1, 133797422],\n      },\n    },\n    11: {\n      selected: true,\n      region: {\n        GRCh37: [1, 135006516],\n        GRCh38: [1, 135086622],\n      },\n    },\n    12: {\n      selected: true,\n      region: {\n        GRCh37: [1, 133851895],\n        GRCh38: [1, 133275309],\n      },\n    },\n    13: {\n      selected: true,\n      region: {\n        GRCh37: [1, 115169878],\n        GRCh38: [1, 114364328],\n      },\n    },\n    14: {\n      selected: true,\n      region: {\n        GRCh37: [1, 107349540],\n        GRCh38: [1, 107043718],\n      },\n    },\n    15: {\n      selected: true,\n      region: {\n        GRCh37: [1, 102531392],\n        GRCh38: [1, 101991189],\n      },\n    },\n    16: {\n      selected: true,\n      region: {\n        GRCh37: [1, 90354753],\n        GRCh38: [1, 90338345],\n      },\n    },\n    17: {\n      selected: true,\n      region: {\n        GRCh37: [1, 81195210],\n        GRCh38: [1, 83257441],\n      },\n    },\n    18: {\n      selected: true,\n      region: {\n        GRCh37: [1, 78077248],\n        GRCh38: [1, 80373285],\n      },\n    },\n    19: {\n      selected: true,\n      region: {\n        GRCh37: [1, 59128983],\n        GRCh38: [1, 58617616],\n      },\n    },\n    20: {\n      selected: true,\n      region: {\n        GRCh37: [1, 63025520],\n        GRCh38: [1, 64444167],\n      },\n    },\n    21: {\n      selected: true,\n      region: {\n        GRCh37: [1, 48129895],\n        GRCh38: [1, 46709983],\n      },\n    },\n    22: {\n      selected: true,\n      region: {\n        GRCh37: [1, 51304566],\n        GRCh38: [1, 50818468],\n      },\n    },\n    X: {\n      selected: true,\n      region: {\n        GRCh37: [1, 155270560],\n        GRCh38: [1, 156040895],\n      },\n    },\n    Y: {\n      selected: true,\n      region: {\n        GRCh37: [1, 59373566],\n        GRCh38: [1, 57227415],\n      },\n    },\n    MT: {\n      selected: true,\n      region: {\n        GRCh37: [1, 16569],\n        GRCh38: [1, 16569],\n      },\n    },\n  },\n};\nconst REGEXP = new RegExp(/([1-9]|1\\d|2[0-2]|X|Y|MT):(\\d+)-?(\\d+)?/);\n\nlet karyotype = JSON.parse(localStorage.getItem('karyotype'));\n\nfunction initialiseKaryotype() {\n  if (!karyotype || karyotype.version !== DEFAULT.version) {\n    karyotype = DEFAULT;\n  }\n}\n\ninitialiseKaryotype();\n\nconst tsv =\n  (await import(`../../assets/${karyotype.reference}/karyotype.tsv`)).default ||\n  [];\n\nexport default class Karyotype {\n  constructor(elm) {\n    this.elm = elm;\n    this.isReady = false;\n    this.chromosomes = this.elm.querySelector('.content > .chromosomes');\n    this.chromosomeViews;\n\n    storeManager.setData('karyotype', karyotype);\n\n    // events\n    storeManager.bind('karyotype', this);\n    storeManager.bind('simpleSearchConditions', this);\n    storeManager.bind('advancedSearchConditions', this);\n    // ビューの開閉\n    this.elm.querySelector('.header').addEventListener('click', () => {\n      const karyotype = storeManager.getData('karyotype');\n      this._changeKaryotype({\n        isOpened: !karyotype.isOpened,\n        height: karyotype.isOpened ? HEIGHTS[0] : HEIGHTS[1],\n      });\n      return false;\n    });\n    // 設定関係\n    const buttons = this.elm.querySelectorAll(\n      '#KariotypeSwitchBandVisibility > .button'\n    );\n    buttons.forEach((button) => {\n      button.addEventListener('click', (e) => {\n        this._changeKaryotype({\n          isShowBand: e.target.dataset.value === 'show',\n        });\n      });\n    });\n    this._bandShowButton = Array.from(buttons).filter(\n      (elm) => elm.dataset.value === 'show'\n    )[0];\n    this._bandHideButton = Array.from(buttons).filter(\n      (elm) => elm.dataset.value === 'hide'\n    )[0];\n\n    // 染色体座標データ\n\n    this.geneMap = this.parseGeneMap(tsv);\n    this.maxLength = Math.max(\n      ...this.geneMap.map((chromosome) => chromosome[chromosome.length - 1].end)\n    );\n    this._drawChromosome(this.geneMap);\n    //fetch(`./assets/${karyotype.reference}.tsv`)\n    //  .then(response => response.text())\n    //  .then(tsv => {\n    //    this.geneMap = this.parseGeneMap(tsv);\n    //    this.maxLength = Math.max(...this.geneMap.map(chromosome => chromosome[chromosome.length - 1].end));\n    //    this._drawChromosome(this.geneMap);\n    //  });\n\n    // ストアの情報を反映\n    this.karyotype(storeManager.getData('karyotype'));\n  }\n\n  // TSVから総位置データ取り出し\n  parseGeneMap(tsv) {\n    const geneMap = [];\n    //const positions = tsv.split('\\n').map(row => row.split('\\t'));\n    for (const chromosomeKey of CHROMOSOME_KEYS) {\n      // 染色体ごとの位置データ\n      const chromosome = tsv.filter(\n        (position) => position[0] === `chr${chromosomeKey}`\n      );\n      //const chromosome = positions.filter(position => position[0] === `chr${chromosomeKey}`);\n      // データ整形\n      geneMap.push(\n        chromosome.map((position) => {\n          return {\n            start: parseInt(position[1]),\n            end: parseInt(position[2]),\n            band: position[3].split('.')[0],\n            subBand: position[3],\n            stainType: position[4],\n          };\n        })\n      );\n    }\n    return geneMap;\n  }\n\n  // 染色体の描画\n  _drawChromosome(geneMap) {\n    this.chromosomeViews = [];\n    this.chromosomes.innerHTML = CHROMOSOME_KEYS.map(\n      (key) => `<div id=\"chromosome${key}\" class=\"chromosome-view\"></div>`\n    ).join('');\n    for (let i = 0; i < geneMap.length; i++) {\n      this.chromosomeViews.push(\n        new ChromosomeView(\n          this.chromosomes.querySelector(`#chromosome${CHROMOSOME_KEYS[i]}`),\n          CHROMOSOME_KEYS[i],\n          geneMap[i],\n          this.maxLength\n        )\n      );\n    }\n  }\n\n  // 核型の設定変更\n  _changeKaryotype(params) {\n    const karyotype = storeManager.getData('karyotype');\n    for (const key in params) {\n      karyotype[key] = params[key];\n    }\n    storeManager.setData('karyotype', karyotype);\n    localStorage.setItem('karyotype', JSON.stringify(karyotype));\n  }\n\n  // 核型の設定変更後に呼ばれる\n  karyotype(karyotype) {\n    // 開閉\n    if (karyotype.isOpened) {\n      document.getElementsByTagName('body')[0].classList.add('-drawer-opened');\n    } else {\n      document\n        .getElementsByTagName('body')[0]\n        .classList.remove('-drawer-opened');\n    }\n    // バンドの表示\n    if (karyotype.isShowBand) {\n      this.elm.classList.add('-show-band-label');\n      this._bandShowButton.classList.add('-current');\n      this._bandHideButton.classList.remove('-current');\n    } else {\n      this.elm.classList.remove('-show-band-label');\n      this._bandShowButton.classList.remove('-current');\n      this._bandHideButton.classList.add('-current');\n    }\n    // リファレンスゲノム\n    // 染色体の選択\n    // 染色体の範囲の選択\n  }\n\n  simpleSearchConditions(conditions) {\n    const result = REGEXP.exec(conditions.term);\n    if (result) {\n      const location = { chromosome: result[1] };\n      if (result[3]) {\n        if (+result[2] > +result[3]) return;\n        location.position = { gte: +result[2], lte: +result[3] };\n      } else {\n        location.position = +result[2];\n      }\n      this._updateLocations([location]);\n    } else {\n      this._updateLocations([]);\n    }\n  }\n  advancedSearchConditions(conditions) {\n    const locations = [];\n    const takeOutLocations = (conditions) => {\n      Object.keys(conditions).forEach((key) => {\n        switch (key) {\n          case 'or':\n          case 'and':\n            conditions[key].forEach((condition) => takeOutLocations(condition));\n            break;\n          case 'location':\n            locations.push(conditions[key]);\n            break;\n        }\n      });\n    };\n    takeOutLocations(conditions);\n    this._updateLocations(locations);\n  }\n  _updateLocations(locations) {\n    this.elm.dataset.isSelectingChromosome = locations.length > 0;\n    if (locations.length === 0) return;\n    const collectedLocations = {};\n    locations.forEach((location) => {\n      if (!collectedLocations[location.chromosome])\n        collectedLocations[location.chromosome] = { positions: [] };\n      collectedLocations[location.chromosome].positions.push(\n        typeof location.position === 'number'\n          ? [location.position, location.position]\n          : [location.position.gte, location.position.lte]\n      );\n    });\n    this.chromosomeViews.forEach((chromosomeView) => {\n      chromosomeView.updateSelectedPositions(\n        collectedLocations[chromosomeView.no]?.positions ?? []\n      );\n    });\n  }\n}\n","import TopPageLayoutManager from './TopPageLayoutManager.js';\n\nexport default class ModuleTabsView {\n  constructor(elm) {\n    const tabs = Array.from(\n      elm.querySelectorAll(':scope > .tabscontainer > ul > li')\n    );\n    const sections = Array.from(\n      elm.querySelectorAll(':scope > .sectionscontainer > *')\n    );\n\n    // attach event\n    tabs.forEach((tab) => {\n      tab.target = sections.find(\n        (section) => section.dataset.tabId === tab.dataset.target\n      );\n      tab.addEventListener('click', (e) => {\n        // reset\n        tabs.forEach((tab) => tab.classList.remove('-current'));\n        sections.forEach((tab) => tab.classList.remove('-current'));\n        // select tab\n        e.target.classList.add('-current');\n        e.target.target.classList.add('-current');\n        // set status in localStorage\n        window.localStorage.setItem(\n          e.target.dataset.tabGroup,\n          e.target.dataset.target\n        );\n        // update layout\n        TopPageLayoutManager.update();\n      });\n    });\n\n    // default\n    // if bound to URL params, URL params are preferred\n    let storedTab = window.localStorage.getItem(tabs[0].dataset.tabGroup);\n    const boundUrlParam = elm.dataset.boundUrlParam;\n    if (elm.dataset.boundUrlParam) {\n      const param = new URL(window.location).searchParams.get(boundUrlParam);\n      storedTab = param ?? storedTab;\n    }\n    let selectedTab = tabs[0];\n    if (storedTab) {\n      const foundTab = tabs.find((tab) => tab.dataset.target === storedTab);\n      selectedTab = foundTab ?? selectedTab;\n    }\n    selectedTab.dispatchEvent(new Event('click'));\n  }\n}\n","/** The core of Statistics / Filters PanelView.\n * Superclass of\n * {@link PanelViewCheckList},\n * {@link PanelViewFilterAlternativeAlleleFrequency},\n * {@link PanelViewFilterConsequence},\n * {@link PanelViewFilterVariantCallingQuality},\n * {@link PanelViewPreviewAlternativeAlleleFrequencies},\n * {@link PanelViewPreviewClinicalSignificance},\n * {@link PanelViewPreviewConsequence},\n * {@link PanelViewPreviewExternalLinks},\n * {@link PanelViewPreviewGene},\n * {@link PreviewToVariantReport},\n * */\nclass PanelView {\n  /**\n   * @param {Element} elm - Panel element section.panel-view\n   * @param {string} kind - Panel id (dataset, ferequency, quality, type, significance, consequence, shift, polyphen, alphamissense) */\n  constructor(elm, kind) {\n    this.elm = elm;\n    this.kind = kind;\n    this.localStorageKey = 'panel_' + kind;\n\n    // Use local storage and manage panel opening/closing\n    if (window.localStorage.getItem(this.localStorageKey) === 'collapsed') {\n      elm.classList.add('-collapsed');\n    }\n    // collapse event\n    elm.querySelector('.title').addEventListener('click', () => {\n      elm.classList.toggle('-collapsed');\n      window.localStorage.setItem(this.localStorageKey, elm.classList.contains('-collapsed') ? 'collapsed' : '');\n    })\n\n  }\n}\n\nexport default PanelView","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\nimport {\n  setSimpleSearchCondition,\n  getSimpleSearchCondition,\n} from '../store/searchManager';\n\n/**  Dataset of Statistics / Filters\n * @param {Element} elm - Panel element section.panel-view (#FilterDatasets | #FilterVariantType | #FilterClinicalSignificance | #FilterSift | #FilterPolyphen | #FilterAlphaMissense)\n * @param {string} kind - Panel id (dataset | type | significance | sift | polyphen | alphamissense)\n * @param {string} statisticsType - (statisticsDataset | statisticsType | statisticsSignificance | undefined) */\nexport default class PanelViewCheckList extends PanelView {\n  constructor(elm, kind, statisticsType) {\n    super(elm, kind);\n    this._statisticsType = statisticsType;\n    // 検索条件マスター\n    const conditionMaster = storeManager\n      .getData('simpleSearchConditionsMaster')\n      .find((condition) => condition.id === this.kind);\n\n    // GUIの生成\n    this._createGUI(conditionMaster);\n    // references\n    const condition = getSimpleSearchCondition(this.kind);\n    this._inputsValues = {};\n    this.elm\n      .querySelectorAll('.content > .checklist-values > .item > .label > input')\n      .forEach((input) => {\n        this._inputsValues[input.value] = {\n          input: input,\n          value: input.parentNode.nextElementSibling,\n        };\n        if (condition && condition[input.value]) {\n          // チェックの初期状態\n          input.checked = condition[input.value] === '1';\n        }\n      });\n\n    this._changeFilter();\n    // events\n    for (const key in this._inputsValues) {\n      this._inputsValues[key].input.addEventListener(\n        'change',\n        this._changeFilter.bind(this)\n      );\n    }\n\n    storeManager.bind('simpleSearchConditions', this);\n    storeManager.bind(this._statisticsType, this);\n\n    // 統計情報の更新\n    this[this._statisticsType] = (values) => {\n      if (values) {\n        let all = 0;\n        for (const key in this._inputsValues) {\n          const count = values[key] ? values[key] : 0;\n          all += count;\n          this._inputsValues[key].value.textContent = count.toLocaleString();\n        }\n        this._inputsValues.all.value.textContent = all.toLocaleString();\n      } else {\n        for (const key in this._inputsValues) {\n          this._inputsValues[key].value.textContent = 'N/A';\n        }\n        this._inputsValues.all.value.textContent = 'N/A';\n      }\n      this._inputsValues.all.value.textContent = storeManager\n        .getData('searchStatus')\n        .filtered.toLocaleString();\n    };\n  }\n\n  _createGUI(conditionMaster) {\n    let html = `\n    <li class=\"item\">\n      <label class=\"label\">\n        <input type=\"checkbox\" value=\"all\" checked>\n        All\n      </label>\n      <span class=\"value\"></span>\n    </li>\n    <li class=\"separator\"><hr></li>\n    `;\n    if (this.kind === 'significance') {\n      html += `\n      <li class=\"item\">\n        <label class=\"label\">\n          <input type=\"checkbox\" value=\"NC\" checked>\n          Unassigned\n        </label>\n        <span class=\"value\"></span>\n      </li>\n      <li class=\"separator\"><hr></li>\n      `;\n    }\n    if (this.kind === 'alphamissense') {\n      html += `\n      <li class=\"item\">\n        <label class=\"label\">\n          <input type=\"checkbox\" value=\"N\" checked>\n          Unassigned\n        </label>\n        <span class=\"value\"></span>\n      </li>\n      <li class=\"separator\"><hr></li>\n      `;\n    }\n    if (this.kind === 'sift') {\n      html += `\n      <li class=\"item\">\n        <label class=\"label\">\n          <input type=\"checkbox\" value=\"N\" checked>\n          Unassigned\n        </label>\n        <span class=\"value\"></span>\n      </li>\n      <li class=\"separator\"><hr></li>\n      `;\n    }\n    if (this.kind === 'polyphen') {\n      html += `\n      <li class=\"item\">\n        <label class=\"label\">\n          <input type=\"checkbox\" value=\"N\" checked>\n          Unassigned\n        </label>\n        <span class=\"value\"></span>\n      </li>\n      <li class=\"separator\"><hr></li>\n      `;\n    }\n\n    html += conditionMaster.items\n      .map(\n        (item) => `\n    <li class=\"item\">\n      <label class=\"label\">\n        <input type=\"checkbox\" value=\"${item.id}\" checked>\n        ${\n          this.kind === 'dataset'\n            ? `<div class=\"dataset-icon\" data-dataset=\"${item.id}\"><div class=\"properties\"></div></div>`\n            : ''\n        }\n        ${\n          this.kind === 'significance'\n            ? `<div class=\"clinical-significance\" data-value=\"${item.id}\"></div>`\n            : ''\n        }\n        ${\n          this.kind === 'sift'\n            ? `<div class=\"variant-function _width_5em _align-center\" data-function=\"${\n                item.id\n              }\">${{ D: '&lt; 0.05', T: '&ge; 0.05' }[item.id]}</div>`\n            : ''\n        }\n        ${\n          this.kind === 'polyphen'\n            ? `<div class=\"variant-function _width_5em _align-center\" data-function=\"${\n                item.id\n              }\">${\n                {\n                  PROBD: '&gt; 0.908',\n                  POSSD: '&gt; 0.446',\n                  B: '&le; 0.446',\n                  U: 'Unknown',\n                }[item.id]\n              }</div>`\n            : ''\n        }\n        ${\n          this.kind === 'alphamissense'\n            ? `<div class=\"variant-function _width_5em _align-center\" data-function=\"${\n                item.id\n              }\">${\n                { LP: '&gt; 0.564', A: '&ge; 0.340', LB: '&lt; 0.340' }[item.id]\n              }</div>`\n            : ''\n        }\n        ${item.label}\n      </label>\n      <span class=\"value\"></span>\n    </li>\n    `\n      )\n      .join('');\n    this.elm\n      .querySelector('.content > .checklist-values')\n      .insertAdjacentHTML('beforeend', html);\n    // not検索の重複を削除\n    if (\n      ['significance', 'alphamissense', 'sift', 'polyphen'].includes(this.kind)\n    ) {\n      this.elm\n        .querySelector('.content > .checklist-values > .item:nth-child(5)')\n        .remove();\n    }\n  }\n\n  // フィルターの変更\n  _changeFilter(e) {\n    if (e && e.target.value === 'all') {\n      // all\n      if (e.target.checked) {\n        // 全選択\n        for (const key in this._inputsValues) {\n          this._inputsValues[key].input.checked = true;\n        }\n      } else {\n        // 全選択解除\n        for (const key in this._inputsValues) {\n          this._inputsValues[key].input.checked = false;\n        }\n      }\n    } else {\n      // not all\n      let isAll = 0;\n      for (const key in this._inputsValues) {\n        if (key !== 'all') {\n          isAll += !this._inputsValues[key].input.checked;\n        }\n      }\n      this._inputsValues.all.input.checked = isAll === 0;\n    }\n    // Store に検索条件をセット\n    const checked = {};\n    for (const key in this._inputsValues) {\n      if (key !== 'all') {\n        checked[key] = this._inputsValues[key].input.checked ? '1' : '0';\n      }\n    }\n    setSimpleSearchCondition(this.kind, checked);\n  }\n\n  // フィルターを更新すると呼ばれる\n  simpleSearchConditions(conditions) {\n    let isAll = 0;\n    for (const key in conditions[this.kind]) {\n      this._inputsValues[key].input.checked =\n        conditions[this.kind][key] !== '0';\n      isAll += conditions[this.kind][key] === '0';\n    }\n    this._inputsValues.all.input.checked = isAll === 0;\n  }\n}\n","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\nimport {\n  setSimpleSearchCondition,\n  getSimpleSearchCondition,\n  getSimpleSearchConditionMaster,\n} from '../store/searchManager';\nimport '../components/RangeSliderView.js';\n\nexport default class PanelViewFilterAlternativeAlleleFrequency extends PanelView {\n  constructor(elm) {\n    super(elm, 'frequency');\n\n    // default values\n    this._conditionMaster = getSimpleSearchConditionMaster(this.kind);\n    const condition = this._getConditionFromStore();\n\n    const rangeSlider = document.createElement('range-slider');\n    rangeSlider.value1 = condition.from;\n    rangeSlider.value2 = condition.to;\n    rangeSlider.sliderStep = 0.01;\n    rangeSlider.inputStep = 0.05;\n    rangeSlider.searchType = 'simple';\n\n    rangeSlider.addEventListener('range-changed', (e) => {\n      e.stopPropagation();\n      this.changeParameter(e.detail);\n    });\n\n    this.elm.querySelector('.range-selector-view').appendChild(rangeSlider);\n    this._rangeSelectorView = rangeSlider;\n\n    // events\n    storeManager.bind('simpleSearchConditions', this);\n  }\n\n  changeParameter(newCondition) {\n    const condition = this._getConditionFromStore();\n    for (const key in newCondition) {\n      condition[key] = newCondition[key];\n    }\n    setSimpleSearchCondition(this.kind, condition);\n  }\n\n  simpleSearchConditions(conditions) {\n    const condition = conditions[this.kind];\n    if (condition === undefined) return;\n  }\n\n  _getConditionFromStore() {\n    let condition = getSimpleSearchCondition(this.kind);\n    // if the condition is undefined, generate it from master\n    condition = condition\n      ? condition\n      : this._conditionMaster.items.reduce(\n          (acc, item) => Object.assign(acc, { [item.id]: item.default }),\n          {}\n        );\n    // if each items of the condition are not defined, generate them from master\n    for (const item of this._conditionMaster.items) {\n      condition[item.id] = condition[item.id]\n        ? condition[item.id]\n        : this._conditionMaster.items.find(\n            (frequency) => frequency.id === item.id\n          ).default;\n    }\n    return condition;\n  }\n}\n","import TopPageLayoutManager from \"./TopPageLayoutManager.js\";\n\nexport default class CollapseView {\n\n  constructor(collapseView) {\n    this.setup(collapseView);\n  }\n\n  setup(collapseView) {\n    if (collapseView.classList.contains('-terminal')) return;\n\n    // collapse event\n    collapseView.querySelector('.collapsebutton').addEventListener('click', _e => {\n      collapseView.classList.toggle('-collapsed');\n      // unstructured case\n      if (collapseView.classList.contains('-unstructured')) {\n        this.collapseTargets.forEach(target => {\n          const isParentCollapsed = target.ancestors.some(tr => tr.querySelector('.collapse-view').classList.contains('-collapsed'));\n          target.TR.style.display = isParentCollapsed ? 'none' : 'table-row';\n        });\n      }\n      // set status in localStorage\n      window.localStorage.setItem(collapseId, collapseView.classList.contains('-collapsed') ? 'collapsed' : '');\n      // update layout\n      if (collapseView.dataset.collapseId === 'advanced-search') {\n        TopPageLayoutManager.update();\n      }\n    });\n\n    // collapse targets\n    if (collapseView.classList.contains('-unstructured')) {\n      this.collapseTargets = [];\n      const ancestors = [];\n      const depth = parseInt(collapseView.dataset.collapseDepth);\n      let parentNode = collapseView;\n      while (parentNode.tagName !== 'TR') {\n        parentNode = parentNode.parentNode;\n      }\n      ancestors[depth] = parentNode;\n      let nextTR = parentNode.nextSibling;\n      while (nextTR !== null) {\n        let isValid = false, targetDepth;\n        const target = nextTR.querySelector('.collapse-view[data-collapse-depth]');\n        if (target) {\n          targetDepth = target.dataset.collapseDepth;\n          if (targetDepth) {\n            targetDepth = parseInt(targetDepth);\n            if (targetDepth > depth) {\n              isValid = true;\n            }\n          }\n        }\n        if (isValid) {\n          ancestors[targetDepth] = nextTR;\n          this.collapseTargets.push({\n            ancestors: ancestors.slice(depth, targetDepth),\n            TR:  nextTR\n          });\n          nextTR = nextTR.nextSibling;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // default status\n    const collapseId = collapseView.dataset.collapseId;\n    if (collapseId && window.localStorage.getItem(collapseId) === 'collapsed') {\n      collapseView.querySelector('.collapsebutton').dispatchEvent(new Event('click'));\n    }\n\n  }\n  \n}\n","import CollapseView from './CollapseView.js';\nimport PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\nimport {\n  setSimpleSearchCondition,\n  getSimpleSearchCondition,\n  getSimpleSearchConditionMaster,\n} from '../store/searchManager';\n\nconst KIND_OF_CONDITION = 'consequence';\n\nexport default class PanelViewFilterConsequence extends PanelView {\n  constructor(elm) {\n    super(elm, 'consequence');\n    // 検索条件マスター\n    const conditionMaster = getSimpleSearchConditionMaster(this.kind);\n    const grouping = getSimpleSearchConditionMaster(\n      'consequence_grouping'\n    ).items;\n    // GUIの生成\n    this._createGUI(conditionMaster, grouping);\n    // collapse menu\n    elm\n      .querySelectorAll('.collapse-view')\n      .forEach((collapseView) => new CollapseView(collapseView));\n    // references\n    const condition = getSimpleSearchCondition(this.kind);\n    this._inputsValues = {};\n    this.elm\n      .querySelectorAll('.content > .checklist-values input')\n      .forEach((input) => {\n        this._inputsValues[input.value] = {\n          input: input,\n          value: input.parentNode.nextElementSibling,\n        };\n        if (condition && condition[input.value]) {\n          // チェックの初期状態\n          input.checked = condition[input.value] === '1';\n        }\n      });\n    this._inputsValues.all.values = this.findValues(grouping, []); // 入れ子要素を持つチェックボックスの子要素を収集\n    this.updateNestedCheckboxes();\n    // events\n    for (const key in this._inputsValues) {\n      this._inputsValues[key].input.addEventListener(\n        'change',\n        this._changeFilter.bind(this)\n      );\n    }\n    storeManager.bind('simpleSearchConditions', this);\n    storeManager.bind('statisticsConsequence', this);\n  }\n\n  /*\n  // 検索条件マスター\n  searchConditionsMaster(master) {\n    const conditionMaster = master.find(condition => condition.id === this.kind).items;\n    const grouping = master.find(condition => condition.id === 'consequence_grouping').items;\n    console.log(grouping)\n    // GUIの生成\n    this._createGUI(conditionMaster, grouping);\n    // accordion\n    this.elm.querySelectorAll('.-haschildren > .accordionbutton').forEach(elm => {\n      elm.addEventListener('click', () => {\n        elm.parentNode.classList.toggle('-collapsed');\n      })\n    });\n    // references\n    const condition = storeManager.getSimpleSearchCondition(this.kind);\n    console.log(condition)\n    this._inputsValues = {};\n    this.elm.querySelectorAll('.content > .checklist-values input').forEach(input => {\n      this._inputsValues[input.value] = {\n        input: input,\n        value: input.parentNode.nextElementSibling\n      }\n      if (condition && condition[input.value]) { // チェックの初期状態\n        input.checked = condition[input.value] === '1';\n      }\n    });\n    console.log(this._inputsValues)\n  }\n  */\n\n  _createGUI(conditionMaster, grouping) {\n    let html = `\n      <li class=\"item\">\n        <label class=\"label\">\n          <input type=\"checkbox\" value=\"all\" data-has-children=\"true\" checked>\n          All\n        </label>\n        <span class=\"value\"></span>\n      </li>\n      <li class=\"separator\"><hr></li>\n    `;\n    html += grouping\n      .map((group) => this.render(conditionMaster, group))\n      .join('');\n    this.elm\n      .querySelector('.content > .checklist-values')\n      .insertAdjacentHTML('beforeend', html);\n    // transcript variant は開く\n    this.elm\n      .querySelector('.content > .checklist-values > .item:nth-child(3)')\n      .classList.remove('-collapsed');\n  }\n\n  render(conditionMaster, item) {\n    const hasChildren = typeof item === 'object';\n    item = hasChildren\n      ? item\n      : conditionMaster.items.find((condition) => condition.id === item);\n\n    return `\n      <li class=\"item${\n        hasChildren ? ' collapse-view -hierarchic -collapsed' : ''\n      }\">\n        ${hasChildren ? '<div class=\"collapsebutton\"></div>' : ''}\n        <label class=\"label\">\n          <input type=\"checkbox\" value=\"${\n            item.id ? item.id : item.label\n          }\" data-has-children=\"${item.items ? 'true' : 'false'}\" checked>\n          ${item.label}\n        </label>\n        <span class=\"value\"></span>\n        ${\n          hasChildren\n            ? `\n        <ul class=\"checklist-values collapsecontent\">\n          ${item.items\n            .map((item) => this.render(conditionMaster, item))\n            .join('')}\n        </ul>\n        `\n            : ''\n        }\n      </li>\n    `;\n  }\n\n  // 入れ子の consequence の値を収集\n  findValues(items, accumulator) {\n    let values = [];\n    for (const item of items) {\n      const hasChildren = typeof item === 'object';\n      if (hasChildren) {\n        const values2 = this.findValues(item.items, []);\n        this._inputsValues[item.label].values = values2;\n        values = values.concat(values2);\n      } else {\n        accumulator.push(item);\n      }\n    }\n    values = values.concat(accumulator);\n    return values;\n  }\n\n  // フィルターの変更\n  _changeFilter(e) {\n    if (e && e.target.value === 'all') {\n      // all\n      if (e.target.checked) {\n        // 全選択\n        for (const key in this._inputsValues) {\n          this._inputsValues[key].input.checked = true;\n        }\n      } else {\n        // 全選択解除\n        for (const key in this._inputsValues) {\n          this._inputsValues[key].input.checked = false;\n        }\n      }\n    } else if (e.target.dataset.hasChildren === 'true') {\n      // 子要素のあるチェックボックスの場合、子要素のチェック状態を変更\n      for (const value of this._inputsValues[e.target.value].values) {\n        this._inputsValues[value].input.checked = e.target.checked;\n      }\n    } else {\n      // not all\n      this.updateNestedCheckboxes();\n    }\n    // Store に検索条件をセット\n    const checked = {};\n    for (const key in this._inputsValues) {\n      const input = this._inputsValues[key];\n      if (input.values === undefined) {\n        checked[key] = this._inputsValues[key].input.checked ? '1' : '0';\n      }\n    }\n    setSimpleSearchCondition(KIND_OF_CONDITION, checked);\n  }\n\n  updateNestedCheckboxes() {\n    for (const key in this._inputsValues) {\n      const input = this._inputsValues[key];\n      if (input.values) {\n        // 入れ子要素のある要素の選択状態\n        input.input.checked = !input.values.reduce(\n          (accumulator, value) =>\n            accumulator + !this._inputsValues[value].input.checked,\n          0\n        );\n      }\n    }\n  }\n\n  // フィルターを更新すると呼ばれる\n  simpleSearchConditions(conditions) {\n    for (const key in conditions[KIND_OF_CONDITION]) {\n      this._inputsValues[key].input.checked =\n        conditions[KIND_OF_CONDITION][key] !== '0';\n    }\n    this.updateNestedCheckboxes();\n  }\n\n  // 統計情報の更新\n  statisticsConsequence(values) {\n    if (values) {\n      for (const key in this._inputsValues) {\n        const input = this._inputsValues[key];\n        if (input.values === undefined) {\n          // 入れ子要素を持たない項目\n          input.value.textContent = (\n            values[key] ? values[key] : 0\n          ).toLocaleString();\n        }\n      }\n    } else {\n      // 統計値が帰ってこなかった場合\n      for (const key in this._inputsValues) {\n        const input = this._inputsValues[key];\n        if (input.values === undefined) {\n          this._inputsValues[key].value.textContent = '0';\n        }\n      }\n    }\n    this._inputsValues.all.value.textContent = storeManager\n      .getData('searchStatus')\n      .filtered.toLocaleString();\n  }\n}\n","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\nimport {\n  setSimpleSearchCondition,\n  getSimpleSearchCondition,\n} from '../store/searchManager';\n\nexport default class PanelViewFilterVariantCallingQuality extends PanelView {\n  constructor(elm) {\n    super(elm, 'quality');\n    storeManager.bind('simpleSearchConditions', this);\n    // reference\n    this.checkbox = this.elm.querySelector('.content > label > input');\n    // event\n    this.checkbox.addEventListener('change', this.change.bind(this));\n    this.checkbox.dispatchEvent(new Event('change'));\n    // initial condition\n    const condition = getSimpleSearchCondition(this.kind);\n    this.checkbox.checked = condition === undefined;\n  }\n\n  change(e) {\n    setSimpleSearchCondition('quality', e.target.checked ? '1' : '0');\n  }\n\n  simpleSearchConditions(conditions) {\n    if (conditions.quality !== undefined) {\n      this.checkbox.checked = conditions.quality === '1';\n    }\n  }\n}\n","import { strIns } from '../global.js';\nimport PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\nimport { getSimpleSearchConditionMaster } from '../store/searchManager';\n\nconst DECIMAL_DIGIT = 4;\n\nexport default class PanelViewPreviewAlternativeAlleleFrequencies extends PanelView {\n  constructor(elm) {\n    super(elm, 'frenquecies');\n    storeManager.bind('selectedRow', this);\n    storeManager.bind('offset', this);\n    const tbody = this.elm.querySelector('.frequency-detail > tbody');\n    this._master = getSimpleSearchConditionMaster('dataset').items;\n    // make DOM\n    tbody.innerHTML = this._master\n      .map((dataset) => {\n        if (dataset.has_freq) {\n          return `<tr data-dataset=\"${dataset.id}\">\n          <td>\n            <div class=\"dataset-icon\" data-dataset=\"${dataset.id}\">\n              <div class=\"properties\"></div>\n            </div>\n            ${dataset.label}\n          </td>\n          <td class=\"alt\"></td>\n          <td class=\"total\"></td>\n          <td class=\"frequency\"></td>\n        </tr>`;\n        } else {\n          return '';\n        }\n      })\n      .join('');\n    // set DOM reference\n    this._datasets = {};\n    for (const dataset of this._master) {\n      if (dataset.has_freq) {\n        const tr = tbody.querySelector(`tr[data-dataset=\"${dataset.id}\"]`);\n        this._datasets[dataset.id] = {\n          alt: tr.querySelector('.alt'),\n          total: tr.querySelector('.total'),\n          frequency: tr.querySelector('.frequency'),\n        };\n      }\n    }\n  }\n\n  selectedRow() {\n    this._update();\n  }\n\n  offset() {\n    this._update();\n  }\n\n  _update() {\n    if (storeManager.getData('selectedRow') !== undefined) {\n      const record = storeManager.getSelectedRecord();\n      if (record) {\n        for (const dataset of this._master) {\n          if (dataset.has_freq) {\n            const frequency = record.frequencies\n              ? record.frequencies.find(\n                  (frequency) => frequency.source === dataset.id\n                )\n              : null;\n            if (frequency) {\n              // 頻度情報があれば頻度情報を表示\n              this._datasets[dataset.id].alt.textContent =\n                frequency.ac.toLocaleString();\n              this._datasets[dataset.id].total.textContent =\n                frequency.an.toLocaleString();\n              if ((frequency.af + '').length > DECIMAL_DIGIT + 2) {\n                // 規定の桁数より大きい少数の場合、規定の少数に丸める。0になる場合は指数で表示\n                const numOfDigits = (frequency.af + '').length;\n                const integerized = (\n                  frequency.af * 10 ** numOfDigits +\n                  ''\n                ).padStart(numOfDigits, '0');\n                const rounded = Math.round(\n                  parseFloat(\n                    integerized.slice(0, DECIMAL_DIGIT) +\n                      '.' +\n                      integerized.slice(DECIMAL_DIGIT)\n                  )\n                );\n                const floated = rounded / 10 ** DECIMAL_DIGIT;\n                this._datasets[dataset.id].frequency.textContent =\n                  floated > 0\n                    ? floated\n                    : frequency.af.toExponential(DECIMAL_DIGIT - 1);\n              } else {\n                this._datasets[dataset.id].frequency.textContent = strIns(\n                  (\n                    Math.round(frequency.af * 10 ** DECIMAL_DIGIT) + ''\n                  ).padStart(DECIMAL_DIGIT + 1, '0'),\n                  -DECIMAL_DIGIT,\n                  '.'\n                );\n              }\n            } else {\n              this._datasets[dataset.id].alt.textContent = '';\n              this._datasets[dataset.id].total.textContent = '';\n              this._datasets[dataset.id].frequency.textContent = '';\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\nimport { getSimpleSearchConditionMaster } from '../store/searchManager';\n\nexport default class PanelViewPreviewClinicalSignificance extends PanelView {\n  constructor(elm) {\n    super(elm, 'clinicalSignificance');\n    storeManager.bind('selectedRow', this);\n    storeManager.bind('offset', this);\n    this.content = this.elm.querySelector('.content');\n  }\n\n  selectedRow() {\n    this.update();\n  }\n\n  offset() {\n    this.update();\n  }\n\n  update() {\n    let html = '';\n    if (storeManager.getData('selectedRow') !== undefined) {\n      const record = storeManager.getSelectedRecord();\n      if (record && record.significance) {\n        const master = getSimpleSearchConditionMaster('significance');\n\n        const deepClone = structuredClone(record.significance);\n\n        function mergeByMedgen(data) {\n          const merged = {};\n\n          data.forEach((entry) => {\n            // 'mgend' ソースのエントリで conditions が空の場合、デフォルト値を追加\n            if (entry.source === 'mgend') {\n              if (entry.conditions.length === 0) {\n                entry.conditions.push({ name: 'others', medgen: '' });\n              }\n            }\n\n            entry.conditions.forEach((condition) => {\n              const medgen = condition.medgen;\n              const medgenName = condition.name;\n\n              // MedGen ID がまだ統合結果に存在しない場合、初期化\n              if (!merged[medgen]) {\n                merged[medgen] = {\n                  name: medgenName,\n                  interpretations: {}, // interpretationsごとにsourceを管理\n                };\n              }\n\n              entry.interpretations.forEach((interpretation) => {\n                // 解釈がまだ存在しなければSetで初期化（ソースの一意な集合を保存）\n                if (!merged[medgen].interpretations[interpretation]) {\n                  merged[medgen].interpretations[interpretation] = new Set([\n                    entry.source,\n                  ]);\n                } else {\n                  // すでに存在する解釈にはソースを追加\n                  merged[medgen].interpretations[interpretation].add(\n                    entry.source\n                  );\n                }\n              });\n            });\n          });\n\n          //最終的にSetを配列に変換して、オブジェクトから配列形式に変換\n          const results = Object.keys(merged).map((medgen) => ({\n            medgen,\n            name: merged[medgen].name,\n            interpretations: Object.keys(merged[medgen].interpretations).map(\n              (interpretation) => ({\n                interpretation,\n                sources: Array.from(\n                  merged[medgen].interpretations[interpretation]\n                ),\n              })\n            ),\n          }));\n\n          // return results\n          return groupAndSortByInterpretation(results);\n        }\n\n        function groupAndSortByInterpretation(data) {\n          // グループ化のためのオブジェクト\n          const grouped = {};\n\n          data.forEach((entry) => {\n            // 各エントリのinterpretationsを処理\n            let interpretationKeys = [];\n            entry.interpretations.forEach((interpretationObj) => {\n              interpretationKeys.push(interpretationObj.interpretation);\n            });\n\n            // interpretationKeyがまだ存在しない場合は初期化\n            if (!grouped[interpretationKeys]) {\n              grouped[interpretationKeys] = [];\n            }\n            // 現在のentryを該当するinterpretationグループに追加\n            grouped[interpretationKeys].push(entry);\n            interpretationKeys = [];\n          });\n\n          // 各グループをnameでソート\n          Object.keys(grouped).forEach((key) => {\n            grouped[key] = grouped[key].sort((a, b) => {\n              const nameA = a.name || ''; // 空文字列対策\n              const nameB = b.name || '';\n              return nameA.localeCompare(nameB, undefined, {\n                sensitivity: 'base',\n              });\n            });\n          });\n\n          return Object.values(grouped).flat();\n        }\n\n        // 関数の実行\n        const significanceDataset = mergeByMedgen(deepClone);\n        html = significanceDataset\n          .map((data) => {\n            return `\n        <dl class=\"above-headline clinical-significance\">\n          <dt>\n          ${\n            data.medgen === 'undefined' || data.medgen === ''\n              ? data.name\n              : `<a href=\"/disease/${data.medgen}\" target=\"_blank\" class=\"hyper-text -internal\">\n              ${data.name}</a>`\n          }\n          </dt>\n          ${\n            data.interpretations\n              ? data.interpretations\n                  .map(\n                    (interpretation) => `\n            <dd>\n              <div class=\"clinical-significance\" data-value=\"${\n                interpretation.interpretation\n              }\">\n                ${\n                  master.items.find(\n                    (item) => item.id === interpretation.interpretation\n                  ).label\n                }\n              </div>\n              <div class=\"disease-category\">\n                ${\n                  interpretation.sources.includes('mgend')\n                    ? '<span class=\"mgend\">MGeND</span>'\n                    : ''\n                }\n                ${\n                  interpretation.sources.includes('clinvar')\n                    ? '<span class=\"clinvar\">ClinVar</span>'\n                    : ''\n                }\n              </div>\n            </dd> `\n                  )\n                  .join('')\n              : ''\n          }\n          </dl>`;\n          })\n          .join('');\n        this.elm.classList.remove('-notfound');\n      }\n    } else {\n      this.elm.classList.add('-notfound');\n    }\n    this.content.innerHTML = html;\n  }\n}\n","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\nimport { getSimpleSearchConditionMaster } from '../store/searchManager';\n\nexport default class PanelViewPreviewConsequence extends PanelView {\n  constructor(elm) {\n    super(elm, 'frenquecies');\n    storeManager.bind('selectedRow', this);\n    storeManager.bind('offset', this);\n    this._content = this.elm.querySelector('.content');\n  }\n\n  selectedRow() {\n    this._update();\n  }\n\n  offset() {\n    this._update();\n  }\n\n  _update() {\n    let html = '';\n    this.elm.classList.add('-notfound');\n    if (storeManager.getData('selectedRow') !== undefined) {\n      const record = storeManager.getSelectedRecord();\n      if (record && record.transcripts && record.transcripts.length > 0) {\n        // consequence の取り出し\n        let accessions = record.transcripts\n          .map((transcript) => transcript.consequence)\n          .reduce((first, second) => first.concat(second));\n        accessions = Array.from(new Set(accessions));\n        const master = getSimpleSearchConditionMaster('consequence');\n        const consequences = accessions.map((accession) =>\n          master.items.find((consequence) => consequence.id === accession)\n        );\n        html = consequences\n          .map(\n            (consequence) =>\n              `<dl class=\"above-headline\"><dt>${consequence.label}</dt><dd>${consequence.description}</dd></dl>`\n          )\n          .join('');\n        this.elm.classList.remove('-notfound');\n      }\n    }\n    this._content.innerHTML = html;\n  }\n}\n","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\n\nexport default class PanelViewPreviewExternalLinks extends PanelView {\n  constructor(elm) {\n    super(elm, 'dataset');\n    storeManager.bind('selectedRow', this);\n    storeManager.bind('offset', this);\n    this.table = this.elm.querySelector('.content > .right-headline');\n  }\n\n  selectedRow() {\n    this.update();\n  }\n\n  offset() {\n    this.update();\n  }\n\n  update() {\n    let html = '';\n    this.elm.classList.add('-notfound');\n    if (storeManager.getData('selectedRow') !== undefined) {\n      const record = storeManager.getSelectedRecord(),\n        list = [];\n      if (record && record.external_link) {\n        // resSNP\n        if (record.external_link.dbsnp) {\n          record.external_link.dbsnp.forEach((item) => {\n            list.push(this.#createLinkList('refSNP', item.title, item.xref));\n          });\n        }\n\n        // MGeND\n        if (record.external_link.mgend) {\n          record.external_link.mgend.forEach((item) => {\n            list.push(this.#createLinkList('MGeND', item.title, item.xref));\n          });\n        }\n\n        // ClinVar\n        if (record.external_link.clinvar) {\n          record.external_link.clinvar.forEach((item) => {\n            list.push(this.#createLinkList('ClinVar', item.title, item.xref));\n          });\n        }\n\n        //ToMMo\n        if (record.external_link.tommo) {\n          record.external_link.tommo.forEach((item) => {\n            list.push(this.#createLinkList('ToMMo', item.title, item.xref));\n          });\n        }\n\n        // gnomAD\n        if (record.external_link.gnomad) {\n          record.external_link.gnomad.forEach((item) => {\n            list.push(this.#createLinkList('gnomAD', item.title, item.xref));\n          });\n        }\n      }\n\n      if (list.length > 0) {\n        html = `\n                  <tbody>\n                    ${list\n                      .map(\n                        (item) =>\n                          `<tr><th>${item.title}</th><td>${item.content}</td></tr>`\n                      )\n                      .join('')}\n                  </tbody>\n                `;\n        this.elm.classList.remove('-notfound');\n      }\n    }\n    this.table.innerHTML = html;\n  }\n\n  #createLinkList(title, label, url) {\n    const content = `\n      <ul>\n        <li><a href=\"${url}\" class=\"hyper-text -external\" target=\"_blank\">${label}</a></li>\n      </ul>`;\n    return { title, content };\n  }\n}\n","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\n\nexport default class PanelViewPreviewGene extends PanelView {\n  constructor(elm) {\n    super(elm, 'dataset');\n    storeManager.bind('selectedRow', this);\n    storeManager.bind('offset', this);\n    this.table = this.elm.querySelector('.content > .right-headline');\n  }\n\n  selectedRow() {\n    this.update();\n  }\n\n  offset() {\n    this.update();\n  }\n\n  update() {\n    let html = '';\n    this.elm.classList.add('-notfound');\n    if (storeManager.getData('selectedRow') !== undefined) {\n      const record = storeManager.getSelectedRecord();\n      if (record && record.symbols) {\n        for (const symbol of record.symbols) {\n          html += `\n            <tbody>\n              <tr>\n                <th>Symbol</th>\n                <td>\n                  <a href=\"gene/${\n                    symbol.id\n                  }\" target=\"_blank\" class=\"hyper-text -internal\">${\n            symbol.name\n          }</a>\n                </td>\n              </tr>\n              ${\n                symbol.synonyms.length === 0\n                  ? ''\n                  : `<tr><th>Alias</th><td>${symbol.synonyms.join(\n                      ', '\n                    )}</td></tr>`\n              }\n            </tbody>\n          `;\n\n          this.elm.classList.remove('-notfound');\n        }\n      }\n    }\n    this.table.innerHTML = html;\n  }\n}\n","import PanelView from './PanelView.js';\nimport { storeManager } from '../store/StoreManager';\n\nexport default class PreviewToVariantReport extends PanelView {\n  constructor(elm) {\n    super(elm, 'dataset');\n    storeManager.bind('selectedRow', this);\n    storeManager.bind('offset', this);\n    this.title = this.elm.querySelector('.title');\n  }\n\n  selectedRow() {\n    this.update();\n  }\n\n  offset() {\n    this.update();\n  }\n\n  update() {\n    let html = '';\n\n    if (storeManager.getData('selectedRow') !== undefined) {\n      const record = storeManager.getSelectedRecord();\n      if (record && record.id) {\n        html = `<a class=\"hyper-text -internal\" href=\"/variant/${record.id}\">Detailed variant report page</a>`;\n\n        this.elm.classList.remove('-disable');\n      } else {\n        html = `<a class=\"hyper-text -internal\">Detailed variant report page</a>`;\n\n        this.elm.classList.add('-disable');\n      }\n    }\n\n    this.title.innerHTML = html;\n  }\n}\n","import { storeManager } from '../store/StoreManager';\nimport { resetSimpleSearchConditions } from '../store/searchManager';\n\nexport default class SideBar {\n  constructor(elm) {\n    this._elm = elm;\n    this._body = document.getElementsByTagName('body')[0];\n    // イベント\n    storeManager.bind('selectedRow', this);\n    // スクロールバーを隠す\n    const scrollBarWidth = this._elm.offsetWidth - this._elm.clientWidth;\n    this._elm.style.width = `${this._elm.offsetWidth + scrollBarWidth}px`;\n    this._elm.style.marginRight = `-${scrollBarWidth}px`;\n    // リセットボタン\n    this._setupResetButton();\n  }\n\n  _setupResetButton() {\n    const resetButton = this._elm.querySelector(\n      '#Filters > .title > .button-view'\n    );\n    resetButton.addEventListener('click', () => {\n      resetSimpleSearchConditions();\n    });\n  }\n\n  // bindings ///////////////////////////\n\n  selectedRow(index) {\n    if (index === undefined) {\n      // show filters\n      this._body.classList.remove('-rowselected');\n    } else {\n      // show previews\n      this._body.classList.add('-rowselected');\n    }\n  }\n}\n","import tippy from 'tippy.js';\n// All data with [data-tooltip-id] gets tooltip\nexport default class TippyBox {\n  constructor() {\n    const tooltipElements = document.querySelectorAll('[data-tooltip-id]'),\n      data = this.getData();\n\n    tooltipElements.forEach((HTMLElement) => {\n      HTMLElement.addEventListener(\n        'mouseover',\n        this.setTooltip(HTMLElement, data)\n      );\n    });\n  }\n\n  // Tooltip data is stored in /assets/tooltips.json, id = [data-tooltip-id]\n  getData() {\n    const json = require('../../assets/tooltips.json');\n    Object.freeze(json);\n\n    return json;\n  }\n  // Set tooltip with tippy.js plugin\n  setTooltip(el, data) {\n    const id = el.getAttribute('data-tooltip-id');\n\n    try {\n      const tooltip = data.find((entry) => entry.id === id),\n        template = this.createTemplate(tooltip);\n\n      tippy(el, {\n        content: template.innerHTML,\n        allowHTML: true,\n        animation: 'fade',\n        duration: [400],\n        interactive: true,\n        theme: 'black',\n        placement: 'top',\n        appendTo: document.body,\n        maxWidth: '15rem',\n        delay: [300, 300],\n        offset: this.offset(el),\n        zIndex: 10100,\n      });\n    } catch (err) {\n      console.error(\n        `Failed to set the tooltip for item with a data-tooltip id of [${id}].\\nCheck if there is corresponding data in tooltips.JSON`\n      );\n    }\n  }\n  // HTML template for inside Tippy\n  createTemplate(tooltip) {\n    const template = document.createElement('span'),\n      contentP = document.createElement('p');\n\n    contentP.className = 'content';\n    contentP.innerText = tooltip.content;\n    // <a> tag will only be set when there is an URL in JSON file\n    if ('url' in tooltip) contentP.appendChild(this.createAnchor(tooltip.url));\n    template.appendChild(contentP);\n\n    return template;\n  }\n\n  createAnchor(url) {\n    const anchor = document.createElement('a');\n\n    anchor.className = 'url';\n    anchor.href = url;\n    anchor.innerText = 'Read More';\n\n    return anchor;\n  }\n\n  // Calculate offset based on props if rotated, otherwise return default\n  offset(el) {\n    const style = window.getComputedStyle(el),\n      props = el.getBoundingClientRect();\n\n    if (style.transform === 'none') return [3, 7];\n    return [props.width * 0.15 < 10 ? props.width * 0.1 : props.width * 0.2, 2];\n  }\n}\n","class TopPageLayoutManager {\n  // Advanced SearchのConditionで高さが変化するため、ただしresizeで発火は変更が必要になる可能性あり\n\n  constructor() {\n    this._isReady = false; // 初期化フラグ\n  }\n\n  /** レイアウトマネージャーを初期化する\n   * @param {Array} targets - 表示サイズを更新するコンポーネントのリスト */\n  init(targets) {\n    this._isReady = true;\n    this.targets = targets;\n\n    // パフォーマンス向上のためにDOM要素をキャッシュ\n    this._globalHeader = document.getElementById('GlobalHeader');\n    this._searchInputView = document.getElementById('SearchInputView');\n    this._searchResultsView = document.getElementById('SearchResultsView');\n    this._drawerView = document.querySelector('.drawer-view');\n\n    // 初回レイアウト更新\n    this.update();\n\n    // ウィンドウリサイズ時にレイアウトを更新\n    window.addEventListener('resize', this.update.bind(this));\n    window.dispatchEvent(new Event('resize')); // 読み込み時にレイアウトを更新\n  }\n\n  /** 検索結果エリアやターゲット要素の表示サイズを動的に更新する */\n  update() {\n    if (!this._isReady) return;\n\n    const globalHeaderHeight = this._globalHeader?.clientHeight || 0;\n    const searchInputHeight = this._searchInputView?.clientHeight || 0;\n    const drawerOffsetTop = this._drawerView?.offsetTop || 0;\n    const drawerHeight = window.innerHeight - drawerOffsetTop;\n\n    // 検索結果エリアの高さを動的に調整\n    if (this._searchResultsView) {\n      this._searchResultsView.style.height = `calc(100vh - ${globalHeaderHeight + searchInputHeight + drawerHeight}px)`;\n    }\n\n    // すべてのターゲット要素の表示サイズを更新\n    this.targets.forEach(target => target.updateDisplaySize());\n  }\n}\n\nexport default new TopPageLayoutManager();\n","export const ALPHAMISSENSE_THRESHOLD = {\n  'Likely benign': {\n    color: '#9def3A',\n    min: 0,\n    max: 0.34,\n    minInequalitySign: 'gte',\n    maxInequalitySign: 'lt',\n  },\n  Ambiguous: {\n    color: '#bbba7e',\n    min: 0.34,\n    max: 0.564,\n    minInequalitySign: 'gte',\n    maxInequalitySign: 'lte',\n  },\n  'Likely pathogenic': {\n    color: '#ffae00',\n    min: 0.564,\n    max: 1,\n    minInequalitySign: 'gt',\n    maxInequalitySign: 'lte',\n  },\n};\n\nconst SIFT_THRESHOLD = {\n  Tolerated: {\n    color: '#ff5a54',\n    min: 0,\n    max: 0.05,\n    minInequalitySign: 'gte',\n    maxInequalitySign: 'lt',\n  },\n  Deleterious: {\n    color: '#04af58',\n    min: 0.05,\n    max: 1,\n    minInequalitySign: 'gte',\n    maxInequalitySign: 'lte',\n  },\n};\n\nconst POLYPHEN_THRESHOLD = {\n  Benign: {\n    color: '#04af58',\n    min: 0,\n    max: 0.446,\n    minInequalitySign: 'gte',\n    maxInequalitySign: 'lte',\n  },\n  Possibly_damaging: {\n    color: '#ffae00',\n    min: 0.446,\n    max: 0.908,\n    minInequalitySign: 'gt',\n    maxInequalitySign: 'lte',\n  },\n  Probably_damaging: {\n    color: '#ff5a54',\n    min: 0.908,\n    max: 1,\n    minInequalitySign: 'gt',\n    maxInequalitySign: 'lte',\n  },\n};\n\nexport const PREDICTIONS = {\n  alphamissense: {\n    label: 'AlphaMissense',\n    unassignedLists: ['unassigned'],\n    threshold: ALPHAMISSENSE_THRESHOLD,\n  },\n  sift: {\n    label: 'SIFT',\n    unassignedLists: ['unassigned'],\n    threshold: SIFT_THRESHOLD,\n  },\n  polyphen: {\n    label: 'PolyPhen',\n    unassignedLists: ['unassigned', 'unknown'],\n    threshold: POLYPHEN_THRESHOLD,\n  },\n};\n","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}.number-input{display:flex;margin-bottom:30px;font-size:10px;align-items:center;gap:5px}.number-input input[type=number]{width:5em;margin-right:3px;font-size:inherit;display:inline-block;text-align:right;line-height:18px;padding:0 0 0 8px;border-radius:9px;border:solid 1px #94928d;box-shadow:0 1px 1px rgba(0,0,0,.2) inset;outline:0}.number-input button.inequality-sign{appearance:none;font-weight:700;background-color:#117f93;color:#fff;height:16px;width:16px;padding:0;border-radius:3px;border:none;cursor:pointer}.slider{max-width:247.5px;height:5px;position:relative;left:1px;background:#ddd}.slider .bar{height:inherit;position:absolute;left:0;right:0}.slider .ruler .scale{list-style:none;position:absolute;top:-18px;font-size:.6rem;z-index:10;line-height:1}.slider .ruler .scale::before{content:\"\";position:absolute;top:13px;height:14px;border-left:dotted 1px rgba(0,0,0,.3);left:.5em;display:block}.slider .threshold{display:flex}.slider .threshold .threshold-line{position:absolute;width:1px;background-color:rgba(0,0,0,.5)}.slider .threshold .threshold-button{position:absolute;font-size:.6rem;z-index:10;cursor:pointer;border:.5px solid #444;border-radius:8px;margin-left:5px;padding:3px}.slider .threshold .threshold-button:hover{background-color:#444;color:#fff}.slider .threshold .threshold-button:active{opacity:.7}.range-input{position:relative}.range-input input[type=range]{position:absolute;top:-5px;width:100%;max-width:250px;height:5px;background:0 0;pointer-events:none;-webkit-appearance:none;-moz-appearance:none}.range-input input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;height:1em;width:3px;border-top:solid 1px rgba(0,0,0,.5);border-bottom:solid 1px rgba(0,0,0,.5);pointer-events:auto;margin-top:-.2em;cursor:col-resize}.range-input .from[type=range]::-webkit-slider-thumb{transform:translateX(-3px);border-right:solid 1px rgba(0,0,0,.5)}.range-input .to[type=range]::-webkit-slider-thumb{transform:translateX(-1px);border-left:solid 1px rgba(0,0,0,.5)}.range-input input[type=range]::-moz-range-thumb{-moz-appearance:none;height:1em;width:3px;pointer-events:auto;margin-top:-.2em;cursor:col-resize}`;\n    ","import { LitElement, html } from 'lit';\nimport { customElement, property, query, queryAll } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { range } from 'lit/directives/range.js';\nimport { createGradientSlider } from './createGradientSlider';\nimport { capitalizeFirstLetter } from '../../utils/capitalizeFirstLetter';\nimport { setInequalitySign } from './setInequalitySign.js';\nimport Styles from '../../../stylesheets/object/component/prediction-range-slider.scss';\n\nconst SLIDER_CONFIG = {\n  min: 0,\n  max: 1,\n  step: 0.01,\n  numberOfScales: 10,\n  sliderWidth: 247.5,\n};\nSLIDER_CONFIG.scaleInterval =\n  (SLIDER_CONFIG.max - SLIDER_CONFIG.min) / SLIDER_CONFIG.numberOfScales;\n\n/** Class to create a PredictionRangeSlider */\n@customElement('prediction-range-slider')\nclass PredictionRangeSlider extends LitElement {\n  static styles = [Styles];\n\n  @property({ type: String, reflect: true, attribute: 'data-dataset' })\n  predictionScoreName;\n  @property({ type: Number, reflect: true, attribute: 'data-min-value' })\n  minValue;\n  @property({ type: Number, reflect: true, attribute: 'data-max-value' })\n  maxValue;\n  @property({\n    type: String,\n    reflect: true,\n    attribute: 'data-min-inequality-sign',\n  })\n  minInequalitySign;\n  @property({\n    type: String,\n    reflect: true,\n    attribute: 'data-max-inequality-sign',\n  })\n  maxInequalitySign;\n  @property({ type: Array }) unassignedChecks;\n  @property({ type: Object }) activeDataset;\n  @property({ type: Object }) unassignedLists;\n\n  @queryAll('.number-input > input[type=\"number\"]') _numberInput;\n  @queryAll('.range-input > input[type=\"range\"]') _rangeInput;\n  @queryAll('.number-input .inequality-sign') _inequalitySign;\n  @query('.slider .bar') _range;\n\n  firstUpdated() {\n    this._range.style.backgroundImage = createGradientSlider(\n      this.activeDataset,\n      this._range,\n      SLIDER_CONFIG.sliderWidth\n    );\n  }\n\n  updated(changedProperties) {\n    if (\n      changedProperties.has('minValue') ||\n      changedProperties.has('maxValue') ||\n      changedProperties.has('minInequalitySign') ||\n      changedProperties.has('maxInequalitySign') ||\n      changedProperties.has('unassignedChecks')\n    ) {\n      this.dispatchEvent(\n        new CustomEvent('set-prediction-values', {\n          detail: {\n            values: [this.minValue, this.maxValue],\n            inequalitySigns: [this.minInequalitySign, this.maxInequalitySign],\n            unassignedChecks: this.unassignedChecks,\n          },\n          bubbles: true,\n          composed: true,\n        })\n      );\n    }\n  }\n\n  _handleSliderValues(e, primaryInputs, secondaryInputs) {\n    let minValue = parseFloat(primaryInputs[0].value),\n      maxValue = parseFloat(primaryInputs[1].value);\n    if (e.target.className === 'from') {\n      secondaryInputs[0].value = minValue;\n      this._range.style.left = minValue * 100 + '%';\n\n      if (minValue > maxValue) {\n        maxValue = primaryInputs[0].value;\n        primaryInputs[1].value = maxValue;\n        secondaryInputs[1].value = maxValue;\n        this._range.style.right = 100 - maxValue * 100 + '%';\n      }\n    } else {\n      secondaryInputs[1].value = maxValue;\n      this._range.style.right = 100 - maxValue * 100 + '%';\n\n      if (maxValue < minValue) {\n        minValue = primaryInputs[1].value;\n        primaryInputs[0].value = minValue;\n        secondaryInputs[0].value = minValue;\n        this._range.style.left = minValue * 100 + '%';\n      }\n    }\n\n    this._range.style.backgroundImage = createGradientSlider(\n      this.activeDataset,\n      this._range,\n      SLIDER_CONFIG.sliderWidth\n    );\n    [this.minValue, this.maxValue] = [\n      parseFloat(minValue),\n      parseFloat(maxValue),\n    ];\n  }\n\n  _handleThresholdButton = (e) => {\n    const { minValue, maxValue, minInequalitySign, maxInequalitySign } =\n      e.target.dataset;\n\n    [this._rangeInput[0].value, this._numberInput[0].value] = [\n      minValue,\n      minValue,\n    ];\n    [this._rangeInput[1].value, this._numberInput[1].value] = [\n      maxValue,\n      maxValue,\n    ];\n    setInequalitySign(this._inequalitySign[0], minInequalitySign);\n    setInequalitySign(this._inequalitySign[1], maxInequalitySign);\n\n    this._range.style.left = minValue * 100 + '%';\n    this._range.style.right = 100 - maxValue * 100 + '%';\n    this._range.style.backgroundImage = createGradientSlider(\n      this.activeDataset,\n      this._range,\n      SLIDER_CONFIG.sliderWidth\n    );\n\n    [this.minValue, this.maxValue] = [\n      parseFloat(minValue),\n      parseFloat(maxValue),\n    ];\n    [this.minInequalitySign, this.maxInequalitySign] = [\n      minInequalitySign,\n      maxInequalitySign,\n    ];\n  };\n\n  _handleInequalitySign(e) {\n    const { newSign, newHtml } = this._switchInequalitySign(\n      e.target.dataset.inequalitySign\n    );\n    e.target.dataset.inequalitySign = newSign;\n    e.target.innerHTML = newHtml;\n\n    if (newSign === 'gte' || newSign === 'gt') {\n      this.minInequalitySign = newSign;\n    } else {\n      this.maxInequalitySign = newSign;\n    }\n  }\n\n  _handleUnassignedCheckbox(e) {\n    if (e.target.checked) {\n      this.unassignedChecks = [...this.unassignedChecks, e.target.dataset.name];\n    } else {\n      this.unassignedChecks = this.unassignedChecks.filter(\n        (item) => item !== e.target.dataset.name\n      );\n    }\n  }\n\n  _switchInequalitySign(sign) {\n    switch (sign) {\n      case 'gte':\n        return { newSign: 'gt', newHtml: '&#60;' };\n      case 'gt':\n        return { newSign: 'gte', newHtml: '&#8804;' };\n      case 'lte':\n        return { newSign: 'lt', newHtml: '&#60;' };\n      case 'lt':\n        return { newSign: 'lte', newHtml: '&#8804;' };\n    }\n  }\n\n  render() {\n    const createNumberInput = (className, title, value) => html`\n      <input\n        type=\"number\"\n        class=${className}\n        title=${title}\n        value=${value}\n        min=${SLIDER_CONFIG.min}\n        max=${SLIDER_CONFIG.max}\n        step=${SLIDER_CONFIG.step}\n        @input=${(e) =>\n          this._handleSliderValues(e, this._numberInput, this._rangeInput)}\n      />\n    `;\n\n    const createRangeInput = (className, value) => html`\n      <input\n        type=\"range\"\n        class=${className}\n        value=${value}\n        min=${SLIDER_CONFIG.min}\n        max=${SLIDER_CONFIG.max}\n        step=${SLIDER_CONFIG.step}\n        @input=${(e) =>\n          this._handleSliderValues(e, this._rangeInput, this._numberInput)}\n      />\n    `;\n\n    const createInequalitySignButton = (inequalitySign) => html`\n      <button\n        class=\"inequality-sign\"\n        type=\"button\"\n        data-inequality-sign=${inequalitySign}\n        @click=${this._handleInequalitySign}\n      >\n        &#8804;\n      </button>\n    `;\n\n    const createUnassignedList = () => html`\n      ${this.unassignedLists.map(\n        (list) => html` <input\n            type=\"checkbox\"\n            id=\"${this.predictionScoreName}${capitalizeFirstLetter(list)}\"\n            data-name=${list}\n            @change=${this._handleUnassignedCheckbox}\n          />\n          <label for=\"${this.predictionScoreName}${capitalizeFirstLetter(list)}\"\n            >${capitalizeFirstLetter(list)}\n          </label>`\n      )}\n    `;\n\n    return html`\n      <div class=\"number-input\">\n        ${createNumberInput('from', 'Lower limit', SLIDER_CONFIG.min)}\n        ${createInequalitySignButton('gte')}\n        <span>Prediction score</span>\n        ${createInequalitySignButton('lte')}\n        ${createNumberInput('to', 'Upper limit', SLIDER_CONFIG.max)}\n        ${createUnassignedList()}\n      </div>\n      <div class=\"slider\">\n        <div class=\"bar\"></div>\n        <ul class=\"ruler\">\n          ${map(\n            range(SLIDER_CONFIG.numberOfScales + 1),\n            (i) =>\n              html`<li\n                class=\"scale\"\n                style=\"\n                left: calc(${(i * 100) /\n                SLIDER_CONFIG.numberOfScales}% - 0.3rem)\"\n              >\n                ${(SLIDER_CONFIG.scaleInterval * i).toFixed(1)}\n              </li>`\n          )}\n        </ul>\n        <div class=\"threshold\">\n          ${Object.entries(this.activeDataset).map(\n            ([key, details], i) =>\n              html` <div\n                  class=\"threshold-line\"\n                  style=\"height:\n                  ${(Object.keys(this.activeDataset).length - i) * 20 + 10}px;\n                  left: ${details.min * 100}%;\"\n                ></div>\n                <button\n                  type=\"button\"\n                  class=\"threshold-button\"\n                  data-min-value=${details.min}\n                  data-max-value=${details.max}\n                  data-min-inequality-sign=${details.minInequalitySign}\n                  data-max-inequality-sign=${details.maxInequalitySign}\n                  style=\"left: ${details.min * 100}%;\n                  top: ${(Object.keys(this.activeDataset).length - i) * 20}px;\"\n                  @click=${this._handleThresholdButton}\n                >\n                  ${key}\n                </button>`\n          )}\n        </div>\n      </div>\n      <div class=\"range-input\">\n        ${createRangeInput('from', SLIDER_CONFIG.min)}\n        ${createRangeInput('to', SLIDER_CONFIG.max)}\n      </div>\n    `;\n  }\n}\n\nexport default PredictionRangeSlider;\n","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}:host{position:absolute;top:0;left:142px;display:flex;align-items:center;white-space:nowrap}:host>.pathogenicity-graph{position:relative;width:100px;height:3.5px;background-color:var(--color-darker-gray);margin-right:5px}:host>.pathogenicity-graph>.ruler{list-style:none}:host>.pathogenicity-graph>.ruler>.scale{position:absolute;top:-1px;bottom:-1px;border-left:dotted .5px var(--color-separator)}@media(-webkit-min-device-pixel-ratio:2){:host>.pathogenicity-graph>.ruler>.scale{border-left:dotted 1px var(--color-separator)}}:host>.pathogenicity-graph>.bar{position:absolute;height:100%;background-color:var(--color-gray)}:host>.range{display:flex;gap:5px;align-items:center}:host>.range .text{font-size:10px}:host>.range>.from,:host>.range>.to{font-weight:700}`;\n    ","import { LitElement, html } from 'lit';\nimport { customElement, state, query, queryAll } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { range } from 'lit/directives/range.js';\nimport { createGradientSlider } from './createGradientSlider';\nimport { ALPHAMISSENSE_THRESHOLD, PREDICTIONS } from './PredictionDatasets.js';\nimport { setInequalitySign } from './setInequalitySign.js';\nimport { capitalizeFirstLetter } from '../../utils/capitalizeFirstLetter';\n\nimport Styles from '../../../stylesheets/object/component/prediction-value-view.scss';\n\nconst SLIDER_CONFIG = {\n  numberOfScales: 10,\n  sliderWidth: 100,\n};\n\n@customElement('prediction-value-view')\nexport class PredictionValueView extends LitElement {\n  static styles = [Styles];\n\n  @state({ type: String }) _dataset = 'alphamissense';\n  @state({ type: String }) _label = 'AlphaMissense';\n  @state({ type: Array }) _values = [0, 1];\n  @state({ type: Array }) _inequalitySigns = ['gte', 'lte'];\n  @state({ type: Array }) _unassignedChecks = [];\n  @state({ type: Object }) _activeDataset = ALPHAMISSENSE_THRESHOLD;\n\n  @query('.bar') _bar;\n  @queryAll('.inequality-sign') _inequalitySignsEl;\n\n  firstUpdated() {\n    this._setBarStyles();\n  }\n\n  setValues(dataset, values, inequalitySigns, unassignedChecks) {\n    this._dataset = dataset;\n    this._values = values;\n    this._inequalitySigns = inequalitySigns;\n    this._unassignedChecks = unassignedChecks;\n    this._label = PREDICTIONS[this._dataset].label;\n    this._activeDataset = PREDICTIONS[this._dataset].threshold;\n\n    setInequalitySign(this._inequalitySignsEl[0], this._inequalitySigns[0]);\n    setInequalitySign(this._inequalitySignsEl[1], this._inequalitySigns[1]);\n\n    this._setBarStyles();\n  }\n\n  _setBarStyles() {\n    this._bar.style.left = this._values[0] * 100 + '%';\n    this._bar.style.right = 100 - this._values[1] * 100 + '%';\n    this._bar.style.backgroundImage = createGradientSlider(\n      this._activeDataset,\n      this._bar,\n      SLIDER_CONFIG.sliderWidth\n    );\n  }\n\n  render() {\n    return html`\n      <div class=\"pathogenicity-graph\">\n        <div class=\"bar\"></div>\n        <ul class=\"ruler\">\n          ${map(\n            range(SLIDER_CONFIG.numberOfScales + 1),\n            (i) =>\n              html`<li\n                class=\"scale\"\n                style=\"\n                left: calc(${(i * 100) / SLIDER_CONFIG.numberOfScales}%\n                - ${i / SLIDER_CONFIG.numberOfScales}px)\"\n              ></li>`\n          )}\n        </ul>\n      </div>\n      <div class=\"range\">\n        <span class=\"from\">${this._values[0]}</span>\n        <span class=\"inequality-sign\" data-inequality-sign=\"gte\">&#8804;</span>\n        <span class=\"text\">Prediction score</span>\n        <span class=\"inequality-sign\" data-inequality-sign=\"lte\">&#8804;</span>\n        <span class=\"to\">${this._values[1]}</span>\n        <span class=\"text\">\n          ${this._unassignedChecks\n            .map((item) => capitalizeFirstLetter(item))\n            .join(', ')}\n        </span>\n      </div>\n    `;\n  }\n\n  get conditionValues() {\n    return {\n      dataset: this._dataset,\n      label: this._label,\n      values: this._values,\n      inequalitySigns: this._inequalitySigns,\n      unassignedChecks: this._unassignedChecks,\n    };\n  }\n\n  get queryValue() {\n    if (this._unassignedChecks.length === 0) {\n      return {\n        [this._dataset]: {\n          score: {\n            [this._inequalitySigns[0]]: this._values[0],\n            [this._inequalitySigns[1]]: this._values[1],\n          },\n        },\n      };\n    }\n\n    if (\n      this._values[0] === this._values[1] &&\n      (this._inequalitySigns[0] === 'gt' || this._inequalitySigns[1] === 'lt')\n    ) {\n      return {\n        [this._dataset]: {\n          score: this._unassignedChecks,\n        },\n      };\n    }\n\n    return {\n      or: [\n        {\n          [this._dataset]: {\n            score: this._unassignedChecks,\n          },\n        },\n        {\n          [this._dataset]: {\n            score: {\n              [this._inequalitySigns[0]]: this._values[0],\n              [this._inequalitySigns[1]]: this._values[1],\n            },\n          },\n        },\n      ],\n    };\n  }\n}\n\nexport default PredictionValueView;\n","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}:host ul[role=tablist]{font-size:12px;font-weight:700;list-style:none;margin:0;padding:0;padding-left:10px;display:flex;gap:.1rem;background:#e2e2e2}:host ul[role=tablist] li{list-style:none}:host ul[role=tablist] li a{padding:3px 8px;display:block;text-decoration:none;color:#444;border-radius:7px 7px 0 0;margin-top:5px;outline:0}:host ul[role=tablist] li a[aria-selected=true]{background-color:#fff}:host .tab-panel{padding:10px}`;\n    ","import { LitElement, html } from 'lit';\nimport { customElement, property, queryAll } from 'lit/decorators.js';\nimport './PredictionRangeSliderView.js';\nimport Styles from '../../../stylesheets/object/component/tab-view.scss';\n\n/** Class to create a TabView */\n@customElement('tab-view')\nclass TabView extends LitElement {\n  static styles = [Styles];\n\n  @property({ type: Object }) datasets;\n  @queryAll('ul[role=\"tablist\"] > li > a.tab') _tabButtons;\n  @queryAll('.tab-panel > prediction-range-slider') _predictionRangeSlider;\n\n  _handleSwitchTab(e) {\n    e.preventDefault();\n    const activePanelId = e.target.getAttribute('href').replace('#', '');\n    const activePanel = Array.from(this._predictionRangeSlider).find(\n      (panel) => panel.id === activePanelId\n    );\n\n    this._tabButtons.forEach((button) => {\n      button.setAttribute('aria-selected', false);\n      button.setAttribute('tabindex', '-1');\n    });\n\n    this._predictionRangeSlider.forEach((panel) => {\n      panel.setAttribute('hidden', true);\n    });\n\n    activePanel.removeAttribute('hidden', false);\n    e.target.setAttribute('aria-selected', true);\n    e.target.setAttribute('tabindex', '0');\n\n    this._switchTabEvent(activePanel);\n  }\n\n  _switchTabEvent(activePanel) {\n    this.dispatchEvent(\n      new CustomEvent('switch-tab', {\n        detail: {\n          dataset: activePanel.dataset.dataset,\n          values: [\n            parseFloat(activePanel.minValue),\n            parseFloat(activePanel.maxValue),\n          ],\n          inequalitySigns: [\n            activePanel.minInequalitySign,\n            activePanel.maxInequalitySign,\n          ],\n          unassignedChecks: activePanel.unassignedChecks,\n        },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  render() {\n    const datasetEntries = Object.entries(this.datasets);\n\n    return html`\n      <ul aria-labelledby=\"tabs-title\" role=\"tablist\">\n        ${datasetEntries.map(\n          ([predictionScoreName, details], index) => html`\n            <li>\n              <a\n                id=\"tab-${predictionScoreName}\"\n                class=\"tab\"\n                href=\"#${predictionScoreName}\"\n                aria-selected=${index === 0 ? 'true' : 'false'}\n                tabindex=${index === 0 ? '0' : '-1'}\n                @click=${this._handleSwitchTab}\n                >${details.label}\n              </a>\n            </li>\n          `\n        )}\n      </ul>\n\n      <div class=\"tab-panel\">\n        ${datasetEntries.map(\n          ([predictionScoreName, details], index) => html`\n            <prediction-range-slider\n              id=\"${predictionScoreName}\"\n              aria-labelledby=\"tab-${predictionScoreName}\"\n              .predictionScoreName=${predictionScoreName}\n              .minValue=${0}\n              .maxValue=${1}\n              .minInequalitySign=${'gte'}\n              .maxInequalitySign=${'lte'}\n              .unassignedChecks=${[]}\n              .activeDataset=${details.threshold}\n              .unassignedLists=${details.unassignedLists}\n              ?hidden=${index !== 0}\n            >\n            </prediction-range-slider>\n          `\n        )}\n      </div>\n    `;\n  }\n}\n\nexport default TabView;\n","export const createGradientSlider = (activeDataset, rangeEl, sliderWidth) => {\n  const gradientStops = Object.entries(activeDataset).flatMap(([_, value]) => {\n    return [\n      { color: value.color, division: value.min },\n      { color: value.color, division: value.max },\n    ];\n  });\n\n  let rangeLeft = parseInt(rangeEl.style.left) / 100 || 0;\n\n  const gradientCss = gradientStops\n    .map((stop) => {\n      const position = (stop.division - rangeLeft) * sliderWidth;\n      return `${stop.color} ${position}px`;\n    })\n    .join(', ');\n\n  return `linear-gradient(to right, ${gradientCss})`;\n};\n","const INEQUALITY_SIGN = {\n  gte: '&#8804;',\n  lte: '&#8804;',\n  gt: '&#60;',\n  lt: '&#60;',\n};\n\nexport const setInequalitySign = (target, sign) => {\n  target.dataset.inequalitySign = sign;\n  target.innerHTML = INEQUALITY_SIGN[sign];\n};\n","import { LitElement, css, html } from 'lit';\n\nconst VERTICAL_BLOCK_WIDTH = 5;\nconst VERTICAL_BLOCK_HEIGHT = 2;\n\nexport class LogarithmizedBlockGraphFrequencyView extends LitElement {\n  static styles = css`\n    :host {\n      --color-dataset: var(--color-dataset-foreign);\n      position: relative;\n      margin-right: 1px;\n      border-style: solid;\n      border-width: 1px;\n      display: inline-block;\n      width: ${VERTICAL_BLOCK_WIDTH + 4}px;\n      height: ${VERTICAL_BLOCK_HEIGHT * 6 + 5 + 4}px;\n      vertical-align: middle;\n      font-size: 0;\n      background-color: white;\n    }\n    :host([data-dataset='gem_j_wga']) {\n      --color-dataset: var(--color-dataset-gemj);\n    }\n    :host([data-dataset^='jga_']) {\n      --color-dataset: var(--color-dataset-jga);\n    }\n    :host([data-dataset='tommo']) {\n      --color-dataset: var(--color-dataset-tommo);\n    }\n    :host([data-dataset='hgvd']) {\n      --color-dataset: var(--color-dataset-hgvd);\n    }\n    :host([data-dataset='ncbn']) {\n      --color-dataset: var(--color-dataset-ncbn);\n    }\n    :host([data-dataset='bbj']) {\n      --color-dataset: var(--color-dataset-bbj);\n    }\n    :host {\n      border-color: var(--color-dataset);\n    }\n    :host > .blocks {\n      position: absolute;\n      left: 1px;\n      bottom: 1px;\n      width: ${VERTICAL_BLOCK_WIDTH}px;\n      display: block;\n    }\n    :host > .blocks > .block {\n      position: absolute;\n      display: none;\n      width: ${VERTICAL_BLOCK_WIDTH}px;\n      height: ${VERTICAL_BLOCK_HEIGHT}px;\n      background-color: var(--color-dataset);\n    }\n    :host > .blocks > .block:nth-child(1) {\n      bottom: 0;\n    }\n    :host > .blocks > .block:nth-child(2) {\n      bottom: ${VERTICAL_BLOCK_HEIGHT + 1}px;\n    }\n    :host > .blocks > .block:nth-child(3) {\n      bottom: ${VERTICAL_BLOCK_HEIGHT * 2 + 2}px;\n    }\n    :host > .blocks > .block:nth-child(4) {\n      bottom: ${VERTICAL_BLOCK_HEIGHT * 3 + 3}px;\n    }\n    :host > .blocks > .block:nth-child(5) {\n      bottom: ${VERTICAL_BLOCK_HEIGHT * 4 + 4}px;\n    }\n    :host > .blocks > .block:nth-child(6) {\n      bottom: ${VERTICAL_BLOCK_HEIGHT * 5 + 5}px;\n    }\n    :host([data-logarithmized-frequency='<0.0001'])\n      > .blocks\n      > .block:nth-child(1),\n    :host([data-logarithmized-frequency='<0.001'])\n      > .blocks\n      > .block:nth-child(1),\n    :host([data-logarithmized-frequency='<0.001'])\n      > .blocks\n      > .block:nth-child(2),\n    :host([data-logarithmized-frequency='<0.01'])\n      > .blocks\n      > .block:nth-child(1),\n    :host([data-logarithmized-frequency='<0.01'])\n      > .blocks\n      > .block:nth-child(2),\n    :host([data-logarithmized-frequency='<0.01'])\n      > .blocks\n      > .block:nth-child(3),\n    :host([data-logarithmized-frequency='<0.05'])\n      > .blocks\n      > .block:nth-child(1),\n    :host([data-logarithmized-frequency='<0.05'])\n      > .blocks\n      > .block:nth-child(2),\n    :host([data-logarithmized-frequency='<0.05'])\n      > .blocks\n      > .block:nth-child(3),\n    :host([data-logarithmized-frequency='<0.05'])\n      > .blocks\n      > .block:nth-child(4),\n    :host([data-logarithmized-frequency='<0.5'])\n      > .blocks\n      > .block:nth-child(1),\n    :host([data-logarithmized-frequency='<0.5'])\n      > .blocks\n      > .block:nth-child(2),\n    :host([data-logarithmized-frequency='<0.5'])\n      > .blocks\n      > .block:nth-child(3),\n    :host([data-logarithmized-frequency='<0.5'])\n      > .blocks\n      > .block:nth-child(4),\n    :host([data-logarithmized-frequency='<0.5'])\n      > .blocks\n      > .block:nth-child(5),\n    :host([data-logarithmized-frequency='≥0.5'])\n      > .blocks\n      > .block:nth-child(1),\n    :host([data-logarithmized-frequency='≥0.5'])\n      > .blocks\n      > .block:nth-child(2),\n    :host([data-logarithmized-frequency='≥0.5'])\n      > .blocks\n      > .block:nth-child(3),\n    :host([data-logarithmized-frequency='≥0.5'])\n      > .blocks\n      > .block:nth-child(4),\n    :host([data-logarithmized-frequency='≥0.5'])\n      > .blocks\n      > .block:nth-child(5),\n    :host([data-logarithmized-frequency='≥0.5'])\n      > .blocks\n      > .block:nth-child(6) {\n      display: block;\n    }\n    :host([data-logarithmized-frequency='na']) {\n      border-color: #d4d3d1;\n      background-color: #f4f4f4;\n    }\n    :host([data-allele-count='1']) {\n      background-color: var(--color-singleton);\n    }\n    :host([data-alternate-allele-count]) > .blocks::before {\n      content: 'H';\n      position: absolute;\n      top: -24px;\n      right: -5px;\n      background-color: var(--color-homozygote);\n      color: white;\n      font-size: 8px;\n      font-weight: bold;\n      width: 9px;\n      height: 9px;\n      text-align: center;\n      line-height: 9px;\n      z-index: 10;\n    }\n  `;\n\n  constructor() {\n    super();\n    // Declare reactive properties\n    this.dataset;\n    this.alleleCount;\n    this.total;\n    this.frequencyValue;\n    this.alternateAlleleCount;\n  }\n\n  render() {\n    return html`\n      <span class=\"blocks\">\n        ${Array.from({ length: 6 }).map(\n          () => html`<span class=\"block\"></span>`\n        )}\n      </span>\n    `;\n  }\n\n  firstUpdated() {}\n\n  /** Setter for variant frequency information.\n   *\n   * This method receives a frequency object containing various metrics related to variant frequency.\n   * It updates internal dataset fields such as allele count, alternate allele count, total allele number,\n   * frequency value, and a categorized frequency label (`logarithmizedFrequency`) used for display or filtering.\n   *\n   * @param {Object} frequency - Frequency data for the variant.\n   * @param {number} frequency.ac - Allele count.\n   * @param {number} frequency.an - Total number of alleles.\n   * @param {number} frequency.af - Allele frequency (between 0 and 1).\n   * @param {number} [frequency.aac] - Alternate allele count (optional, may be used for singleton detection).\n   * @param {string[]} frequency.filter - Filters applied to the variant.\n   * @param {number} frequency.quality - Variant calling quality score.\n   * @param {string} frequency.source - Source of the frequency data. */\n  set frequency(frequency) {\n    this.dataset.alleleCount = frequency?.ac;\n\n    if (frequency?.aac) {\n      this.dataset.alternateAlleleCount = frequency.aac;\n    }\n\n    let logarithmizedFrequency = 'na';\n    if (frequency) {\n      this.alleleCount = frequency.ac;\n      this.total = frequency.an;\n      this.frequencyValue = frequency.af;\n      switch (true) {\n        case frequency.af >= 0.5:\n          logarithmizedFrequency = '≥0.5';\n          break;\n        case frequency.af > 0.05:\n          logarithmizedFrequency = '<0.5';\n          break;\n        case frequency.af > 0.01:\n          logarithmizedFrequency = '<0.05';\n          break;\n        case frequency.af > 0.001:\n          logarithmizedFrequency = '<0.01';\n          break;\n        case frequency.af > 0.0001:\n          logarithmizedFrequency = '<0.001';\n          break;\n        case frequency.af > 0:\n          logarithmizedFrequency = '<0.0001';\n          break;\n        default:\n          logarithmizedFrequency = 'monomorphic';\n          break;\n      }\n    }\n    this.dataset.logarithmizedFrequency = logarithmizedFrequency;\n  }\n}\ncustomElements.define(\n  'logarithmized-block-graph-frequency-view',\n  LogarithmizedBlockGraphFrequencyView\n);\n","const template = document.createElement('template');\nconst searchTypeSimple = document.createElement('div');\nsearchTypeSimple.className = 'match';\nsearchTypeSimple.part = 'match';\nsearchTypeSimple.innerHTML = `\n<label part=\"match label\">\n  <input class=\"all\" name=\"match\" type=\"radio\" value=\"all\">\n  for all datasets\n</label>\n<label part=\"label\">\n  <input class=\"any\" checked=\"checked\" name=\"match\" type=\"radio\" value=\"any\">\n  for any dataset\n</label>\n`;\n\ntemplate.innerHTML = `\n<style data=\"slider-style\">\ninput[type=\"range\"]::-webkit-slider-runnable-track {\n    -webkit-appearance: none;\n    height: 8px;\n}\n\n.-vertical {\n  transform: rotate(-90deg);\n}\n\ninput[type=\"range\"]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: 1em;\n    width: 3px;\n    background-color: transparent;\n    border-top: solid 1px rgba(0, 0, 0, 0.5);\n    border-bottom: solid 1px rgba(0, 0, 0, 0.5);\n    cursor: col-resize;\n    pointer-events: auto;\n    margin-top: -0.2em;\n}\n</style>\n<style data=\"slider-track-style\"></style>\n<div class=\"wrapper\" part=\"wrapper\">\n\n    <div class=\"input\" part=\"div-input\">\n        <input class=\"from\"  part=\"num-input\" type=\"number\" part=\"limit-input\" title=\"Lower limit\">\n    ~\n        <input class=\"to\"  part=\"num-input\" type=\"number\" part=\"limit-input\" title=\"Upper limit\">\n        <label part=\"checkbox-label label\">\n            <input class=\"invert\" type=\"checkbox\" part=\"checkbox\">Invert range\n        </label>\n    </div>\n    <div class=\"meter\" part=\"meter\">\n      <div class=\"meter-container\" part=\"meter-container\">\n        <div class=\"slider-track\" id=\"slider-track\" part=\"slider-track\">\n          <div class=\"ruler\" part=\"ruler\"></div>\n        </div>\n        <input\n            part = \"slider\"\n            type=\"range\"\n            name=\"slider-1\"\n            id=\"slider-1\"\n        />\n        <input\n            part = \"slider\"\n            type=\"range\"\n            name=\"slider-2\"\n            id=\"slider-2\"\n        />\n      </div>\n    </div>\n</div>\n\n`;\n\nclass RangeSlider extends HTMLElement {\n  static get observedAttributes() {\n    return [\n      'min',\n      'max',\n      'input-step',\n      'slider-step',\n      'value1',\n      'value2',\n      'orientation',\n      'invert',\n      'match',\n      'ruler-number-of-steps',\n    ];\n  }\n\n  constructor() {\n    super();\n\n    const initState = {\n      from: 0,\n      to: 1,\n      invert: '0',\n      min: 0,\n      max: 1,\n      'input-step': 0.05,\n      'slider-step': 0.01,\n      match: 'any',\n      rulerNumberOfSteps: 10,\n    };\n\n    this.state = initState;\n\n    this.root = this.getRootNode();\n    this.attachShadow({ mode: 'open' });\n    this.shadowRoot.appendChild(template.content.cloneNode(true));\n    this.slider1 = this.shadowRoot.querySelector('#slider-1');\n    this.slider2 = this.shadowRoot.querySelector('#slider-2');\n    this.sliderTrack = this.shadowRoot.querySelector('#slider-track');\n    this.from = this.shadowRoot.querySelector('.from');\n    this.to = this.shadowRoot.querySelector('.to');\n    this.invertChk = this.shadowRoot.querySelector('.invert');\n    this._meter = this.shadowRoot.querySelector('.meter');\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    switch (name) {\n      case 'min':\n        this.slider1.min = newValue;\n        this.slider2.min = newValue;\n        this.from.min = newValue;\n        this.to.min = newValue;\n        break;\n      case 'max':\n        this.slider1.max = newValue;\n        this.slider2.max = newValue;\n        this.from.max = newValue;\n        this.to.max = newValue;\n        break;\n      case 'slider-step':\n        this.slider1.step = newValue;\n        this.slider2.step = newValue;\n        break;\n      case 'input-step':\n        this.from.step = newValue;\n        this.to.step = newValue;\n        break;\n      case 'value1':\n        this.slider1.value = parseFloat(newValue).toFixed(3);\n        break;\n      case 'value2':\n        this.slider2.value = parseFloat(newValue).toFixed(3);\n        break;\n      case 'invert':\n        this.invertChk.checked = newValue === 'true';\n        break;\n      case 'ruler-number-of-steps':\n        this.state.rulerNumberOfSteps = newValue;\n        this._reRenderRuler();\n        break;\n      case 'match':\n        this.match = newValue;\n        break;\n      case 'orientation':\n        if (newValue === 'vertical') {\n          this._meter.classList.add('-vertical');\n        } else {\n          this._meter.classList.remove('-vertical');\n        }\n        this._reRenderRuler();\n        break;\n    }\n\n    this._fillSlider();\n  }\n\n  _reRenderRuler() {\n    const ruler = this.shadowRoot.querySelector('.ruler');\n    ruler.innerHTML = '';\n    const rulerNumberOfSteps = parseInt(this.state.rulerNumberOfSteps);\n    const min = parseFloat(this.state.min);\n    const max = parseFloat(this.state.max);\n    const step = (max - min) / rulerNumberOfSteps;\n    for (let i = 0; i <= rulerNumberOfSteps; i++) {\n      const scale = document.createElement('div');\n      scale.className = 'scale';\n      scale.part = 'scale';\n      scale.part.add(`scale-${this.orientation}`);\n      scale.innerText = (min + i * step).toFixed(1);\n      scale.style.left = `calc(${(i * 100) / rulerNumberOfSteps}% - 0.5em`;\n      ruler.appendChild(scale);\n    }\n  }\n  _fillSlider() {\n    const val1 = Math.min(this.slider1.value, this.slider2.value);\n    const val2 = Math.max(this.slider1.value, this.slider2.value);\n\n    const percentVal1 = (val1 * 100) / (this.max - this.min);\n    const percentVal2 = (val2 * 100) / (this.max - this.min);\n\n    if (this.state.invert !== '1') {\n      this.sliderTrack.style.background = `linear-gradient(90deg, var(--color-light-gray) 0%, var(--color-light-gray) ${percentVal1}% , var(--color-key-dark1) ${percentVal1}%,   var(--color-key-dark1) ${percentVal2}%, var(--color-light-gray) ${percentVal2}%,  var(--color-light-gray) 100% )`;\n    } else {\n      this.sliderTrack.style.background = `linear-gradient(90deg, var(--color-key-dark1) 0%, var(--color-key-dark1) ${percentVal1}%, var(--color-light-gray) ${percentVal1}%,  var(--color-light-gray) ${percentVal2}%, var(--color-key-dark1) ${percentVal2}%,  var(--color-key-dark1) 100% )`;\n    }\n\n    this._drawThumbs();\n  }\n\n  _drawThumbs() {\n    if (+this.slider1.value < +this.slider2.value) {\n      this.shadowRoot.querySelector(\n        \"style[data='slider-track-style']\"\n      ).innerHTML = `#slider-1::-webkit-slider-thumb {\n            border-right: 1px solid rgba(0, 0, 0, 0.5);\n            transform: translateX(-1.5px);\n        }\n        #slider-2::-webkit-slider-thumb {\n            border-left: 1px solid rgba(0, 0, 0, 0.5);\n            transform: translateX(1.5px)\n        }\n        `;\n    } else {\n      this.shadowRoot.querySelector(\n        \"style[data='slider-track-style']\"\n      ).innerHTML = `#slider-2::-webkit-slider-thumb {\n            border-right: 1px solid rgba(0, 0, 0, 0.5);\n            transform: translateX(-1.5px);\n        }\n        #slider-1::-webkit-slider-thumb {\n            border-left: 1px solid rgba(0, 0, 0, 0.5);\n            transform: translateX(1.5px)\n        }\n        `;\n    }\n  }\n\n  get min() {\n    return this.getAttribute('min');\n  }\n  get max() {\n    return this.getAttribute('max');\n  }\n  get step() {\n    return this.getAttribute('step');\n  }\n  get value1() {\n    return this.getAttribute('value1');\n  }\n  get value2() {\n    return this.getAttribute('value2');\n  }\n  get orientation() {\n    return this.getAttribute('orientation');\n  }\n  get invert() {\n    return this.getAttribute('invert') === 'true';\n  }\n  get rulerNumberOfSteps() {\n    return this.getAttribute('ruler-number-of-steps');\n  }\n  set min(value) {\n    this.setAttribute('min', value);\n  }\n  set max(value) {\n    this.setAttribute('max', value);\n  }\n  set sliderStep(value) {\n    this.setAttribute('slider-step', value);\n  }\n  set inputStep(value) {\n    this.setAttribute('input-step', value);\n  }\n  set value1(value) {\n    this.setAttribute('value1', value);\n  }\n  set value2(value) {\n    this.setAttribute('value2', value);\n  }\n  set orientation(value) {\n    this.setAttribute('orientation', value);\n  }\n  set rulerNumberOfSteps(value) {\n    this.setAttribute('ruler-number-of-steps', value);\n  }\n  set searchType(value) {\n    // do not expose this to the user\n    if (value === 'simple') {\n      this.shadowRoot.querySelector('.wrapper').appendChild(searchTypeSimple);\n      const simpleSearchDiv = this.shadowRoot.querySelector('.match');\n      simpleSearchDiv.addEventListener('click', (e) => {\n        if (e.target.tagName === 'INPUT') {\n          this.match = e.target.value;\n          this.state.match = e.target.value;\n          this._fireEvent(this.state);\n        }\n      });\n    }\n  }\n\n  set invert(value) {\n    this.setAttribute('invert', value);\n  }\n\n  _fireEvent(detail) {\n    const eventKeys = ['from', 'to', 'match', 'invert'];\n\n    const eventData = Object.fromEntries(\n      Object.entries(detail).filter((key) => eventKeys.includes(key[0]))\n    );\n    const event = new CustomEvent('range-changed', {\n      bubbles: true,\n      detail: eventData,\n    });\n\n    this.dispatchEvent(event);\n  }\n\n  connectedCallback() {\n    this.min = this.getAttribute('min') || 0;\n    this.max = this.getAttribute('max') || 1;\n    this.value1 = this.getAttribute('value1') || 0;\n    this.value2 = this.getAttribute('value2') || 1;\n    this.orientation = this.getAttribute('orientation') || 'horizontal';\n\n    this.match = this.getAttribute('simple-search') || 'any';\n\n    this.state = new Proxy(this.state, {\n      set: (target, prop, value, receiver) => {\n        if (prop === 'from' || prop === 'to') {\n          if (isNaN(parseFloat(value))) return true;\n\n          const parsedValue = parseFloat(value);\n\n          if (parsedValue > 1 || parsedValue < 0) {\n            if (parsedValue > 1) {\n              target.to = 1;\n            }\n            if (parsedValue < 0) {\n              target.from = 0;\n            }\n          } else {\n            if (prop === 'from') {\n              // if from is larger than to, set to instead\n              if (parsedValue > target.to) {\n                target.to = parsedValue;\n              } else {\n                target.from = parsedValue;\n              }\n            } else {\n              if (parsedValue < target.from) {\n                target.from = parsedValue;\n              } else {\n                target.to = parsedValue;\n              }\n            }\n          }\n\n          this._getToFromFromState.call(this);\n          this._fireEvent(target);\n          return true;\n        } else if (prop === 'invert') {\n          if (typeof value === 'boolean') {\n            target[prop] = value ? '1' : '0';\n          } else {\n            target[prop] = value;\n          }\n\n          this._getToFromFromState.call(this);\n\n          this._fireEvent(target);\n          return true;\n        } else {\n          this._getToFromFromState.call(this);\n          return Reflect.set(target, prop, value, receiver);\n        }\n      },\n    });\n\n    this.state.min = this.min;\n    this.state.max = this.max;\n    this.state.step = this.getAttribute('step') || 0.01;\n    this.state.from = Math.min(+this.value1, +this.value2);\n    this.state.to = Math.max(+this.value1, +this.value2);\n    this.state.invert = this.getAttribute('invert') === 'true';\n    this.state.match = this.match;\n\n    this.rulerNumberOfSteps = 10;\n\n    this.slider1.addEventListener('input', this._slider1Input);\n\n    this.slider2.addEventListener('input', this._slider2Input);\n\n    this.from.addEventListener('change', this._fromChange);\n\n    this.to.addEventListener('change', this._toChange);\n\n    this.invertChk.addEventListener('change', this._invertChange);\n\n    this._fillSlider();\n    this._reRenderRuler();\n  }\n\n  _slider1Input = (e) => {\n    this.state.from = e.target.value;\n  };\n  _slider2Input = (e) => {\n    this.state.to = e.target.value;\n  };\n\n  _getToFromFromState() {\n    this.slider1.value = Math.min(this.state.from, this.state.to);\n    this.slider2.value = Math.max(this.state.to, this.state.to);\n\n    this.from.value = this.state.from;\n    this.to.value = this.state.to;\n\n    this._fillSlider.call(this);\n  }\n\n  _toChange = (e) => {\n    this.state.to = e.target.value;\n  };\n\n  _fromChange = (e) => {\n    this.state.from = e.target.value;\n  };\n\n  _invertChange = (e) => {\n    this.state.invert = e.target.checked;\n  };\n\n  disconnectedCallback() {\n    this.slider1.removeEventListener('input', this._slider1Input);\n    this.slider2.removeEventListener('input', this._slider2Input);\n    this.from.removeEventListener('change', this._fromChange);\n    this.to.removeEventListener('cnahge', this._toChange);\n    this.invertChk.removeEventListener('change', this._invertChange);\n  }\n}\n\ncustomElements.define('range-slider', RangeSlider);\n","export const CONDITION_TYPE = {\n  term: 'term',\n  dataset: 'dataset',\n  genotype: 'genotype',\n  frequency: 'frequency',\n  pathogenicity_prediction: 'pathogenicity_prediction',\n  quality: 'quality',\n  type: 'type',\n  significance: 'significance',\n  consequence: 'consequence',\n  consequence_grouping: 'consequence_grouping',\n  sift: 'sift',\n  polyphen: 'polyphen',\n  adv_frequency: 'adv_frequency',\n  disease: 'disease',\n  gene_symbol: 'gene',\n  variant_id: 'id',\n  location: 'location',\n};\n\nexport const CONDITION_ITEM_TYPE = {\n  condition: 0,\n  group: 1,\n};\n","import { storeManager } from '../src/store/StoreManager';\nimport { ResultsView } from '../src/classes/Results/ResultsView';\nimport SideBar from '../src/classes/SideBar.js';\nimport Configuration from '../src/classes/Configuration.js';\nimport Karyotype from '../src/classes/Karyotype.js';\nimport ActivityIndicator from '../src/classes/ActivityIndicator.js';\nimport ModuleTabsView from '../src/classes/ModuleTabsView.js';\n// import CollapseView from '../src/classes/CollapseView.js';\nimport TopPageLayoutManager from '../src/classes/TopPageLayoutManager.js';\nimport DownloadButton from './classes/DownloadButton.js';\n// Search\nimport SimpleSearchView from './components/SearchField/SimpleSearch/SimpleSearchView';\nimport AdvancedSearchBuilderView from '../src/classes/AdvancedSearchBuilderView.js';\n// PanelViews\n// PanelViews: Filters\nimport PanelViewCheckList from '../src/classes/PanelViewCheckList.js';\nimport PanelViewFilterAlternativeAlleleFrequency from '../src/classes/PanelViewFilterAlternativeAlleleFrequency.js';\nimport PanelViewFilterVariantCallingQuality from '../src/classes/PanelViewFilterVariantCallingQuality.js';\nimport PanelViewFilterConsequence from '../src/classes/PanelViewFilterConsequence.js';\n// PanelViews: Variant preview\nimport PanelViewPreviewGene from '../src/classes/PanelViewPreviewGene.js';\nimport PreviewToVariantReport from '../src/classes/PreviewToVariantReport.js';\nimport PanelViewPreviewExternalLinks from '../src/classes/PanelViewPreviewExternalLinks.js';\nimport PanelViewPreviewAlternativeAlleleFrequencies from '../src/classes/PanelViewPreviewAlternativeAlleleFrequencies.js';\nimport PanelViewPreviewConsequence from '../src/classes/PanelViewPreviewConsequence.js';\nimport PanelViewPreviewClinicalSignificance from '../src/classes/PanelViewPreviewClinicalSignificance.js';\nimport TippyBox from '../src/classes/TippyBox.js';\n\nimport qs from 'qs';\nimport { extractSearchCondition } from './store/searchManager';\nimport { initializeApp } from './store/initializeApp';\nconst _currentUrlParams = qs.parse(window.location.search.substring(1));\n\nexport function initHome() {\n  setUserAgent();\n\n  storeManager.setData('offset', 0);\n  storeManager.setData('selectedRow', undefined);\n\n  initializeApp(); // 先にURLからモードを設定\n\n  new Configuration(document.getElementById('Configuration'));\n\n  new Karyotype(document.getElementById('Karyotype'));\n\n  new ActivityIndicator(document.getElementById('ActivityIndicator'));\n\n  readyInitialSearch(() => {\n    initResultsView();\n    initDownloadButtons();\n    initSidebar();\n    initVariantPreview();\n    initSearchInputs();\n    initModuleTabs();\n    initTooltip();\n  });\n}\n\nfunction setUserAgent() {\n  const ua = window.navigator.userAgent.toLowerCase();\n  let os = '';\n  switch (true) {\n    case ua.indexOf('windows nt') !== -1:\n      os = 'windows';\n      break;\n    case ua.indexOf('mac os x') !== -1:\n      os = 'mac';\n      break;\n  }\n  document.querySelector('html').dataset.os = os;\n}\n\n/** 初期検索の準備を行うメソッド\n * @param {Function} callback - 準備完了時に呼び出すコールバック関数 */\nfunction readyInitialSearch(callback) {\n  const simpleSearchConditionsMaster = ((referenceGenome) => {\n    switch (referenceGenome) {\n      case 'GRCh37':\n        return require('../assets/GRCh37/search_conditions.json');\n      case 'GRCh38':\n        return require('../assets/GRCh38/search_conditions.json');\n      default:\n        return [];\n    }\n  })(TOGOVAR_FRONTEND_REFERENCE);\n\n  Object.freeze(simpleSearchConditionsMaster);\n  storeManager.setData(\n    'simpleSearchConditionsMaster',\n    simpleSearchConditionsMaster\n  );\n\n  // URLパラメータから検索条件を復元\n  const currentSearchMode = storeManager.getData('searchMode');\n  const simpleSearchConditions = {};\n  const advancedSearchConditions = {};\n\n  // URLパラメータからシンプル検索条件を抽出\n  switch (currentSearchMode) {\n    case 'simple':\n      Object.assign(\n        simpleSearchConditions,\n        extractSearchCondition(_currentUrlParams)\n      );\n      break;\n    case 'advanced':\n      // advanced用の条件抽出を追加\n      break;\n  }\n\n  // 検索条件をストアに保存（isFromHistory = trueとして設定）\n  storeManager.setData('simpleSearchConditions', simpleSearchConditions);\n  storeManager.setData('advancedSearchConditions', advancedSearchConditions);\n\n  callback();\n}\n\n// ヘルパー関数: 要素取得\nconst getElement = (id) => document.getElementById(id);\nconst getAllElements = (selector) => document.querySelectorAll(selector);\n\n// 検索結果画面の初期化\nfunction initResultsView() {\n  const resultView = new ResultsView(getElement('ResultsView'));\n  TopPageLayoutManager.init([resultView]);\n}\n\n// ダウンロードボタンの初期化\nfunction initDownloadButtons() {\n  ['DownloadJson', 'DownloadCsv', 'DownloadTsv'].forEach((id) => {\n    new DownloadButton(getElement(id));\n  });\n}\n\n// サイドバーの初期化\nfunction initSidebar() {\n  new SideBar(getElement('SideBar'));\n  new PanelViewCheckList(\n    getElement('FilterDatasets'),\n    'dataset',\n    'statisticsDataset'\n  );\n  new PanelViewFilterAlternativeAlleleFrequency(\n    getElement('FilterAlternativeAlleleFrequency')\n  );\n  new PanelViewFilterVariantCallingQuality(\n    getElement('FilterVariantCallingQuality')\n  );\n  new PanelViewCheckList(\n    getElement('FilterVariantType'),\n    'type',\n    'statisticsType'\n  );\n  new PanelViewCheckList(\n    getElement('FilterClinicalSignificance'),\n    'significance',\n    'statisticsSignificance'\n  );\n  new PanelViewFilterConsequence(getElement('FilterConsequence'));\n  new PanelViewCheckList(getElement('FilterSIFT'), 'sift');\n  new PanelViewCheckList(getElement('FilterPolyPhen'), 'polyphen');\n  new PanelViewCheckList(getElement('FilterAlphaMissense'), 'alphamissense');\n}\n\n// バリアントプレビューの初期化\nfunction initVariantPreview() {\n  new PanelViewPreviewGene(getElement('PreviewGene'));\n  new PreviewToVariantReport(getElement('PreviewToVariantReport'));\n  new PanelViewPreviewExternalLinks(getElement('PreviewExternalLinks'));\n  new PanelViewPreviewAlternativeAlleleFrequencies(\n    getElement('PreviewAlternativeAlleleFrequencies')\n  );\n  new PanelViewPreviewConsequence(getElement('PreviewConsequence'));\n  new PanelViewPreviewClinicalSignificance(\n    getElement('PreviewClinicalSignificance')\n  );\n}\n\n// 検索窓の初期化\nfunction initSearchInputs() {\n  new SimpleSearchView();\n  new AdvancedSearchBuilderView(getElement('AdvancedSearchBuilderView'));\n\n  // 検索モード変更の設定\n  getAllElements('#SearchInputView > .tabscontainer > ul > li').forEach(\n    (elm) => {\n      elm.addEventListener('click', (e) => {\n        storeManager.setData('searchMode', e.target.dataset.target);\n      });\n    }\n  );\n}\n\n// モジュールタブメニューの初期化\nfunction initModuleTabs() {\n  getAllElements('.module-tabs-view').forEach((elm) => {\n    new ModuleTabsView(elm);\n  });\n}\n\n// ツールチップの初期化\nfunction initTooltip() {\n  new TippyBox();\n}\n","import Axios from 'axios';\nimport { setupCache } from 'axios-cache-interceptor';\n\nexport const axios = setupCache(\n  Axios.create({\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n  })\n);\n\n/** Cached axios */\nexport class cachedAxios {\n  /**\n   * Create cached axios instance\n   * @param {string} baseURL - base URL.\n   * @param {number} maxCacheSize - maximum cache entries number. After reaching this treshold, oldest entries will be deleted from cache.\n   */\n  constructor(baseURL, maxCacheSize = 100) {\n    this.axios = Axios.create({\n      baseURL,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n    });\n    this.maxCacheSize = maxCacheSize;\n    this.cache = new Map();\n  }\n\n  /**\n   *\n   * @param {string} url - url part bo be fetched. Fetched url will be  baseURL + url\n   * @returns {object} {data} - response data\n   */\n  get(url) {\n    if (this.cache.has(url)) {\n      return Promise.resolve(this.cache.get(url));\n    }\n    return this.axios.get(url).then(({ data }) => {\n      this.cache.set(url, { data });\n      if (this.cache.size > this.maxCacheSize) {\n        const [first] = this.cache.keys();\n        this.cache.delete(first);\n      }\n      return { data };\n    });\n  }\n}\n","export const capitalizeFirstLetter = (string) => {\n  return `${string.charAt(0).toUpperCase()}${string.slice(1)}`;\n};\n","export function debounce(func, ms = 1000) {\n  let timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func.apply(this, arguments), ms);\n  };\n}\n","import { storeManager } from '../store/StoreManager';\n\nexport function keyDownEvent(storeName) {\n  switch (storeName) {\n    case 'showModal':\n      if (!storeManager.getData('showSuggest')) {\n        return true;\n      }\n      return false;\n\n    case 'selectedRow':\n      if (!storeManager.getData('showModal')) {\n        return true;\n      }\n      return false;\n\n    default:\n      break;\n  }\n}\n","module.exports = [{\"id\":\"term\",\"label\":\"Term\",\"type\":\"string\",\"default\":\"\"},{\"id\":\"dataset\",\"label\":\"Dataset\",\"type\":\"array\",\"items\":[{\"id\":\"gem_j_wga\",\"label\":\"GEM-J WGA\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"jga_wes\",\"label\":\"JGA-WES\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"jga_snp\",\"label\":\"JGA-SNP\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"tommo\",\"label\":\"ToMMo 8.3KJPN\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"hgvd\",\"label\":\"HGVD\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"gnomad_genomes\",\"label\":\"gnomAD genomes\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"gnomad_exomes\",\"label\":\"gnomAD exomes\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"mgend\",\"label\":\"MGeND\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":false},{\"id\":\"clinvar\",\"label\":\"ClinVar\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":false}]},{\"id\":\"frequency\",\"label\":\"Alternative allele frequency\",\"type\":\"array\",\"items\":[{\"id\":\"from\",\"label\":\"From\",\"type\":\"range\",\"default\":0},{\"id\":\"to\",\"label\":\"To\",\"type\":\"range\",\"default\":1},{\"id\":\"invert\",\"label\":\"Invert\",\"type\":\"boolean\",\"default\":\"0\"},{\"id\":\"match\",\"label\":\"Match\",\"type\":\"enumeration\",\"default\":\"any\",\"values\":[\"all\",\"any\"]}]},{\"id\":\"quality\",\"label\":\"Variant calling quality\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"type\",\"label\":\"Variant type\",\"type\":\"array\",\"items\":[{\"id\":\"SO_0001483\",\"label\":\"SNV\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_0000667\",\"label\":\"Insertion\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_0000159\",\"label\":\"Deletion\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_1000032\",\"label\":\"Indel\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_1000002\",\"label\":\"Substitution\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"significance\",\"label\":\"Clinical significance\",\"type\":\"array\",\"items\":[{\"id\":\"NC\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"P\",\"label\":\"Pathogenic\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LP\",\"label\":\"Likely pathogenic\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"PLP\",\"label\":\"Pathogenic, Low penetrance\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LPLP\",\"label\":\"Likely pathogenic, Low penetrance\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"ERA\",\"label\":\"Established risk allele\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LRA\",\"label\":\"Likely risk allele\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"URA\",\"label\":\"Uncertain risk allele\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"US\",\"label\":\"Uncertain significance\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LB\",\"label\":\"Likely benign\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"B\",\"label\":\"Benign\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"CI\",\"label\":\"Conflicting interpretations of pathogenicity\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"DR\",\"label\":\"Drug response\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"CS\",\"label\":\"Confers sensitivity\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"RF\",\"label\":\"Risk factor\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"A\",\"label\":\"Association\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"PR\",\"label\":\"Protective\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"AF\",\"label\":\"Affects\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"O\",\"label\":\"Other\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"NP\",\"label\":\"Not provided\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"AN\",\"label\":\"Association not found\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"consequence\",\"label\":\"Consequence\",\"type\":\"array\",\"items\":[{\"id\":\"SO_0001566\",\"label\":\"Regulatory region variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located within a regulatory region\"},{\"id\":\"SO_0001567\",\"label\":\"Stop retained variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base in the terminator codon is changed, but the terminator remains\"},{\"id\":\"SO_0001574\",\"label\":\"Splice acceptor variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A splice variant that changes the 2 base region at the 3' end of an intron\"},{\"id\":\"SO_0001575\",\"label\":\"Splice donor variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A splice variant that changes the 2 base region at the 5' end of an intron\"},{\"id\":\"SO_0001578\",\"label\":\"Stop lost\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base of the terminator codon (stop) is changed, resulting in an elongated transcript\"},{\"id\":\"SO_0001580\",\"label\":\"Coding sequence variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that changes the coding sequence\"},{\"id\":\"SO_0001583\",\"label\":\"Missense variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant, that changes one or more bases, resulting in a different amino acid sequence but where the length is preserved\"},{\"id\":\"SO_0001587\",\"label\":\"Stop gained\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant whereby at least one base of a codon is changed, resulting in a premature stop codon, leading to a shortened transcript\"},{\"id\":\"SO_0001589\",\"label\":\"Frameshift variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant which causes a disruption of the translational reading frame, because the number of nucleotides inserted or deleted is not a multiple of three\"},{\"id\":\"SO_0001619\",\"label\":\"Non coding transcript variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A transcript variant of a non coding RNA gene\"},{\"id\":\"SO_0001620\",\"label\":\"Mature miRNA variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A transcript variant located with the sequence of the mature miRNA\"},{\"id\":\"SO_0001621\",\"label\":\"NMD transcript variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A variant in a transcript that is the target of NMD\"},{\"id\":\"SO_0001623\",\"label\":\"5 prime UTR variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A UTR variant of the 5' UTR\"},{\"id\":\"SO_0001624\",\"label\":\"3 prime UTR variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A UTR variant of the 3' UTR\"},{\"id\":\"SO_0001626\",\"label\":\"Incomplete terminal codon variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base of the final codon of an incompletely annotated transcript is changed\"},{\"id\":\"SO_0001627\",\"label\":\"Intron variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A transcript variant occurring within an intron\"},{\"id\":\"SO_0001628\",\"label\":\"Intergenic variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located in the intergenic region, between genes\"},{\"id\":\"SO_0001630\",\"label\":\"Splice region variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant in which a change has occurred within the region of the splice site, either within 1-3 bases of the exon or 3-8 bases of the intron\"},{\"id\":\"SO_0001631\",\"label\":\"Upstream gene variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located 5' of a gene\"},{\"id\":\"SO_0001632\",\"label\":\"Downstream gene variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located 3' of a gene\"},{\"id\":\"SO_0001782\",\"label\":\"TF binding site variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located within a transcription factor binding site\"},{\"id\":\"SO_0001792\",\"label\":\"Non coding transcript exon variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that changes non-coding exon sequence in a non-coding transcript\"},{\"id\":\"SO_0001818\",\"label\":\"Protein altering variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence_variant which is predicted to change the protein encoded in the coding sequence\"},{\"id\":\"SO_0001819\",\"label\":\"Synonymous variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where there is no resulting change to the encoded amino acid\"},{\"id\":\"SO_0001821\",\"label\":\"Inframe insertion\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"An inframe non synonymous variant that inserts bases into in the coding sequence\"},{\"id\":\"SO_0001822\",\"label\":\"Inframe deletion\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"An inframe non synonymous variant that deletes bases from the coding sequence\"},{\"id\":\"SO_0001889\",\"label\":\"Transcript amplification\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature amplification of a region containing a transcript\"},{\"id\":\"SO_0001891\",\"label\":\"Regulatory region amplification\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature amplification of a region containing a regulatory region\"},{\"id\":\"SO_0001892\",\"label\":\"TFBS amplification\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature amplification of a region containing a transcription factor binding site\"},{\"id\":\"SO_0001893\",\"label\":\"Transcript ablation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature ablation whereby the deleted region includes a transcript feature\"},{\"id\":\"SO_0001894\",\"label\":\"Regulatory region ablation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature ablation whereby the deleted region includes a regulatory region\"},{\"id\":\"SO_0001895\",\"label\":\"TFBS ablation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature ablation whereby the deleted region includes a transcription factor binding site\"},{\"id\":\"SO_0001906\",\"label\":\"Feature truncation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that causes the reduction of a genomic feature, with regard to the reference sequence\"},{\"id\":\"SO_0001907\",\"label\":\"Feature elongation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that causes the extension of a genomic feature, with regard to the reference sequence\"},{\"id\":\"SO_0002012\",\"label\":\"Start lost\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A codon variant that changes at least one base of the canonical start codon\"},{\"id\":\"SO_0002019\",\"label\":\"Start retained variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base in the start codon is changed, but the start remains\"}]},{\"id\":\"consequence_grouping\",\"items\":[{\"label\":\"Transcript variant\",\"items\":[{\"label\":\"Coding variant\",\"items\":[\"SO_0001580\",\"SO_0001907\",\"SO_0001906\",\"SO_0001589\",\"SO_0001626\",\"SO_0001822\",\"SO_0001821\",\"SO_0001583\",\"SO_0001621\",\"SO_0001818\",\"SO_0001819\",\"SO_0002012\",\"SO_0001587\",\"SO_0001578\",\"SO_0002019\",\"SO_0001567\"]},{\"label\":\"Non-coding variant\",\"items\":[\"SO_0001624\",\"SO_0001623\",\"SO_0001627\",\"SO_0001792\",\"SO_0001619\"]},{\"label\":\"Splice variant\",\"items\":[\"SO_0001574\",\"SO_0001575\",\"SO_0001630\"]},\"SO_0001893\",\"SO_0001889\"]},{\"label\":\"Regulatory variant\",\"items\":[\"SO_0001620\",\"SO_0001894\",\"SO_0001891\",\"SO_0001566\",\"SO_0001782\",\"SO_0001895\",\"SO_0001892\"]},{\"label\":\"Intergenic variant\",\"items\":[\"SO_0001632\",\"SO_0001628\",\"SO_0001631\"]}]},{\"id\":\"alphamissense\",\"label\":\"AlphaMissense\",\"type\":\"array\",\"items\":[{\"id\":\"N\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LP\",\"label\":\"Likely pathogenic\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"A\",\"label\":\"Ambiguous\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LB\",\"label\":\"Likely benign\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"sift\",\"label\":\"SIFT\",\"type\":\"array\",\"items\":[{\"id\":\"N\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"D\",\"label\":\"Deleterious\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"T\",\"label\":\"Tolerated\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"polyphen\",\"label\":\"PolyPhen\",\"type\":\"array\",\"items\":[{\"id\":\"N\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"PROBD\",\"label\":\"Probably damaging\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"POSSD\",\"label\":\"Possibly damaging\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"B\",\"label\":\"Benign\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"U\",\"label\":\"Unknown\",\"type\":\"boolean\",\"default\":\"1\"}]}]","module.exports = [{\"id\":\"term\",\"label\":\"Term\",\"type\":\"string\",\"default\":\"\"},{\"id\":\"dataset\",\"label\":\"Dataset\",\"type\":\"array\",\"items\":[{\"id\":\"gem_j_wga\",\"label\":\"GEM-J WGA\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"jga_wgs\",\"label\":\"JGA-WGS\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"jga_wes\",\"label\":\"JGA-WES\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"jga_snp\",\"label\":\"JGA-SNP\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"tommo\",\"label\":\"ToMMo 54KJPN\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"ncbn\",\"label\":\"NCBN\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"gnomad_genomes\",\"label\":\"gnomAD genomes\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"gnomad_exomes\",\"label\":\"gnomAD exomes\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":true},{\"id\":\"mgend\",\"label\":\"MGeND\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":false},{\"id\":\"clinvar\",\"label\":\"ClinVar\",\"type\":\"boolean\",\"default\":\"1\",\"has_freq\":false}]},{\"id\":\"frequency\",\"label\":\"Alternative allele frequency\",\"type\":\"array\",\"items\":[{\"id\":\"from\",\"label\":\"From\",\"type\":\"range\",\"default\":0},{\"id\":\"to\",\"label\":\"To\",\"type\":\"range\",\"default\":1},{\"id\":\"invert\",\"label\":\"Invert\",\"type\":\"boolean\",\"default\":\"0\"},{\"id\":\"match\",\"label\":\"Match\",\"type\":\"enumeration\",\"default\":\"any\",\"values\":[\"all\",\"any\"]}]},{\"id\":\"quality\",\"label\":\"Variant calling quality\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"type\",\"label\":\"Variant type\",\"type\":\"array\",\"items\":[{\"id\":\"SO_0001483\",\"label\":\"SNV\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_0000667\",\"label\":\"Insertion\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_0000159\",\"label\":\"Deletion\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_1000032\",\"label\":\"Indel\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"SO_1000002\",\"label\":\"Substitution\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"significance\",\"label\":\"Clinical significance\",\"type\":\"array\",\"items\":[{\"id\":\"NC\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"P\",\"label\":\"Pathogenic\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LP\",\"label\":\"Likely pathogenic\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"PLP\",\"label\":\"Pathogenic, Low penetrance\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LPLP\",\"label\":\"Likely pathogenic, Low penetrance\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"ERA\",\"label\":\"Established risk allele\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LRA\",\"label\":\"Likely risk allele\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"URA\",\"label\":\"Uncertain risk allele\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"US\",\"label\":\"Uncertain significance\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LB\",\"label\":\"Likely benign\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"B\",\"label\":\"Benign\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"CI\",\"label\":\"Conflicting interpretations of pathogenicity\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"DR\",\"label\":\"Drug response\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"CS\",\"label\":\"Confers sensitivity\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"RF\",\"label\":\"Risk factor\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"A\",\"label\":\"Association\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"PR\",\"label\":\"Protective\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"AF\",\"label\":\"Affects\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"O\",\"label\":\"Other\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"NP\",\"label\":\"Not provided\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"AN\",\"label\":\"Association not found\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"consequence\",\"label\":\"Consequence\",\"type\":\"array\",\"items\":[{\"id\":\"SO_0001566\",\"label\":\"Regulatory region variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located within a regulatory region\"},{\"id\":\"SO_0001567\",\"label\":\"Stop retained variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base in the terminator codon is changed, but the terminator remains\"},{\"id\":\"SO_0001574\",\"label\":\"Splice acceptor variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A splice variant that changes the 2 base region at the 3' end of an intron\"},{\"id\":\"SO_0001575\",\"label\":\"Splice donor variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A splice variant that changes the 2 base region at the 5' end of an intron\"},{\"id\":\"SO_0001578\",\"label\":\"Stop lost\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base of the terminator codon (stop) is changed, resulting in an elongated transcript\"},{\"id\":\"SO_0001580\",\"label\":\"Coding sequence variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that changes the coding sequence\"},{\"id\":\"SO_0001583\",\"label\":\"Missense variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant, that changes one or more bases, resulting in a different amino acid sequence but where the length is preserved\"},{\"id\":\"SO_0001587\",\"label\":\"Stop gained\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant whereby at least one base of a codon is changed, resulting in a premature stop codon, leading to a shortened transcript\"},{\"id\":\"SO_0001589\",\"label\":\"Frameshift variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant which causes a disruption of the translational reading frame, because the number of nucleotides inserted or deleted is not a multiple of three\"},{\"id\":\"SO_0001619\",\"label\":\"Non coding transcript variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A transcript variant of a non coding RNA gene\"},{\"id\":\"SO_0001620\",\"label\":\"Mature miRNA variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A transcript variant located with the sequence of the mature miRNA\"},{\"id\":\"SO_0001621\",\"label\":\"NMD transcript variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A variant in a transcript that is the target of NMD\"},{\"id\":\"SO_0001623\",\"label\":\"5 prime UTR variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A UTR variant of the 5' UTR\"},{\"id\":\"SO_0001624\",\"label\":\"3 prime UTR variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A UTR variant of the 3' UTR\"},{\"id\":\"SO_0001626\",\"label\":\"Incomplete terminal codon variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base of the final codon of an incompletely annotated transcript is changed\"},{\"id\":\"SO_0001627\",\"label\":\"Intron variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A transcript variant occurring within an intron\"},{\"id\":\"SO_0001628\",\"label\":\"Intergenic variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located in the intergenic region, between genes\"},{\"id\":\"SO_0001630\",\"label\":\"Splice region variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant in which a change has occurred within the region of the splice site, either within 1-3 bases of the exon or 3-8 bases of the intron\"},{\"id\":\"SO_0001631\",\"label\":\"Upstream gene variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located 5' of a gene\"},{\"id\":\"SO_0001632\",\"label\":\"Downstream gene variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located 3' of a gene\"},{\"id\":\"SO_0001782\",\"label\":\"TF binding site variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant located within a transcription factor binding site\"},{\"id\":\"SO_0001792\",\"label\":\"Non coding transcript exon variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that changes non-coding exon sequence in a non-coding transcript\"},{\"id\":\"SO_0001818\",\"label\":\"Protein altering variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence_variant which is predicted to change the protein encoded in the coding sequence\"},{\"id\":\"SO_0001819\",\"label\":\"Synonymous variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where there is no resulting change to the encoded amino acid\"},{\"id\":\"SO_0001821\",\"label\":\"Inframe insertion\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"An inframe non synonymous variant that inserts bases into in the coding sequence\"},{\"id\":\"SO_0001822\",\"label\":\"Inframe deletion\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"An inframe non synonymous variant that deletes bases from the coding sequence\"},{\"id\":\"SO_0001889\",\"label\":\"Transcript amplification\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature amplification of a region containing a transcript\"},{\"id\":\"SO_0001891\",\"label\":\"Regulatory region amplification\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature amplification of a region containing a regulatory region\"},{\"id\":\"SO_0001892\",\"label\":\"TFBS amplification\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature amplification of a region containing a transcription factor binding site\"},{\"id\":\"SO_0001893\",\"label\":\"Transcript ablation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature ablation whereby the deleted region includes a transcript feature\"},{\"id\":\"SO_0001894\",\"label\":\"Regulatory region ablation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature ablation whereby the deleted region includes a regulatory region\"},{\"id\":\"SO_0001895\",\"label\":\"TFBS ablation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A feature ablation whereby the deleted region includes a transcription factor binding site\"},{\"id\":\"SO_0001906\",\"label\":\"Feature truncation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that causes the reduction of a genomic feature, with regard to the reference sequence\"},{\"id\":\"SO_0001907\",\"label\":\"Feature elongation\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant that causes the extension of a genomic feature, with regard to the reference sequence\"},{\"id\":\"SO_0002012\",\"label\":\"Start lost\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A codon variant that changes at least one base of the canonical start codon\"},{\"id\":\"SO_0002019\",\"label\":\"Start retained variant\",\"type\":\"boolean\",\"default\":\"1\",\"description\":\"A sequence variant where at least one base in the start codon is changed, but the start remains\"}]},{\"id\":\"consequence_grouping\",\"items\":[{\"label\":\"Transcript variant\",\"items\":[{\"label\":\"Coding variant\",\"items\":[\"SO_0001580\",\"SO_0001907\",\"SO_0001906\",\"SO_0001589\",\"SO_0001626\",\"SO_0001822\",\"SO_0001821\",\"SO_0001583\",\"SO_0001621\",\"SO_0001818\",\"SO_0001819\",\"SO_0002012\",\"SO_0001587\",\"SO_0001578\",\"SO_0002019\",\"SO_0001567\"]},{\"label\":\"Non-coding variant\",\"items\":[\"SO_0001624\",\"SO_0001623\",\"SO_0001627\",\"SO_0001792\",\"SO_0001619\"]},{\"label\":\"Splice variant\",\"items\":[\"SO_0001574\",\"SO_0001575\",\"SO_0001630\"]},\"SO_0001893\",\"SO_0001889\"]},{\"label\":\"Regulatory variant\",\"items\":[\"SO_0001620\",\"SO_0001894\",\"SO_0001891\",\"SO_0001566\",\"SO_0001782\",\"SO_0001895\",\"SO_0001892\"]},{\"label\":\"Intergenic variant\",\"items\":[\"SO_0001632\",\"SO_0001628\",\"SO_0001631\"]}]},{\"id\":\"alphamissense\",\"label\":\"AlphaMissense\",\"type\":\"array\",\"items\":[{\"id\":\"N\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LP\",\"label\":\"Likely pathogenic\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"A\",\"label\":\"Ambiguous\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"LB\",\"label\":\"Likely benign\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"sift\",\"label\":\"SIFT\",\"type\":\"array\",\"items\":[{\"id\":\"N\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"D\",\"label\":\"Deleterious\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"T\",\"label\":\"Tolerated\",\"type\":\"boolean\",\"default\":\"1\"}]},{\"id\":\"polyphen\",\"label\":\"PolyPhen\",\"type\":\"array\",\"items\":[{\"id\":\"N\",\"label\":\"Unassigned\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"PROBD\",\"label\":\"Probably damaging\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"POSSD\",\"label\":\"Possibly damaging\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"B\",\"label\":\"Benign\",\"type\":\"boolean\",\"default\":\"1\"},{\"id\":\"U\",\"label\":\"Unknown\",\"type\":\"boolean\",\"default\":\"1\"}]}]","module.exports = [{\"id\":\"table-header-togovar_id\",\"content\":\"TogoVar identifier assigned to variants observed in Japanese populations\"},{\"id\":\"table-header-refsnp_id\",\"content\":\"RefSNP (rs) identifier of dbSNP\"},{\"id\":\"table-header-position\",\"content\":\"Chromosomal position\"},{\"id\":\"table-header-ref_alt\",\"content\":\"Reference and alternative allele\"},{\"id\":\"table-header-type\",\"content\":\"Variant type (SNV, insertion, deletion, indel or substitution)\"},{\"id\":\"table-header-gene\",\"content\":\"The HUGO Gene Nomenclature Committee (HGNC) gene symbol\"},{\"id\":\"table-header-alt_frequency\",\"content\":\"Frequency indicator representing alternative allele frequencies\",\"url\":\"doc/help#s1\"},{\"id\":\"table-header-consequence\",\"content\":\"Variant consequence detected by Variant Effect Predictor (VEP)\",\"url\":\"/doc/help#d5\"},{\"id\":\"table-header-sift\",\"content\":\"Prediction of functional effects of a nonsynonymous variant by the Sorting Intolerant From Tolerant (SIFT) program\",\"url\":\"/doc/help#d6\"},{\"id\":\"table-header-polyphen\",\"content\":\"Prediction of functional effects of a nonsynonymous variant by the PolyPhen-2 (Polymorphism Phenotyping v2) program\",\"url\":\"/doc/help#d6\"},{\"id\":\"table-header-alphamissense\",\"content\":\"Prediction of functional effects of a nonsynonymous variant by the AlphaMissense program.\",\"url\":\"/doc/help#d6\"},{\"id\":\"table-header-clinical_significance\",\"content\":\"Clinical significance provided by ClinVar\",\"url\":\"/doc/help#d7\"}]","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}:host{--height-container:var(--height-advanced-search-condition-values-container);--height:var(--height-advanced-search-condition-value);display:inline-block}:host>.condition-item-value-container{display:flex;justify-content:space-between;gap:20px}:host .inner{align-self:center;line-height:1;padding:1px 10px 0 10px;background-color:#fff;border:solid 1px var(--color-key-dark1);border-radius:calc(var(--height)*.5);font-weight:700;margin-right:2px}:host([data-condition-type=dataset]),:host([data-condition-type=genotype]){display:block;position:relative}:host([data-condition-type=dataset]) .inner,:host([data-condition-type=genotype]) .inner{min-width:50px}:host([data-condition-type=dataset]) .inner::before,:host([data-condition-type=genotype]) .inner::before{font-family:fontello,sans-serif;content:var(--char-dataset);margin-right:4px}:host([data-condition-type=significance]) .inner::before{margin-right:4px;margin-left:-2px;font-size:10px;position:relative;top:-1px}:host([data-condition-type=pathogenicity_prediction]){position:relative}:host([data-condition-type=pathogenicity_prediction]) .inner{background-color:rgba(0,0,0,0);border:none}:host([data-condition-type=dataset][data-value=gem_j_wga]) .inner{border-color:var(--color-dataset-gemj);background-color:var(--color-dataset-gemj-light)}:host([data-condition-type=dataset][data-value=gem_j_wga]) .inner::before{color:var(--color-dataset-gemj)}:host([data-condition-type=dataset][data-value=jga_snp]) .inner,:host([data-condition-type=dataset][data-value=jga_wes]) .inner,:host([data-condition-type=dataset][data-value^=bbj_riken]) .inner,:host([data-condition-type=dataset][data-value^=jga_wgs]) .inner,:host([data-condition-type=genotype][data-value=jga_snp]) .inner,:host([data-condition-type=genotype][data-value=jga_wes]) .inner,:host([data-condition-type=genotype][data-value^=bbj_riken]) .inner,:host([data-condition-type=genotype][data-value^=jga_wgs]) .inner{border-color:var(--color-dataset-jga);background-color:var(--color-dataset-jga-light)}:host([data-condition-type=dataset][data-value=jga_snp]) .inner::before,:host([data-condition-type=dataset][data-value=jga_wes]) .inner::before,:host([data-condition-type=dataset][data-value^=bbj_riken]) .inner::before,:host([data-condition-type=dataset][data-value^=jga_wgs]) .inner::before,:host([data-condition-type=genotype][data-value=jga_snp]) .inner::before,:host([data-condition-type=genotype][data-value=jga_wes]) .inner::before,:host([data-condition-type=genotype][data-value^=bbj_riken]) .inner::before,:host([data-condition-type=genotype][data-value^=jga_wgs]) .inner::before{color:var(--color-dataset-jga)}:host([data-condition-type=dataset][data-value=hgvd]) .inner{border-color:var(--color-dataset-hgvd);background-color:var(--color-dataset-hgvd-light)}:host([data-condition-type=dataset][data-value=hgvd]) .inner::before{color:var(--color-dataset-hgvd)}:host([data-condition-type=dataset][data-value=tommo]) .inner{border-color:var(--color-dataset-tommo);background-color:var(--color-dataset-tommo-light)}:host([data-condition-type=dataset][data-value=tommo]) .inner::before{color:var(--color-dataset-tommo)}:host([data-condition-type=dataset][data-value^=ncbn]) .inner,:host([data-condition-type=genotype][data-value^=ncbn]) .inner{border-color:var(--color-dataset-ncbn);background-color:var(--color-dataset-ncbn-light)}:host([data-condition-type=dataset][data-value^=ncbn]) .inner::before,:host([data-condition-type=genotype][data-value^=ncbn]) .inner::before{color:var(--color-dataset-ncbn)}:host([data-condition-type=dataset][data-value^=gnomad_exomes]) .inner,:host([data-condition-type=dataset][data-value^=gnomad_genomes]) .inner{border-color:var(--color-dataset-foreign);background-color:var(--color-dataset-foreign-light)}:host([data-condition-type=dataset][data-value^=gnomad_exomes]) .inner::before,:host([data-condition-type=dataset][data-value^=gnomad_genomes]) .inner::before{color:var(--color-dataset-foreign)}:host([data-condition-type=significance][data-value=P]) .inner{border-color:var(--color-sign-dangerous);background-color:var(--color-sign-dangerous-light)}:host([data-condition-type=significance][data-value=P]) .inner::before{content:\"P\";color:var(--color-sign-dangerous)}:host([data-condition-type=significance][data-value=LP]) .inner{border-color:var(--color-sign-dangerous);background-color:var(--color-sign-dangerous-light)}:host([data-condition-type=significance][data-value=LP]) .inner::before{content:\"LP\";color:var(--color-sign-dangerous)}:host([data-condition-type=significance][data-value=PLP]) .inner{border-color:var(--color-sign-lowdangerous);background-color:var(--color-sign-lowdangerous-light)}:host([data-condition-type=significance][data-value=PLP]) .inner::before{content:\"P\";color:var(--color-sign-lowdangerous)}:host([data-condition-type=significance][data-value=LPLP]) .inner{border-color:var(--color-sign-lowdangerous);background-color:var(--color-sign-lowdangerous-light)}:host([data-condition-type=significance][data-value=LPLP]) .inner::before{content:\"LP\";color:var(--color-sign-lowdangerous)}:host([data-condition-type=significance][data-value=ERA]) .inner{border-color:var(--color-sign-warning);background-color:var(--color-sign-warning-light)}:host([data-condition-type=significance][data-value=ERA]) .inner::before{content:\"RA\";color:var(--color-sign-warning)}:host([data-condition-type=significance][data-value=LRA]) .inner{border-color:var(--color-sign-warning);background-color:var(--color-sign-warning-light)}:host([data-condition-type=significance][data-value=LRA]) .inner::before{content:\"RA\";color:var(--color-sign-warning)}:host([data-condition-type=significance][data-value=URA]) .inner{border-color:var(--color-sign-warning);background-color:var(--color-sign-warning-light)}:host([data-condition-type=significance][data-value=URA]) .inner::before{content:\"RA\";color:var(--color-sign-warning)}:host([data-condition-type=significance][data-value=US]) .inner{border-color:var(--color-sign-unknown);background-color:var(--color-sign-unknown-light)}:host([data-condition-type=significance][data-value=US]) .inner::before{content:\"US\";color:var(--color-sign-unknown)}:host([data-condition-type=significance][data-value=LB]) .inner{border-color:var(--color-sign-normal);background-color:var(--color-sign-normal-light)}:host([data-condition-type=significance][data-value=LB]) .inner::before{content:\"LB\";color:var(--color-sign-normal)}:host([data-condition-type=significance][data-value=B]) .inner{border-color:var(--color-sign-safe);background-color:var(--color-sign-safe-light)}:host([data-condition-type=significance][data-value=B]) .inner::before{content:\"B\";color:var(--color-sign-safe)}:host([data-condition-type=significance][data-value=CI]) .inner{border-color:var(--color-sign-modifier);background-color:var(--color-sign-modifier-light)}:host([data-condition-type=significance][data-value=CI]) .inner::before{content:\"CI\";color:var(--color-sign-modifier)}:host([data-condition-type=significance][data-value=DR]) .inner{border-color:var(--color-sign-other);background-color:var(--color-sign-other-light)}:host([data-condition-type=significance][data-value=DR]) .inner::before{content:\"DR\";color:var(--color-sign-other)}:host([data-condition-type=significance][data-value=CS]) .inner{border-color:var(--color-sign-other);background-color:var(--color-sign-other-light)}:host([data-condition-type=significance][data-value=CS]) .inner::before{content:\"CS\";color:var(--color-sign-other)}:host([data-condition-type=significance][data-value=RF]) .inner{border-color:var(--color-sign-other);background-color:var(--color-sign-other-light)}:host([data-condition-type=significance][data-value=RF]) .inner::before{content:\"RF\";color:var(--color-sign-other)}:host([data-condition-type=significance][data-value=A]) .inner{border-color:var(--color-sign-other);background-color:var(--color-sign-other-light)}:host([data-condition-type=significance][data-value=A]) .inner::before{content:\"A\";color:var(--color-sign-other)}:host([data-condition-type=significance][data-value=PR]) .inner{border-color:var(--color-sign-other);background-color:var(--color-sign-other-light)}:host([data-condition-type=significance][data-value=PR]) .inner::before{content:\"PR\";color:var(--color-sign-other)}:host([data-condition-type=significance][data-value=AF]) .inner{border-color:var(--color-sign-other);background-color:var(--color-sign-other-light)}:host([data-condition-type=significance][data-value=AF]) .inner::before{content:\"AF\";color:var(--color-sign-other)}:host([data-condition-type=significance][data-value=O]) .inner{border-color:var(--color-gray);background-color:#fff}:host([data-condition-type=significance][data-value=O]) .inner::before{content:\"O\";border-color:var(--color-gray)}:host([data-condition-type=significance][data-value=NP]) .inner{border-color:var(--color-gray);background-color:#fff}:host([data-condition-type=significance][data-value=NP]) .inner::before{content:\"NP\";border-color:var(--color-gray)}:host([data-condition-type=significance][data-value=AN]) .inner{border-color:var(--color-gray);background-color:#fff}:host([data-condition-type=significance][data-value=AN]) .inner::before{content:\"AN\";border-color:var(--color-gray)}button.delete{display:none;border-radius:50%;border:none;color:var(--color-gray);cursor:pointer;position:relative;font-family:fontello,sans-serif;background-color:rgba(0,0,0,0);padding:0;margin-left:.2em;margin-right:-.5em}button.delete::before{content:var(--char-delete);font-size:.8em}`;\n    ","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}:host{display:flex;align-items:center;white-space:nowrap}:host>.frequencygraph{width:100px;height:3.5px;background-color:var(--color-darker-gray);position:relative;margin-right:4px}:host>.frequencygraph>.scale{position:absolute;top:-1px;bottom:-1px;border-left:dotted .5px var(--color-separator)}@media(-webkit-min-device-pixel-ratio:2){:host>.frequencygraph>.scale{border-left:dotted 1px var(--color-separator)}}:host>.frequencygraph>.bar{position:absolute;height:100%}:host([data-dataset=gem_j_wga])>.frequencygraph>.bar{background-color:var(--color-dataset-gemj)}:host([data-dataset=jga_snp]) .frequencygraph>.bar,:host([data-dataset=jga_wes]) .frequencygraph>.bar,:host([data-dataset^=bbj_riken]) .frequencygraph>.bar,:host([data-dataset^=jga_wgs]) .frequencygraph>.bar{background-color:var(--color-dataset-jga)}:host([data-dataset=tommo])>.frequencygraph>.bar{background-color:var(--color-dataset-tommo)}:host([data-dataset=hgvd])>.frequencygraph>.bar{background-color:var(--color-dataset-hgvd)}:host([data-dataset^=ncbn])>.frequencygraph>.bar{background-color:var(--color-dataset-ncbn)}:host>.range{margin-right:.6em;width:4.6em}:host>.range>.from,:host>.range>.to{font-weight:700}:host>.filtered{margin:0;font-size:10px}:host([data-mode=alt_alt])>.frequencygraph,:host([data-mode=alt_ref])>.frequencygraph,:host([data-mode=count])>.frequencygraph,:host([data-mode=hemi_alt])>.frequencygraph{visibility:hidden}:host([data-filtered=false])>.filtered{visibility:hidden}`;\n    ","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}.title{color:#117f93;font-size:12px;font-weight:400;line-height:16px;margin:4px 0 0;padding:5px 18px 0}.title:first-letter{text-transform:capitalize}.list{margin:10px 0;padding-left:0;list-style:none;overflow-y:scroll;max-height:300px}.list>.item{cursor:pointer;padding:0 18px;height:24px;line-height:24px;transition:background-color .2s}.list>.item>em{background-color:var(--color-suggest);font-style:normal}.list>.item:first-child{padding-top:4px}.list>.item:hover{background-color:rgba(255,221,0,.2)}.list>.item.-disabled{cursor:auto}.list>.item.-disabled:hover{background-color:inherit}.list>.item>.sub{padding-left:.5em;color:rgba(68,68,68,.5);font-size:12px}.list>.item.-selected{background-color:#fd0}.list>.item.-empty{padding:.5rem;text-align:center;color:rgba(68,68,68,.5)}`;\n    ","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}:host{position:relative;display:block}.suggestions-container{position:absolute;top:100%;left:14px;display:flex;z-index:10200;color:#444;font-size:14px;box-shadow:0 2px 6px rgba(0,0,0,.2);background-color:#fff;max-width:50%;min-width:fit-content}.suggestions-container>.column+.column{border-left:solid 1px rgba(0,0,0,.2)}`;\n    ","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}.fieldcontainer{box-sizing:border-box}.fieldcontainer>.field{position:relative;margin-bottom:4px;height:30px}.fieldcontainer>.field>.input-form>.searchfield[type=text]{font-family:\"Roboto Condensed\",sans-serif;box-sizing:border-box;width:100%;line-height:30px;border:solid 1px #0f6272;border-radius:15px;padding:0 12px;vertical-align:center;font-size:12px;outline:0;opacity:.9;box-shadow:0 1px 1px rgba(0,0,0,.2) inset}.fieldcontainer>.field>.input-form>.searchfield[type=text]:focus{opacity:1}.fieldcontainer>.field>.input-form>.delete{position:absolute;top:6px;right:23px;color:var(--color-gray);border:none;background-color:rgba(0,0,0,0);cursor:pointer}.fieldcontainer>.field>.input-form>.delete:after{font-family:fontello;content:var(--char-delete);position:absolute;font-size:1.2rem}.fieldcontainer>.field>.input-form .searchfield:not(:valid)~.delete{display:none}`;\n    ","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}button{display:block;width:30px;height:30px;border:solid 1px #117f93;border-radius:100%;margin-right:-4px;position:relative;background-color:#fff;box-shadow:0 1px 1px rgba(0,0,0,.2);cursor:pointer}button:after,button:before{content:\"\";display:block;position:absolute;box-sizing:border-box}button:before{width:12px;height:12px;border:solid 2px #117f93;border-radius:6px;top:6px;left:6px}button:after{height:5px;border-left:solid 2px #117f93;transform:rotate(-45deg);top:16px;left:17px}`;\n    ","import {css} from 'lit'; export default css`:root{--color-key:#62d5d9;--color-key-dark1:#117f93;--color-key-dark2:#0f6272;--color-key-dark3:#125263;--color-black:#444;--color-gray:#94928d;--color-pale-gray:hsl(42.8571428571, 3.1674208145%, 101.6666666667%);--color-light-gray:rgb(234.4230769231, 234.0384615385, 233.0769230769);--color-darker-gray:#dbdbdb;--color-selected:#ffdd00;--color-selected-hover:rgba(255, 221, 0, 0.2);--color-selected-light:#fdfae5;--color-singleton:rgb(255, 244.8, 178.5);--color-homozygote:#ff5a54;--color-suggest:#ffff50;--color-disable:#999999;--color-disable-deep:#808080;--color-separator:rgba(0, 0, 0, 0.3);--color-separator-sub:rgba(0, 0, 0, 0.2);--color-mutation-ref:#249eb3;--color-mutation-alt:#ff6682;--color-dataset-gemj:#dc2828;--color-dataset-gemj-light:rgb(252.13, 237.37, 237.37);--color-dataset-jga:#62d5d9;--color-dataset-jga-light:rgb(241.7153846154, 251.4461538462, 251.7846153846);--color-dataset-tommo:#ca678d;--color-dataset-tommo-light:hsl(336.9696969697, 48.2926829268%, 109.8039215686%);--color-dataset-hgvd:#005b80;--color-dataset-hgvd-light:rgb(230, 247.7734375, 255);--color-dataset-ncbn:#234b7c;--color-dataset-ncbn-light:hsl(213.0337078652, 55.9748427673%, 101.1764705882%);--color-dataset-bbj:#ff993f;--color-dataset-bbj-light:rgb(255, 247.828125, 241.5);--color-dataset-foreign:#94928d;--color-dataset-foreign-light:rgb(246.7692307692, 246.6153846154, 246.2307692308);--color-sign-safe:#04af58;--color-sign-safe-light:rgb(230.5586592179, 254.4413407821, 242.2905027933);--color-sign-normal:#9dcf3a;--color-sign-normal-light:rgb(242.68, 248.9657142857, 230.2342857143);--color-sign-warning:#ffae00;--color-sign-warning-light:rgb(255, 246.9, 229.5);--color-sign-lowdangerous:#ff953c;--color-sign-lowdangerous-light:rgb(255, 226.6246153846, 202.8);--color-sign-dangerous:#ff5a54;--color-sign-dangerous-light:rgb(255, 237.6315789474, 237);--color-sign-modifier:#c654ff;--color-sign-modifier-light:#f9edff;--color-sign-other:#9c8200;--color-sign-other-light:#fff7cf;--color-sign-unknown:#bbba7e;--color-sign-unknown-light:rgb(248.614213198, 248.5203045685, 242.885786802);--height-inline:18px;--height-advanced-search-condition-values-container:24px;--height-advanced-search-condition-value:18px;--z-index-base:10000;--z-index-layout-aside:calc(var(--z-index-base) + 100);--z-index-row-indicator:calc(var(--z-index-base) + 100);--z-index-advanced-search-menu:calc(var(--z-index-base) + 100);--z-index-detail-header:calc(var(--z-index-base) + 100);--z-index-module-tabs-view:calc(var(--z-index-base) + 200);--z-index-global-header:calc(var(--z-index-base) + 200);--z-index-suggest-view:calc(var(--z-index-base) + 200);--z-index-drawer:calc(var(--z-index-base) + 300);--z-index-configuration:calc(var(--z-index-base) + 400);--z-index-editing-condition:calc(var(--z-index-base) + 400);--z-index-activity-indicator:calc(var(--z-index-base) + 500);--char-TIMES:\"\";--char-INFO_CIRCLE:\"\";--char-ARROW_RIGHT:\"\";--char-ARROW_DOWN:\"\";--char-CARET-UP:\"\";--char-CARET-DOWN:\"\";--char-EXCRAMATION_TRIANGLE:\"\";--char-EXTERNAL_LINK:\"\";--char-ARROW_CIRCLE_RIGHT:\"\";--char-WRENCH:\"\";--char-CHECK:\"\";--char-dataset:\"\";--char-logical-op-and:\"\";--char-logical-op-or:\"\";--char-logical-op-outline:\"\";--char-edit:\"\";--char-delete:\"\";--char-group:\"\";--char-ungroup:\"\";--char-copy:\"\"}:host{display:flex;gap:.2em;flex-wrap:wrap;align-items:center;height:fit-content;margin-top:.2rem}dl{font-size:12px;line-height:16px;margin-bottom:0;padding:0 .5em;display:inline-block;margin-block-start:0;border-radius:8px;cursor:pointer;transition:background-color .2s,box-shadow .2s}dl>dd,dl>dt{display:inline-block;margin-bottom:0;color:#fff;transition:color .2s}dl>dt{font-weight:400;opacity:.6}dl>dt:after{content:\":\"}dl>dd{margin-inline-start:.2em}dl:hover{background-color:#0f6272}`;\n    ","import {css} from 'lit'; export default css`.simple-search-container{display:flex;gap:.2rem;align-items:center}.simple-search-container>search-field-with-suggestions{flex:1}`;\n    ","import { storeManager } from '../store/StoreManager';\nimport * as qs from 'qs';\nimport * as _ from 'lodash';\nimport { API_URL } from '../global.js';\nconst LIMIT = 100;\nimport { extractSearchCondition } from '../store/searchManager';\nimport { FetchOption, SearchResults, SearchStatistics } from '../types';\n\nlet currentAbortController = null;\nlet _currentSearchMode: 'simple' | 'advanced' | null = null;\nlet lastRequestRanges = new Set(); // 取得済みの範囲を管理\n\n/** 検索を実行するメソッド（データ取得 & 更新） */\nexport const executeSearch = (() => {\n  let isRequestInProgress = false;\n\n  return _.debounce((offset = 0, isFirstTime = false) => {\n    // 既にリクエストが進行中の場合はスキップ\n    if (isRequestInProgress && !isFirstTime) {\n      return;\n    }\n\n    const newSearchMode = storeManager.getData('searchMode');\n\n    // 新しい検索リクエストの前に、既存のリクエストをキャンセル\n    if (currentAbortController) {\n      currentAbortController.abort();\n    }\n\n    if (_currentSearchMode && _currentSearchMode !== newSearchMode) {\n      // mode切替時\n      _currentSearchMode = newSearchMode;\n      isFirstTime = true; // データリセットのため\n      lastRequestRanges.clear(); // モード切り替え時にクリア\n    } else {\n      // スクロール時\n      const offsetStart = offset - (offset % LIMIT);\n      const rangeKey = `${offsetStart}-${offsetStart + LIMIT}`;\n\n      if (storeManager.getData('searchMode') === 'simple') {\n        // 未取得の範囲の場合のみリクエスト\n        if (!lastRequestRanges.has(rangeKey)) {\n          lastRequestRanges.add(rangeKey);\n        } else {\n          return; // 既に取得済みの範囲はスキップ\n        }\n      }\n    }\n\n    // 現在の検索モードを保存\n    _currentSearchMode = newSearchMode;\n\n    // 新しい AbortController を作成\n    currentAbortController = new AbortController();\n    const signal = currentAbortController.signal;\n\n    // 初回検索時のデータリセット\n    if (isFirstTime) {\n      _resetSearchResults();\n      lastRequestRanges.clear(); // リセット時にクリア\n    }\n\n    // フェッチフラグを設定\n    storeManager.setData('isFetching', true);\n    isRequestInProgress = true;\n\n    // API のエンドポイントを取得\n    const apiEndpoints = _determineSearchEndpoints(offset, isFirstTime);\n\n    // API リクエストオプションを設定\n    const requestOptions = _getRequestOptions(signal);\n\n    // データ取得\n    if (apiEndpoints && apiEndpoints.length > 0) {\n      Promise.all(\n        apiEndpoints.map((endpoint) => _fetchData(endpoint, requestOptions))\n      )\n        .then(() => {\n          // すべてのリクエストが完了した後にローディング状態を解除\n          storeManager.setData('isFetching', false);\n          isRequestInProgress = false;\n          _updateAppState();\n        })\n        .catch((error) => {\n          // AbortErrorの場合はローディング状態を維持\n          if (error.name === 'AbortError') return;\n          storeManager.setData('isFetching', false);\n          isRequestInProgress = false;\n          storeManager.setData('searchMessages', { error });\n        });\n    } else {\n      storeManager.setData('isFetching', false);\n      isRequestInProgress = false;\n    }\n  }, 300);\n})();\n\n/** 初回検索時のデータをリセット */\nfunction _resetSearchResults() {\n  storeManager.setData('numberOfRecords', 0);\n  storeManager.setData('offset', 0);\n  storeManager.setData('rowCount', 0);\n  storeManager.setData('isFetching', false);\n  storeManager.setData('searchResults', []);\n  lastRequestRanges.clear(); // データリセット時にクリア\n}\n\n/** 検索用 API のエンドポイントを取得 */\nfunction _determineSearchEndpoints(\n  offset: number,\n  isFirstTime: boolean\n): string[] {\n  let basePath: string;\n  let conditions = '';\n\n  switch (storeManager.getData('searchMode')) {\n    case 'simple': {\n      // Simple searchの場合のみLIMITでの調整を行う\n      const offsetStart = offset - (offset % LIMIT);\n      conditions = qs.stringify(\n        extractSearchCondition(storeManager.getData('simpleSearchConditions'))\n      );\n      basePath = `${API_URL}/search?offset=${offsetStart}${\n        conditions ? '&' + conditions : ''\n      }`;\n\n      return isFirstTime\n        ? [`${basePath}&stat=0&data=1`, `${basePath}&stat=1&data=0`]\n        : [`${basePath}&stat=0&data=1`];\n    }\n\n    case 'advanced': {\n      // Advanced searchの場合は元のoffsetをそのまま使用\n      basePath = `${API_URL}/api/search/variant`;\n\n      return isFirstTime\n        ? [`${basePath}?stat=0&data=1`, `${basePath}?stat=1&data=0`]\n        : [`${basePath}?stat=0&data=1`];\n    }\n  }\n}\n\n/** API リクエストのオプションを作成 */\nfunction _getRequestOptions(signal: AbortSignal): FetchOption {\n  if (storeManager.getData('searchMode') === 'simple') {\n    // Simple search のリクエストオプション\n    return {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      mode: 'cors',\n      signal: signal,\n    };\n  }\n\n  // Advanced search のリクエストオプション\n  const body: Partial<{ offset: number; query: any }> = {\n    offset: _calculateOffset(storeManager.getData('offset'), LIMIT),\n  };\n\n  if (\n    storeManager.getData('advancedSearchConditions') &&\n    Object.keys(storeManager.getData('advancedSearchConditions')).length > 0\n  ) {\n    body.query = storeManager.getData('advancedSearchConditions');\n  }\n\n  return {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    mode: 'cors',\n    signal: signal,\n    body: JSON.stringify(body),\n  };\n}\n\nfunction _calculateOffset(offset: number, limit: number): number {\n  const roundedOffset =\n    Math.round(offset / (limit / 2)) * (limit / 2) - limit / 4;\n  return Math.max(0, roundedOffset);\n}\n\n/** データを取得して結果を更新 */\nasync function _fetchData(endpoint: string, options: FetchOption) {\n  try {\n    const response = await fetch(endpoint, options);\n    if (!response.ok) {\n      throw new Error(_getErrorMessage(response.status));\n    }\n    const jsonResponse = await response.json();\n    const url = new URL(endpoint);\n    const queryParams = Object.fromEntries(url.searchParams.entries());\n\n    // 現在の検索モードと一致する場合のみ結果を処理\n    if (_currentSearchMode === storeManager.getData('searchMode')) {\n      if (queryParams.data === '1') {\n        _processSearchResults(jsonResponse);\n      }\n      if (queryParams.stat === '1') {\n        _processStatistics(jsonResponse);\n      }\n    }\n\n    if (jsonResponse.notice || jsonResponse.warning || jsonResponse.error) {\n      storeManager.setData('searchMessages', {\n        notice: jsonResponse.notice?.join?.('<br>'),\n        warning: jsonResponse.warning?.join?.('<br>'),\n        error: jsonResponse.error?.join?.('<br>'),\n      });\n    } else {\n      storeManager.setData('searchMessages', '');\n    }\n  } catch (error) {\n    console.error(error);\n    if (error.name === 'AbortError') {\n      // AbortErrorの場合はエラーオブジェクトを投げる\n      const abortError = new Error('ABORTED');\n      abortError.name = 'AbortError';\n      throw abortError;\n    }\n    throw error;\n  }\n}\n\n/** HTTP ステータスコードに応じたエラーメッセージを取得 */\nfunction _getErrorMessage(statusCode: number): string {\n  const errorTypes = {\n    400: 'INVALID_REQUEST',\n    401: 'UNAUTHORIZED',\n    404: 'NOT_FOUND',\n    500: 'INTERNAL_SERVER_ERROR',\n    502: 'BAD_GATEWAY',\n  };\n  return errorTypes[statusCode] || 'UNKNOWN_ERROR';\n}\n\n/** 検索結果データをセット */\nfunction _processSearchResults(json: SearchResults) {\n  // results\n  storeManager.setResults(json.data, json.scroll.offset);\n}\n\n/** 統計情報をセット */\nfunction _processStatistics(json: SearchStatistics) {\n  // status\n  storeManager.setData('searchStatus', {\n    available: Math.min(json.statistics.filtered, json.scroll.max_rows),\n    filtered: json.statistics.filtered,\n    total: json.statistics.total,\n  });\n  storeManager.setData(\n    'numberOfRecords',\n    storeManager.getData('searchStatus').available\n  );\n\n  // statistics\n  storeManager.setData('statisticsDataset', json.statistics.dataset); // dataset\n  storeManager.setData('statisticsSignificance', json.statistics.significance); // significance\n  storeManager.setData('statisticsType', json.statistics.type); // total_variant_type\n  storeManager.setData('statisticsConsequence', json.statistics.consequence); // consequence\n}\n\n/** 検索状態を更新し、条件が変わっていた場合は再検索 */\nasync function _updateAppState() {\n  // for Download button\n  storeManager.getData('searchMode');\n  switch (storeManager.getData('searchMode')) {\n    case 'simple':\n      if (storeManager.getData('simpleSearchConditions').term) {\n        document.body.setAttribute('data-has-conditions', 'true');\n      }\n      break;\n    case 'advanced':\n      document.body.toggleAttribute(\n        'data-has-conditions',\n        Object.keys(storeManager.getData('advancedSearchConditions')).length > 0\n      );\n  }\n\n  // まずoffsetを更新して表示位置を確定\n  storeManager.publish('offset');\n\n  // 次にデータを更新\n  storeManager.publish('searchResults');\n\n  // 最後にステータスを更新\n  storeManager.setData('appStatus', 'normal');\n}\n","import ConditionView from './ConditionView.js';\nimport ConditionValues from './ConditionValues';\nimport { storeManager } from '../store/StoreManager';\nimport { ADVANCED_CONDITIONS } from '../global.js';\nimport { CONDITION_TYPE, CONDITION_ITEM_TYPE } from '../definition.js';\nimport { keyDownEvent } from '../utils/keyDownEvent.js';\n\n/**\n * Interface for the advanced search builder view that manages search conditions\n */\ninterface AdvancedSearchBuilderView {\n  /** Triggers when search conditions change */\n  changeCondition(): void;\n  /** Deletes the specified condition items */\n  delete(items: ConditionItemView[]): void;\n}\n\n/**\n * Interface for the condition group view that contains condition items\n */\ninterface ConditionGroupView {\n  // Properties to be defined as needed\n}\n\n/**\n * Generic query value object\n */\ninterface QueryValue {\n  [key: string]: any;\n}\n\n/**\n * Query structure for location-based searches\n */\ninterface LocationQuery {\n  location: {\n    chromosome: string;\n    position: number | { gte: number; lte: number };\n  };\n}\n\n/**\n * Query structure for gene-based searches\n */\ninterface GeneQuery {\n  gene: {\n    relation: string;\n    terms: number[];\n  };\n}\n\n/**\n * Query structure for variant ID searches\n */\ninterface IdQuery {\n  id: string[];\n}\n\n/**\n * Query structure for clinical significance searches\n */\ninterface SignificanceQuery {\n  [key: string]: {\n    relation: string;\n    source: string[];\n    terms: string[];\n  };\n}\n\n/**\n * Default query structure for other condition types\n */\ninterface DefaultQuery {\n  [key: string]: {\n    relation: string;\n    terms: string[];\n  };\n}\n\n/**\n * Custom element interface for condition item value views\n */\ninterface ConditionItemValueViewElement extends Element {\n  /** The value of the condition item */\n  value: string;\n}\n\n/**\n * Custom element interface for frequency count value views\n */\ninterface FrequencyCountValueViewElement extends Element {\n  /** The query value for frequency counts */\n  queryValue: any;\n}\n\n/**\n * Custom element interface for prediction value views\n */\ninterface PredictionValueViewElement extends Element {\n  /** The query value for pathogenicity predictions */\n  queryValue: any;\n}\n\n/**\n * Union type representing all possible condition query structures\n */\ntype ConditionQuery =\n  | QueryValue\n  | LocationQuery\n  | GeneQuery\n  | IdQuery\n  | SignificanceQuery\n  | DefaultQuery\n  | { or: any[] }\n  | { and: any[] };\n\n/**\n * Represents a condition item view for editing and deleting search conditions.\n * This class extends ConditionView and provides functionality for managing\n * individual search conditions in the advanced search interface.\n */\nclass ConditionItemView extends ConditionView {\n  /** The type of condition (e.g., gene, id, dataset, location) */\n  private readonly _conditionType: string;\n\n  /** Whether this is the first time editing (affects deletion behavior) */\n  private _isFirstTime: boolean;\n\n  /** Stores the last relation state for cancellation purposes */\n  private _keepLastRelation: string;\n\n  /** DOM element containing the condition values */\n  private _valuesEl: HTMLDivElement;\n\n  /** DOM element containing the condition editor */\n  private _editorEl: HTMLDivElement;\n\n  /** The condition values manager instance */\n  private _conditionValues: ConditionValues;\n\n  /**\n   * Creates a new ConditionItemView instance\n   *\n   * @param builder - The advanced search builder that manages search conditions\n   * @param parentView - The parent condition group view that contains this item\n   * @param conditionType - The type of condition (dataset, significance, consequence, disease, gene, id, location, type)\n   * @param options - Additional options for the condition item\n   * @param conditionItemType - Item type identifier (0 for ConditionItemView, 1 for ConditionGroupView)\n   * @param referenceElm - Optional reference element for positioning\n   */\n  constructor(\n    builder: AdvancedSearchBuilderView,\n    parentView: ConditionGroupView,\n    conditionType: string,\n    cconditionItemType: 0 | 1,\n    referenceElm: Node | null = null\n  ) {\n    super(CONDITION_ITEM_TYPE.condition, builder, parentView, referenceElm);\n\n    this._conditionType = conditionType;\n    this._isFirstTime = true;\n    this._keepLastRelation = 'eq';\n\n    this.initializeHTML();\n    this.setupDOMReferences();\n    this.attachEventListeners();\n    this.autoEnterEditMode();\n  }\n\n  /**\n   * Initializes the HTML structure for the condition item\n   */\n  private initializeHTML(): void {\n    this._elm.classList.add('advanced-search-condition-item-view');\n    this._elm.dataset.classification = this._conditionType;\n    this._elm.dataset.relation = this.getInitialRelation();\n    this._elm.innerHTML = this.generateHTML();\n  }\n\n  /**\n   * Determines the initial relation value based on condition type\n   */\n  private getInitialRelation(): string {\n    const noRelationTypes = [\n      'dataset',\n      'genotype',\n      'pathogenicity_prediction',\n      'id',\n      'location',\n    ];\n    return noRelationTypes.includes(this._conditionType) ? '' : 'eq';\n  }\n\n  /**\n   * Generates the HTML template for the condition item\n   */\n  private generateHTML(): string {\n    return `\n    <div class=\"body\">\n      <div class=\"summary\">\n        <div class=\"classification\">${\n          ADVANCED_CONDITIONS[this._conditionType].label\n        }</div>\n        <div class=\"relation\"></div>\n        <div class=\"values\"></div>\n        <div class=\"buttons\">\n          <button class=\"edit\" title=\"Edit\"></button>\n          <button class=\"delete\" title=\"Delete\"></button>\n        </div>\n      </div>\n      <div class=\"advanced-search-condition-editor-view\"></div>\n    </div>\n    <div class=\"bg\"></div>`;\n  }\n\n  /**\n   * Sets up DOM element references\n   */\n  private setupDOMReferences(): void {\n    const body = this._elm.querySelector(':scope > .body')!;\n    const summary = body.querySelector(':scope > .summary')!;\n\n    this._valuesEl = summary.querySelector(\n      ':scope > .values'\n    ) as HTMLDivElement;\n    this._editorEl = body.querySelector(\n      ':scope > .advanced-search-condition-editor-view'\n    ) as HTMLDivElement;\n\n    this._conditionValues = new ConditionValues(this); // conditionItemType is always 0 for ConditionItemView\n  }\n\n  /**\n   * Attaches event listeners to DOM elements\n   */\n  private attachEventListeners(): void {\n    this.attachClickPropagationStopper();\n    this.attachSelectionToggle();\n    this.attachRelationToggle();\n    this.attachButtonHandlers();\n    this.attachKeyboardHandler();\n  }\n\n  /**\n   * Prevents click event propagation\n   */\n  private attachClickPropagationStopper(): void {\n    this._elm.addEventListener('click', (e: MouseEvent) => {\n      e.stopImmediatePropagation();\n    });\n  }\n\n  /**\n   * Attaches selection toggle functionality\n   */\n  private attachSelectionToggle(): void {\n    const summary = this._elm.querySelector(':scope > .body > .summary')!;\n    summary.addEventListener('click', this._toggleSelecting.bind(this));\n  }\n\n  /**\n   * Attaches logical operation toggle functionality\n   */\n  private attachRelationToggle(): void {\n    const summary = this._elm.querySelector(':scope > .body > .summary')!;\n    const relationElement = summary.querySelector(':scope > .relation')!;\n\n    relationElement.addEventListener('click', (e: MouseEvent) => {\n      e.stopImmediatePropagation();\n      this.toggleRelation();\n    });\n  }\n\n  /**\n   * Toggles the logical relation between 'eq' and 'ne'\n   */\n  private toggleRelation(): void {\n    const currentRelation = this._elm.dataset.relation;\n    this._elm.dataset.relation = currentRelation === 'eq' ? 'ne' : 'eq';\n\n    if (!storeManager.getData('showModal')) {\n      this._keepLastRelation = this._elm.dataset.relation!;\n      this._builder.changeCondition();\n    }\n  }\n\n  /**\n   * Attaches edit and delete button handlers\n   */\n  private attachButtonHandlers(): void {\n    const summary = this._elm.querySelector(':scope > .body > .summary')!;\n    const buttons = summary.querySelectorAll(':scope > .buttons > button');\n\n    for (const button of buttons) {\n      button.addEventListener('click', (e: MouseEvent) => {\n        e.stopImmediatePropagation();\n        this.handleButtonClick(e.target as HTMLButtonElement);\n      });\n    }\n  }\n\n  /**\n   * Handles button click events\n   */\n  private handleButtonClick(target: HTMLButtonElement): void {\n    switch (target.className) {\n      case 'edit':\n        this.enterEditMode();\n        break;\n      case 'delete':\n        this._builder.delete([this]);\n        break;\n    }\n  }\n\n  /**\n   * Enters edit mode for the condition\n   */\n  private enterEditMode(): void {\n    this._elm.classList.add('-editing');\n    this._conditionValues.startToEditCondition();\n    storeManager.setData('showModal', true);\n    window.addEventListener('keydown', this._keydownEscapeEvent);\n  }\n\n  /**\n   * Attaches keyboard event handler\n   */\n  private attachKeyboardHandler(): void {\n    window.addEventListener('keydown', this._keydownEscapeEvent);\n  }\n\n  /**\n   * Automatically enters edit mode when the instance is created\n   */\n  private autoEnterEditMode(): void {\n    const summary = this._elm.querySelector(':scope > .body > .summary')!;\n    const editButton = summary.querySelector(\n      ':scope > .buttons > button.edit'\n    ) as HTMLButtonElement;\n    editButton.dispatchEvent(new Event('click'));\n  }\n\n  /**\n   * Exits edit mode and triggers condition search\n   */\n  doneEditing(): void {\n    this._elm.classList.remove('-editing');\n    this._isFirstTime = false;\n    this._builder.changeCondition();\n    storeManager.setData('showModal', false);\n    window.removeEventListener('keydown', this._keydownEscapeEvent);\n  }\n\n  /**\n   * Removes the condition item from the DOM and cleans up resources\n   * Used in _clickCancelButton of ConditionValues\n   */\n  remove(): void {\n    delete this._conditionValues;\n    super.remove();\n    storeManager.setData('showModal', false);\n    window.removeEventListener('keydown', this._keydownEscapeEvent);\n  }\n\n  /**\n   * Bound reference to the keyboard escape handler\n   */\n  private readonly _keydownEscapeEvent = this._keydownEscape.bind(this);\n\n  /**\n   * Handles escape key press to exit edit mode\n   * Removes the item if it's first time editing, otherwise reverts changes\n   */\n  private _keydownEscape(e: KeyboardEvent): void {\n    if (\n      e.key !== 'Escape' ||\n      !this._conditionValues ||\n      !storeManager.getData('showModal')\n    ) {\n      return;\n    }\n\n    if (keyDownEvent('showModal')) {\n      if (this._isFirstTime) {\n        this.remove();\n      } else {\n        this.revertChanges();\n        this.doneEditing();\n      }\n    }\n  }\n\n  /**\n   * Reverts all changes made during editing\n   */\n  private revertChanges(): void {\n    for (const editor of this._conditionValues.editors) {\n      editor.restore();\n      this._elm.dataset.relation = this._keepLastRelation;\n    }\n  }\n\n  /**\n   * Gets the condition type (gene, id, dataset, location, etc.)\n   */\n  get conditionType(): string {\n    return this._conditionType;\n  }\n\n  /**\n   * Gets the DOM element containing condition values\n   */\n  get valuesElement(): HTMLDivElement {\n    return this._valuesEl;\n  }\n\n  /**\n   * Gets the DOM element containing the condition editor\n   */\n  get editorElement(): HTMLDivElement {\n    return this._editorEl;\n  }\n\n  /**\n   * Gets whether this is the first time editing\n   */\n  get isFirstTime(): boolean {\n    return this._isFirstTime;\n  }\n\n  /**\n   * Gets the last saved relation state\n   */\n  get keepLastRelation(): string {\n    return this._keepLastRelation;\n  }\n\n  /**\n   * Creates and returns the search query object based on the current condition values\n   * @see {@link https://grch38.togovar.org/api} API Schemas documentation\n   */\n  get query(): ConditionQuery {\n    const valueElements = this.getValueElements();\n\n    switch (this._conditionType) {\n      case CONDITION_TYPE.dataset:\n      case CONDITION_TYPE.genotype:\n        return this.buildDatasetQuery(valueElements);\n\n      case CONDITION_TYPE.pathogenicity_prediction:\n        return this.buildPathogenicityQuery(valueElements);\n\n      case CONDITION_TYPE.location:\n        return this.buildLocationQuery(valueElements);\n\n      case CONDITION_TYPE.gene_symbol:\n        return this.buildGeneQuery(valueElements);\n\n      case CONDITION_TYPE.variant_id:\n        return this.buildVariantIdQuery(valueElements);\n\n      case CONDITION_TYPE.significance:\n        return this.buildSignificanceQuery();\n\n      default:\n        return this.buildDefaultQuery(valueElements);\n    }\n  }\n\n  /**\n   * Gets all condition item value view elements\n   */\n  private getValueElements(): ConditionItemValueViewElement[] {\n    return Array.from(\n      this._valuesEl.querySelectorAll(':scope > condition-item-value-view')\n    ) as ConditionItemValueViewElement[];\n  }\n\n  /**\n   * Builds query for dataset and genotype conditions\n   */\n  private buildDatasetQuery(\n    valueElements: ConditionItemValueViewElement[]\n  ): ConditionQuery {\n    const queries = valueElements.map((view) => {\n      const shadowRoot = (view as any).shadowRoot;\n      const frequencyCountElement = shadowRoot.querySelector(\n        'frequency-count-value-view'\n      ) as FrequencyCountValueViewElement;\n      return frequencyCountElement.queryValue;\n    });\n\n    return queries.length <= 1 ? queries[0] : { or: queries };\n  }\n\n  /**\n   * Builds query for pathogenicity prediction conditions\n   */\n  private buildPathogenicityQuery(\n    valueElements: ConditionItemValueViewElement[]\n  ): ConditionQuery {\n    const shadowRoot = (valueElements[0] as any).shadowRoot;\n    const predictionElement = shadowRoot.querySelector(\n      'prediction-value-view'\n    ) as PredictionValueViewElement;\n\n    return predictionElement.queryValue;\n  }\n\n  /**\n   * Builds query for location-based conditions\n   */\n  private buildLocationQuery(\n    valueElements: ConditionItemValueViewElement[]\n  ): LocationQuery {\n    const value = valueElements[0].value;\n    const [chromosome, positionStr] = value.split(':');\n    const positionArray = positionStr.split('-');\n\n    let position: number | { gte: number; lte: number };\n    if (positionArray.length === 1) {\n      position = +positionArray[0];\n    } else {\n      position = {\n        gte: +positionArray[0],\n        lte: +positionArray[1],\n      };\n    }\n\n    return { location: { chromosome, position } };\n  }\n\n  /**\n   * Builds query for gene symbol conditions\n   */\n  private buildGeneQuery(\n    valueElements: ConditionItemValueViewElement[]\n  ): GeneQuery {\n    const queryId = valueElements[0]?.value;\n    return {\n      gene: {\n        relation: this._elm.dataset.relation!,\n        terms: [Number(queryId)],\n      },\n    };\n  }\n\n  /**\n   * Builds query for variant ID conditions\n   */\n  private buildVariantIdQuery(\n    valueElements: ConditionItemValueViewElement[]\n  ): IdQuery {\n    const ids = valueElements.map((element) => element.value);\n    return { id: ids };\n  }\n\n  /**\n   * Builds query for clinical significance conditions\n   */\n  private buildSignificanceQuery(): ConditionQuery {\n    const valueMgendElements = this.getMgendElements();\n    const valueClinvarElements = this.getClinvarElements();\n\n    const relationType = this._elm.dataset.relation === 'ne' ? 'and' : 'or';\n    const mgendCondition = this.buildMgendCondition(valueMgendElements);\n    const clinvarCondition = this.buildClinvarCondition(valueClinvarElements);\n\n    const conditions = [mgendCondition, clinvarCondition].filter(Boolean);\n\n    return conditions.length === 1\n      ? conditions[0]!\n      : { [relationType]: conditions };\n  }\n\n  /**\n   * Gets MGEND condition elements\n   */\n  private getMgendElements(): ConditionItemValueViewElement[] {\n    return Array.from(\n      this._valuesEl.querySelectorAll(\n        ':scope > .mgend-wrapper > .mgend-condition-wrapper > condition-item-value-view'\n      )\n    ) as ConditionItemValueViewElement[];\n  }\n\n  /**\n   * Gets ClinVar condition elements\n   */\n  private getClinvarElements(): ConditionItemValueViewElement[] {\n    return Array.from(\n      this._valuesEl.querySelectorAll(\n        ':scope > .clinvar-wrapper > .clinvar-condition-wrapper > condition-item-value-view'\n      )\n    ) as ConditionItemValueViewElement[];\n  }\n\n  /**\n   * Builds MGEND condition object\n   */\n  private buildMgendCondition(\n    elements: ConditionItemValueViewElement[]\n  ): SignificanceQuery | null {\n    return elements.length > 0\n      ? {\n          [this._conditionType]: {\n            relation: this._elm.dataset.relation!,\n            source: ['mgend'],\n            terms: elements.map((value) => value.value),\n          },\n        }\n      : null;\n  }\n\n  /**\n   * Builds ClinVar condition object\n   */\n  private buildClinvarCondition(\n    elements: ConditionItemValueViewElement[]\n  ): SignificanceQuery | null {\n    return elements.length > 0\n      ? {\n          [this._conditionType]: {\n            relation: this._elm.dataset.relation!,\n            source: ['clinvar'],\n            terms: elements.map((value) => value.value),\n          },\n        }\n      : null;\n  }\n\n  /**\n   * Builds default query for other condition types\n   */\n  private buildDefaultQuery(\n    valueElements: ConditionItemValueViewElement[]\n  ): DefaultQuery {\n    return {\n      [this._conditionType]: {\n        relation: this._elm.dataset.relation!,\n        terms: valueElements.map((value) => value.value),\n      },\n    };\n  }\n}\n\nexport default ConditionItemView;\n","import ConditionValueEditor from './ConditionValueEditor.js';\nimport { ADVANCED_CONDITIONS } from '../global.js';\nimport ConditionValues from './ConditionValues.js';\nimport ConditionItemView from './ConditionItemView';\n\ntype DatasetSource = 'clinvar' | 'mgend';\n\ntype DatasetValue = {\n  value: string;\n  label: string;\n};\n\ntype Dataset = {\n  label: string;\n  type: string;\n  values: Record<'clinvar' | 'mgend', DatasetValue[]>;\n};\n\ninterface DatasetValues {\n  mgend: DatasetValue[];\n  clinvar: DatasetValue[];\n}\n\ninterface ConditionItemValueViewElement extends HTMLElement {\n  label: string;\n  conditionType: string;\n  value: string;\n  deleteButton?: boolean;\n}\n\n/** for clinical significance */\nexport default class ConditionValueEditorClinicalSignificance extends ConditionValueEditor {\n  #checkboxes: Array<HTMLInputElement>;\n  #values: DatasetValues;\n  #lastValues: DatasetValues;\n\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView */\n  constructor(valuesView: ConditionValues, conditionView: ConditionItemView) {\n    super(valuesView, conditionView);\n\n    // HTML\n    const dataset: Dataset = ADVANCED_CONDITIONS[this._conditionType];\n\n    this._createElement(\n      'clinical-significance-view',\n      `\n    <header>Select ${this._conditionType}</header>\n    <div class=\"buttons\">\n      <button class=\"button-view -weak\">Select all</button>\n      <button class=\"button-view -weak\">Clear all</button>\n    </div>\n\n    <div class=\"dataset-title mgend\">MGeND</div>\n    <ul class=\"checkboxes body\" data-type=\"clinical-significance\">\n      ${this.#generateCheckboxList(dataset.values.mgend, 'mgend')}\n    </ul>\n    \n    <hr/>\n\n    <div class=\"dataset-title clinvar\">Clinvar</div>\n    <ul class=\"checkboxes body\" data-type=\"clinical-significance\">\n      ${this.#generateCheckboxList(dataset.values.clinvar, 'clinvar')}\n    </ul>\n    `\n    );\n\n    this.#values = { mgend: [], clinvar: [] };\n    this.#lastValues = { mgend: [], clinvar: [] };\n\n    // delete 'not in clinver'\n    if (this._conditionType === 'significance') {\n      this._el.querySelector('li[data-value=\"NC\"]').remove();\n    }\n\n    // references\n    this.#checkboxes = Array.from(\n      this._el.querySelectorAll(':scope > ul > li > label > input')\n    );\n\n    // attach events\n    this.#attachCheckboxEvents();\n    this.#attachButtonEvents();\n  }\n\n  #generateCheckboxList(\n    values: Array<{ value: string; label: string }>,\n    source: string\n  ): string {\n    return values\n      .map(\n        (value) => `\n        <li data-value=\"${value.value}\" data-source=\"${source}\">\n          <label>\n          <input\n            type=\"checkbox\"\n            value=\"${value.value}\"\n            data-source=\"${source}\"\n            data-label=\"${value.label}\">\n              <span class=\"clinical-significance\" data-value=\"${value.value}\"></span>\n              ${value.label}\n          </label>\n        </li>`\n      )\n      .join('');\n  }\n\n  #attachCheckboxEvents() {\n    this.#checkboxes.forEach((checkbox) => {\n      checkbox.addEventListener('change', () => {\n        this.#update();\n      });\n    });\n  }\n\n  /** \"Select all\" と \"Clear all\" ボタンにクリックイベントを追加し、\n   * ボタンがクリックされた際にチェックボックスの状態を一括変更する。 */\n  #attachButtonEvents() {\n    this._el\n      .querySelectorAll(':scope > .buttons > button')\n      .forEach((button, index) => {\n        button.addEventListener('click', () => {\n          this.#checkboxes.forEach((checkbox) => (checkbox.checked = !index));\n          this.#update();\n        });\n      });\n  }\n\n  // public methods\n  keepLastValues() {\n    const valueMgendElements = Array.from(\n      this._valuesElement.querySelectorAll(\n        ':scope > .mgend-wrapper > .mgend-condition-wrapper > condition-item-value-view'\n      )\n    ) as ConditionItemValueViewElement[];\n    const valueClinvarElements = Array.from(\n      this._valuesElement.querySelectorAll(\n        ':scope > .clinvar-wrapper > .clinvar-condition-wrapper > condition-item-value-view'\n      )\n    ) as ConditionItemValueViewElement[];\n\n    this.#lastValues = {\n      mgend: valueMgendElements.map((value) => ({\n        value: value.value,\n        label: value.label,\n      })),\n      clinvar: valueClinvarElements.map((value) => ({\n        value: value.value,\n        label: value.label,\n      })),\n    };\n  }\n\n  restore() {\n    this.#checkboxes.forEach((checkbox) => {\n      // チェックボックスのデータソースに応じて、対応する配列で値を探す\n      const valuesArray =\n        checkbox.dataset.source === 'mgend'\n          ? this.#lastValues.mgend\n          : this.#lastValues.clinvar;\n\n      const datasetValue = valuesArray.find((value) => {\n        return value.value === checkbox.value;\n      });\n\n      // チェックボックスの状態を過去の値に基づいて復元\n      checkbox.checked = !!datasetValue; // 値が見つかった場合はチェックを入れる\n    });\n    this.#update();\n  }\n\n  // private methods\n  /** チェックボックスの状態に基づいて、値の更新、重複のチェック、ラベルや要素の削除を行う\n   * また、更新された値に基づいて Clinical Significance のビューを更新 */\n  #update() {\n    // update values\n    this.#checkboxes.forEach((checkbox) => {\n      const newValue = {\n        value: checkbox.value,\n        label: checkbox.dataset.label,\n      };\n\n      if (checkbox.checked) {\n        // Add new value if not already exists\n        this.#addUniqueValue(\n          checkbox.dataset.source as DatasetSource,\n          newValue\n        );\n      } else {\n        // Remove value when unchecked\n        this.#removeValue(\n          checkbox.dataset.source as DatasetSource,\n          checkbox.value,\n          checkbox.dataset.label\n        );\n      }\n    });\n\n    // Update Clinical Significance View\n    this.#updateClinicalSignificanceValueView();\n\n    // validation\n    this._valuesView.update(this.#validate());\n  }\n\n  /** MGeNDまたはClinVarの配列に値を一意に追加 */\n  #addUniqueValue(\n    source: DatasetSource,\n    newValue: { value: string; label: string }\n  ) {\n    const values =\n      source === 'mgend' ? this.#values.mgend : this.#values.clinvar;\n    const exists = values.some(\n      (item) => item.value === newValue.value && item.label === newValue.label\n    );\n\n    if (!exists) {\n      values.push(newValue); // 重複していなければ追加\n    }\n  }\n\n  /** 指定されたソースの配列から該当の値を削除\n   * また、すべての値が削除された場合は、関連するラベルと要素も削除 */\n  #removeValue(source: DatasetSource, value: string, label: string) {\n    const values =\n      source === 'mgend' ? this.#values.mgend : this.#values.clinvar;\n    const index = values.findIndex(\n      (item) => item.value === value && item.label === label\n    );\n\n    if (index !== -1) {\n      values.splice(index, 1); // 一致する要素を削除\n    }\n\n    if (values.length === 0) {\n      this.#removeConditionWrapper(source); // 値が全てなくなった場合の処理\n    }\n  }\n\n  /** 指定されたソースに関連する要素（spanやcondition-wrapper）を削除 */\n  #removeConditionWrapper(source: DatasetSource) {\n    const span = this._valuesElement.querySelector(`span.${source}`);\n    const wrapper = this._valuesElement.querySelector(\n      `.${source}-condition-wrapper`\n    );\n\n    if (span) span.remove();\n    if (wrapper) wrapper.remove();\n  }\n\n  /** Clinical Significance のビューを更新し、ラベルと対応する値を表示します。\n   * 新しいラベルや条件が追加される場合、既存のものを削除してから再描画します。 */\n  #updateClinicalSignificanceValueView() {\n    if (this.#values.mgend.length > 0) {\n      this.#ensureWrapperExists('mgend');\n    }\n    if (this.#values.clinvar.length > 0) {\n      this.#ensureWrapperExists('clinvar');\n    }\n\n    this.#updateConditionViews('mgend', this.#values.mgend);\n    this.#updateConditionViews('clinvar', this.#values.clinvar);\n  }\n\n  /** 指定されたデータソースに対応するラベルや条件を描画\n   * 既存のビューがある場合は削除してから、新しい条件ビューを追加 */\n  #updateConditionViews(\n    source: DatasetSource,\n    values: Array<{ value: string; label: string }>\n  ) {\n    const wrapper = this._valuesElement.querySelector(\n      `.${source}-condition-wrapper`\n    );\n\n    // 既存のビューを削除\n    if (wrapper) {\n      wrapper\n        .querySelectorAll('condition-item-value-view')\n        .forEach((view) => view.remove());\n    }\n\n    // 新しい値を描画\n    values.forEach((value) => {\n      const valueView = document.createElement(\n        'condition-item-value-view'\n      ) as ConditionItemValueViewElement;\n      valueView.conditionType = this._conditionType;\n      valueView.label = value.label;\n      valueView.value = value.value;\n\n      wrapper.append(valueView);\n    });\n  }\n\n  /** 指定されたデータソースに対応するラベルとコンディションのラッパー要素が存在しない場合、作成して追加 */\n  #ensureWrapperExists(source: DatasetSource) {\n    const wrapperClass = `${source}-wrapper`;\n    const conditionWrapperClass = `${source}-condition-wrapper`;\n\n    if (!this._valuesElement.querySelector(`.${wrapperClass}`)) {\n      const wrapper = document.createElement('div');\n      wrapper.classList.add(wrapperClass);\n      this._valuesElement.append(wrapper);\n    }\n\n    if (!this._valuesElement.querySelector(`.${conditionWrapperClass}`)) {\n      const span = document.createElement('span');\n      span.classList.add(source);\n      span.textContent = source === 'mgend' ? 'MGeND' : 'ClinVar';\n\n      const conditionWrapper = document.createElement('div');\n      conditionWrapper.classList.add(conditionWrapperClass);\n\n      this._valuesElement\n        .querySelector(`.${wrapperClass}`)\n        .append(span, conditionWrapper);\n    }\n  }\n\n  #validate() {\n    return this.isValid;\n  }\n\n  //accessor\n  /** You can press the ok button if there are two valid values */\n  get isValid() {\n    return this.#checkboxes.some((checkbox) => checkbox.checked);\n  }\n}\n","import { HierarchyNode, hierarchy } from 'd3-hierarchy';\nimport { CONDITION_TYPE } from '../definition.js';\nimport { ADVANCED_CONDITIONS } from '../global.js';\nimport ConditionItemView from './ConditionItemView';\nimport ConditionValueEditor from './ConditionValueEditor.js';\nimport ConditionValues from './ConditionValues.js';\nimport { storeManager } from '../store/StoreManager';\n\ntype DataNode = {\n  id: string;\n  label: string;\n  value: string;\n  children?: Array<DataNode>;\n};\n\ntype DataNodeWithChecked = DataNode & {\n  checked: boolean;\n  indeterminate?: boolean;\n};\n\nconst ROOT_NODE_ID = '-1';\n\n/**\n * A condition value editor for hierarchical dataset selection using columns layout.\n * Provides functionality for selecting datasets with hierarchical drill-down navigation.\n */\nexport default class ConditionValueEditorColumnsDataset extends ConditionValueEditor {\n  #lastValueViews: Array<HTMLDivElement>;\n  #data: HierarchyNode<DataNodeWithChecked>;\n  #columns: HTMLElement;\n  #nodesToShowInValueView: Array<HierarchyNode<DataNodeWithChecked>>;\n  #uniqueIdCounter: number;\n\n  /**\n   * Creates a new instance of ConditionValueEditorColumnsDataset.\n   * @param valuesView - The condition values view component\n   * @param conditionView - The condition item view component\n   */\n  constructor(valuesView: ConditionValues, conditionView: ConditionItemView) {\n    super(valuesView, conditionView);\n\n    this.#data = this.#prepareHierarchicalData();\n    this.#nodesToShowInValueView = [];\n    this.#uniqueIdCounter = 0;\n\n    this.#initializeUI();\n    this.#renderInitialColumn();\n  }\n\n  /**\n   * Saves the current value views for potential restoration.\n   * Called when the user clicks the edit (pencil) icon.\n   */\n  keepLastValues(): void {\n    this.#lastValueViews = this._valueViews;\n  }\n\n  /**\n   * Restores the previously saved values and updates the UI.\n   * Called when the user presses the Cancel button.\n   */\n  restore(): void {\n    this.#resetAllCheckStates();\n    this.#restoreCheckedStates();\n    this.#updateUI();\n    this._updateValueViews(this.#lastValueViews);\n  }\n\n  /**\n   * Checks if the current selection is valid.\n   * @returns True if at least one item is selected\n   */\n  get isValid(): boolean {\n    return this.#isCurrentStateValid();\n  }\n\n  /**\n   * Initializes the UI elements and structure.\n   * @private\n   */\n  #initializeUI(): void {\n    this._createElement(\n      'columns-editor-view',\n      `\n    <header>Select ${this._conditionType}</header>\n    <div class=\"body\">\n      <div class=\"columns\"></div>\n    </div>`\n    );\n    this.#columns = this._body.querySelector(':scope > .columns');\n  }\n\n  /**\n   * Renders the initial column with root level items.\n   * @private\n   */\n  #renderInitialColumn(): void {\n    this.#drawColumn();\n  }\n\n  /**\n   * Adds unique IDs to data nodes recursively.\n   * @param dataNodes - Array of data nodes to process\n   * @returns Array of data nodes with unique IDs and checked properties\n   * @private\n   */\n  #addUniqueIdsToNodes(dataNodes: DataNode[]): DataNodeWithChecked[] {\n    return dataNodes.map((node) => {\n      if (!Number.isInteger(this.#uniqueIdCounter)) {\n        this.#uniqueIdCounter = 0;\n      }\n\n      const processedNode: DataNodeWithChecked = {\n        ...node,\n        id: `${this.#uniqueIdCounter++}`,\n        checked: false,\n        indeterminate: false,\n      };\n\n      if (processedNode.children && processedNode.children.length > 0) {\n        processedNode.children = this.#addUniqueIdsToNodes(\n          processedNode.children\n        );\n      }\n\n      return processedNode;\n    });\n  }\n\n  /**\n   * Prepares the hierarchical data structure based on condition type.\n   * @returns Hierarchy node with processed data\n   * @private\n   */\n  #prepareHierarchicalData(): HierarchyNode<DataNodeWithChecked> {\n    switch (this._conditionType) {\n      case CONDITION_TYPE.dataset:\n      case CONDITION_TYPE.genotype: {\n        const rawData = ADVANCED_CONDITIONS[this._conditionType]\n          .values as DataNodeWithChecked[];\n        const processedData = this.#addUniqueIdsToNodes(rawData);\n\n        return hierarchy<DataNodeWithChecked>({\n          id: ROOT_NODE_ID,\n          label: 'root',\n          value: '',\n          children: processedData,\n          checked: false,\n          indeterminate: false,\n        });\n      }\n      default:\n        throw new Error(\n          'ConditionValueEditorColumnsDataset - Invalid condition type'\n        );\n    }\n  }\n\n  /**\n   * Renders a column with items from the specified parent node.\n   * @param parentId - ID of the parent node to get children from\n   * @private\n   */\n  async #drawColumn(parentId?: string): Promise<void> {\n    const isLogin = storeManager.getData('isLogin');\n    const items = await this.#getChildItems(parentId);\n\n    const column = this.#createColumnElement();\n    this.#columns.append(column);\n\n    column.innerHTML = this.#generateColumnHTML(items, isLogin);\n\n    this.#attachColumnEventListeners(column, isLogin);\n    this.#updateUI();\n    this.#scrollToRevealNewColumn();\n  }\n\n  /**\n   * Creates a new column DOM element with appropriate attributes.\n   * @returns The created column element\n   * @private\n   */\n  #createColumnElement(): HTMLDivElement {\n    const column = document.createElement('div');\n    column.classList.add('column');\n    column.dataset.depth = this.#columns\n      .querySelectorAll(':scope > .column')\n      .length.toString();\n    return column;\n  }\n\n  /**\n   * Generates HTML content for a column based on the provided items.\n   * @param items - Array of hierarchy nodes to render\n   * @param isLogin - Whether the user is logged in\n   * @returns HTML string for the column content\n   * @private\n   */\n  #generateColumnHTML(\n    items: HierarchyNode<DataNodeWithChecked>[],\n    isLogin: boolean\n  ): string {\n    return `\n      <ul>\n        ${items\n          .map((item) => this.#generateListItemHTML(item, isLogin))\n          .join('')}\n      </ul>`;\n  }\n\n  /**\n   * Generates HTML for a single list item.\n   * @param item - The hierarchy node to render\n   * @param isLogin - Whether the user is logged in\n   * @returns HTML string for the list item\n   * @private\n   */\n  #generateListItemHTML(\n    item: HierarchyNode<DataNodeWithChecked>,\n    isLogin: boolean\n  ): string {\n    const inputId = `checkbox-${item.data.id}`;\n    let listItem = `<li data-id=\"${item.data.id}\" data-parent=\"${item.parent.data.id}\"`;\n\n    if (item.data.value) {\n      listItem += ` data-value=\"${item.data.value}\"`;\n    }\n\n    listItem += `><label for=\"${inputId}\">`;\n\n    if (this.#shouldShowLockIcon(item, isLogin)) {\n      listItem += `<span class=\"lock\"></span>`;\n    } else {\n      listItem += `<input type=\"checkbox\" id=\"${inputId}\" value=\"${item.data.id}\">`;\n    }\n\n    if (this.#shouldShowDatasetIcon(item)) {\n      listItem += `<span class=\"dataset-icon\" data-dataset=\"${item.data.value}\"></span>`;\n    }\n\n    listItem += `<span>${item.data.label}</span></label>`;\n\n    if (item.children !== undefined) {\n      listItem += `<div class=\"arrow\" data-id=\"${item.data.id}\" data-value=\"${item.data.value}\"></div>`;\n    }\n\n    listItem += `</li>`;\n    return listItem;\n  }\n\n  /**\n   * Determines if a lock icon should be shown for the item.\n   * @param item - The hierarchy node to check\n   * @param isLogin - Whether the user is logged in\n   * @returns True if lock icon should be shown\n   * @private\n   */\n  #shouldShowLockIcon(\n    item: HierarchyNode<DataNodeWithChecked>,\n    isLogin: boolean\n  ): boolean {\n    return isLogin === false && item.data.value?.includes('jga_wgs.');\n  }\n\n  /**\n   * Determines if a dataset icon should be shown for the item.\n   * @param item - The hierarchy node to check\n   * @returns True if dataset icon should be shown\n   * @private\n   */\n  #shouldShowDatasetIcon(item: HierarchyNode<DataNodeWithChecked>): boolean {\n    return (\n      (this._conditionType === CONDITION_TYPE.dataset ||\n        this._conditionType === CONDITION_TYPE.genotype) &&\n      item.depth === 1\n    );\n  }\n\n  /**\n   * Attaches event listeners to the column element.\n   * @param column - The column element to attach listeners to\n   * @param isLogin - Whether the user is logged in\n   * @private\n   */\n  #attachColumnEventListeners(column: HTMLElement, isLogin: boolean): void {\n    this.#attachCheckboxEventListeners(column);\n    this.#attachArrowClickEventListeners(column, isLogin);\n  }\n\n  /**\n   * Attaches checkbox change event listeners to the column.\n   * @param column - The column element\n   * @private\n   */\n  #attachCheckboxEventListeners(column: HTMLElement): void {\n    column.addEventListener('change', (e) => {\n      const target = e.target as HTMLInputElement;\n      const checked = target.checked;\n      const nodeId = target.closest('li').dataset.id;\n      const changedNode = this.#data.find((datum) => datum.data.id === nodeId);\n\n      if (changedNode.children)\n        this.#updateChildrenCheckState(changedNode, checked);\n      if (changedNode.parent)\n        this.#updateParentCheckState(changedNode, checked);\n\n      this.#updateUI();\n    });\n  }\n\n  /**\n   * Attaches arrow click event listeners for drill-down navigation.\n   * @param column - The column element\n   * @param isLogin - Whether the user is logged in\n   * @private\n   */\n  #attachArrowClickEventListeners(column: HTMLElement, isLogin: boolean): void {\n    for (const arrow of column.querySelectorAll(':scope > ul > li > .arrow')) {\n      arrow.addEventListener('click', (e) => {\n        const target = e.target as HTMLElement;\n        const listItem = target.closest('li');\n\n        this.#handleArrowClick(listItem, target, isLogin);\n      });\n    }\n  }\n\n  /**\n   * Handles arrow click events for navigation.\n   * @param listItem - The clicked list item\n   * @param target - The arrow element that was clicked\n   * @param isLogin - Whether the user is logged in\n   * @private\n   */\n  #handleArrowClick(\n    listItem: Element,\n    target: HTMLElement,\n    isLogin: boolean\n  ): void {\n    this.#clearSelectionAndSubColumns(listItem);\n    listItem.classList.add('-selected');\n    this.#drawColumn(target.dataset.id);\n\n    if (target.dataset.value === 'jga_wgs' && !isLogin) {\n      this.#addLoginPromptColumn();\n    }\n  }\n\n  /**\n   * Clears current selection and removes sub-columns.\n   * @param listItem - The current list item\n   * @private\n   */\n  #clearSelectionAndSubColumns(listItem: Element): void {\n    const currentColumn = listItem.closest('.column') as HTMLElement;\n    const columnsContainer = listItem.closest('.columns');\n\n    // Clear current selection\n    listItem.parentNode\n      .querySelector(':scope > .-selected')\n      ?.classList.remove('-selected');\n\n    // Remove deeper columns\n    const currentDepth = parseInt(currentColumn.dataset.depth);\n    for (const column of columnsContainer.querySelectorAll(\n      ':scope > .column'\n    )) {\n      const columnElement = column as HTMLElement;\n      if (parseInt(columnElement.dataset.depth) > currentDepth) {\n        columnElement.parentNode.removeChild(columnElement);\n      }\n    }\n  }\n\n  /**\n   * Scrolls to reveal the newly added column if necessary.\n   * @private\n   */\n  #scrollToRevealNewColumn(): void {\n    const left = this._body.scrollWidth - this._body.clientWidth;\n    if (left > 0) {\n      this._body.scrollTo({\n        top: 0,\n        left: left,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  /**\n   * Gets child items for the specified parent node.\n   * @param parentId - ID of the parent node\n   * @returns Promise resolving to array of child nodes\n   * @private\n   */\n  #getChildItems(\n    parentId?: string\n  ): Promise<HierarchyNode<DataNodeWithChecked>[]> {\n    return new Promise((resolve) => {\n      if (!parentId) {\n        resolve(this.#data.children);\n        return;\n      }\n\n      const parentNode = this.#data.find((datum) => datum.data.id === parentId);\n      resolve(parentNode?.children || []);\n    });\n  }\n\n  /**\n   * Adds a column prompting the user to login for JGAD datasets.\n   * @private\n   */\n  async #addLoginPromptColumn(): Promise<void> {\n    await storeManager.fetchLoginStatus();\n    const column = document.createElement('div');\n    column.classList.add('column');\n    column.dataset.depth = '2';\n    column.innerHTML = `\n      <div class=\"messages-view\">\n        <div class=\"note message -warning\">\n          <a class=\"link\" href=\"/auth/login\">Login</a> to select JGAD datasets\n        </div>\n      </div>`;\n    this.#columns.append(column);\n  }\n\n  /**\n   * Resets all check states in the data hierarchy.\n   * @private\n   */\n  #resetAllCheckStates(): void {\n    this.#data.each((datum) => {\n      datum.data.checked = false;\n      datum.data.indeterminate = false;\n    });\n  }\n\n  /**\n   * Restores checked states from the last saved values.\n   * @private\n   */\n  #restoreCheckedStates(): void {\n    for (const lastValue of this.#lastValueViews) {\n      const node = this.#data.find(\n        (d) => d.data.value === lastValue.dataset['value']\n      );\n      if (!node) continue;\n\n      node.data.checked = true;\n      this.#updateChildrenCheckState(node, true);\n      this.#updateParentCheckState(node, true);\n    }\n  }\n\n  /**\n   * Updates the check state of all children nodes.\n   * @param node - The parent node\n   * @param checked - The check state to apply\n   * @private\n   */\n  #updateChildrenCheckState(\n    node: HierarchyNode<DataNodeWithChecked>,\n    checked: boolean\n  ): void {\n    if (!node.children || node.children.length === 0) return;\n\n    node.descendants().forEach((descendant) => {\n      descendant.data.checked = checked;\n      descendant.data.indeterminate = false;\n    });\n  }\n\n  /**\n   * Updates the check state of parent nodes based on children states.\n   * @param dataNode - The node whose parents should be updated\n   * @param checked - Optional explicit check state for the current node\n   * @private\n   */\n  #updateParentCheckState(\n    dataNode: HierarchyNode<DataNodeWithChecked> | undefined,\n    checked?: boolean\n  ): void {\n    if (!dataNode) return;\n\n    if (typeof checked === 'boolean') {\n      dataNode.data.checked = checked;\n      dataNode.data.indeterminate = false;\n    } else {\n      this.#calculateParentCheckState(dataNode);\n    }\n\n    this.#updateParentCheckState(dataNode.parent);\n  }\n\n  /**\n   * Calculates the check state for a parent node based on its children.\n   * @param dataNode - The parent node to calculate state for\n   * @private\n   */\n  #calculateParentCheckState(\n    dataNode: HierarchyNode<DataNodeWithChecked>\n  ): void {\n    if (!dataNode.children) return;\n\n    const checkedChildren = dataNode.children.filter(\n      (child) => child.data.checked\n    );\n    const indeterminateChildren = dataNode.children.filter(\n      (child) => child.data.indeterminate\n    );\n\n    const allChecked = checkedChildren.length === dataNode.children.length;\n    const someChecked = checkedChildren.length > 0;\n    const hasIndeterminate = indeterminateChildren.length > 0;\n\n    dataNode.data.checked = allChecked && !hasIndeterminate;\n    dataNode.data.indeterminate =\n      (someChecked && !allChecked) || hasIndeterminate;\n  }\n\n  /**\n   * Updates the entire UI including DOM elements and value views.\n   * @private\n   */\n  #updateUI(): void {\n    this.#updateCheckboxStatesInDOM();\n    this.#updateValueViews();\n    this.#validateAndUpdateValuesView();\n  }\n\n  /**\n   * Updates checkbox states in the DOM to reflect data state.\n   * @private\n   */\n  #updateCheckboxStatesInDOM(): void {\n    this.#data.eachAfter((datum) => {\n      const checkbox: HTMLInputElement = this.#columns.querySelector(\n        `li[data-id=\"${datum.data.id}\"] > label > input`\n      );\n      if (checkbox) {\n        checkbox.checked = !datum.data.indeterminate && datum.data.checked;\n        checkbox.indeterminate =\n          !datum.data.checked && datum.data.indeterminate;\n      }\n    });\n  }\n\n  /**\n   * Updates the value views with current selections.\n   * @private\n   */\n  #updateValueViews(): void {\n    this.#processNodesToShowInValueView();\n    this._clearValueViews();\n\n    for (const nodeToShow of this.#nodesToShowInValueView) {\n      this._addValueView(\n        nodeToShow.data.value,\n        this.#getLabelWithPath(nodeToShow)\n      );\n    }\n  }\n\n  /**\n   * Validates the current state and updates the values view accordingly.\n   * @private\n   */\n  #validateAndUpdateValuesView(): void {\n    this._valuesView.update(this.#isCurrentStateValid());\n  }\n\n  /**\n   * Processes nodes to determine which should be shown in value view.\n   * @private\n   */\n  #processNodesToShowInValueView(): void {\n    this.#nodesToShowInValueView = this.#getOptimalNodesToShow(this.#data);\n  }\n\n  /**\n   * Gets the optimal nodes to show in value view (parent nodes when all children are selected).\n   * @param node - The node to process\n   * @returns Array of nodes that should be displayed\n   * @private\n   */\n  #getOptimalNodesToShow(\n    node: HierarchyNode<DataNodeWithChecked>\n  ): HierarchyNode<DataNodeWithChecked>[] {\n    if (!node.children) {\n      return node.data.checked ? [node] : [];\n    }\n\n    const allChildrenChecked = node.children.every(\n      (child) => child.data.checked\n    );\n\n    if (allChildrenChecked && node.data.value) {\n      return [node];\n    } else {\n      return node.children\n        .flatMap((child) => this.#getOptimalNodesToShow(child))\n        .filter(Boolean);\n    }\n  }\n\n  /**\n   * Gets the full path label for a node to display in value view.\n   * @param node - The node to get label for\n   * @returns Formatted label with full path\n   * @private\n   */\n  #getLabelWithPath(node: HierarchyNode<DataNodeWithChecked>): string {\n    const [, ...pathNodes] = node.path(this.#data).reverse();\n    return pathNodes.map((pathNode) => pathNode.data.label).join(' > ');\n  }\n\n  /**\n   * Validates if the current state is valid.\n   * @returns True if the current state is valid\n   * @private\n   */\n  #isCurrentStateValid(): boolean {\n    return this._valueViews.length > 0;\n  }\n}\n","import ConditionValueEditor from './ConditionValueEditor.js';\nimport '../components/RangeSliderView.js';\n\n/**\n * Interface for frequency condition values\n */\ninterface ConditionFrequency {\n  from: number;\n  to: number;\n  invert: string;\n}\n\n/**\n * Interface for count condition values\n */\ninterface ConditionCount {\n  from: number | null;\n  to: number | null;\n}\n\n/**\n * Combined condition interface containing both frequency and count conditions\n */\ninterface Condition {\n  frequency: ConditionFrequency;\n  count: ConditionCount;\n  alt_alt: ConditionCount;\n  alt_ref: ConditionCount;\n  hemi_alt: ConditionCount;\n}\n\n/**\n * Interface for range selector custom element\n */\ninterface RangeSliderElement extends HTMLElement {\n  searchType: string;\n  sliderStep: number;\n  inputStep: number;\n}\n\n/**\n * Interface for frequency count view custom element\n */\ninterface FrequencyCountViewElement extends Element {\n  setValues(\n    conditionType: 'dataset' | 'genotype',\n    mode: string,\n    from: string | number,\n    to: string | number,\n    invert: string,\n    filtered: boolean\n  ): void;\n  mode: string;\n  from: string | number;\n  update(): void;\n}\n\nlet id: number = 0;\n\n/**\n * Default condition values for both frequency and count modes\n */\nconst DEFAULT_CONDITION: Condition = {\n  frequency: {\n    from: 0,\n    to: 1,\n    invert: '0',\n  },\n  count: {\n    from: null,\n    to: null,\n  },\n  alt_alt: {\n    from: null,\n    to: null,\n  },\n  alt_ref: {\n    from: null,\n    to: null,\n  },\n  hemi_alt: {\n    from: null,\n    to: null,\n  },\n};\n\n/**\n * Available modes for the condition editor\n */\nconst MODE = {\n  frequency: 'frequency',\n  count: 'count',\n  alt_alt: 'alt_alt',\n  alt_ref: 'alt_ref',\n  hemi_alt: 'hemi_alt',\n} as const;\n\ntype ModeType = (typeof MODE)[keyof typeof MODE];\n\n/**\n * Condition value editor for frequency and count filtering\n * Provides UI controls for setting frequency ranges and count ranges for variant filtering\n */\nexport default class ConditionValueEditorFrequencyCount extends ConditionValueEditor {\n  #conditionType: 'dataset' | 'genotype';\n  #condition: Condition;\n  #mode: ModeType;\n  #rangeSelectorView: RangeSliderElement | null = null;\n  #filtered: HTMLInputElement | null = null;\n  #lastValue: ConditionFrequency | ConditionCount | null = null;\n\n  /**\n   * Creates a new frequency/count condition editor\n   * @param valuesView - The parent values view component\n   * @param conditionView - The parent condition view component\n   */\n  constructor(valuesView: any, conditionView: any) {\n    super(valuesView, conditionView);\n\n    this.#conditionType = conditionView.conditionType;\n    this.#condition = {\n      frequency: Object.assign({}, DEFAULT_CONDITION.frequency),\n      count: Object.assign({}, DEFAULT_CONDITION.count),\n      alt_alt: Object.assign({}, DEFAULT_CONDITION.alt_alt),\n      alt_ref: Object.assign({}, DEFAULT_CONDITION.alt_ref),\n      hemi_alt: Object.assign({}, DEFAULT_CONDITION.hemi_alt),\n    };\n    this.#mode =\n      this._conditionType === 'genotype' ? MODE.alt_alt : MODE.frequency;\n\n    this.#initializeComponent();\n    this.#setupEventListeners();\n    this.#observeValueChanges();\n  }\n\n  /**\n   * Observes changes in the values view and triggers updates\n   */\n  #observeValueChanges(): void {\n    const observer = new MutationObserver(() => {\n      window.requestAnimationFrame(() => this.#update());\n    });\n    observer.observe(this._valuesElement, {\n      attributes: false,\n      childList: true,\n      subtree: false,\n    });\n  }\n\n  /**\n   * Initializes the component's HTML structure\n   */\n  #initializeComponent(): void {\n    const name = `ConditionValueEditorFrequencyCount${id++}`;\n\n    this._createElement(\n      'frequency-count-editor-view',\n      this.#generateHTML(name)\n    );\n\n    this.#setupRangeSlider();\n  }\n\n  /**\n   * Generates the HTML template for the component\n   * @param name - Unique name for radio button grouping\n   * @returns HTML string template\n   */\n  #generateHTML(name: string): string {\n    if (this._conditionType === 'genotype') {\n      return this.#generateGenotypeHTML(name);\n    }\n    return this.#generateDatasetHTML(name);\n  }\n\n  /**\n   * Generates HTML for dataset condition type\n   * @param name - Unique name for radio button grouping\n   * @returns HTML string template\n   */\n  #generateDatasetHTML(name: string): string {\n    const frequencySection = `\n      <section class=\"frequency switching\" data-mode=\"${MODE.frequency}\">\n        <label>\n          <input type=\"radio\" name=\"${name}\" value=\"${MODE.frequency}\">\n          <span>Frequency</span>\n        </label>\n        <div class=\"range-selector-view input\"></div>\n      </section>`;\n\n    const countSection = this.#generateCountSection(name, MODE.count, 'Count');\n\n    return `\n    <header>Specify range</header>\n    <div class=\"body\">\n      ${frequencySection}\n      ${countSection}\n      ${this.#generateFilteredSection()}\n    </div>`;\n  }\n\n  /**\n   * Generates HTML for genotype dataset condition type\n   * @param name - Unique name for radio button grouping\n   * @returns HTML string template\n   */\n  #generateGenotypeHTML(name: string): string {\n    const genotypeOptions = [\n      { mode: MODE.alt_alt, label: 'Alt/Alt: Number of homozygous genotypes' },\n      {\n        mode: MODE.alt_ref,\n        label: 'Alt/Ref: Number of heterozygous genotypes',\n      },\n      {\n        mode: MODE.hemi_alt,\n        label: 'Hemi_Alt: Number of hemizygous genotypes',\n      },\n    ];\n\n    const sections = genotypeOptions\n      .map((option) =>\n        this.#generateCountSection(name, option.mode, option.label)\n      )\n      .join('');\n\n    return `\n    <header>Specify range</header>\n    <div class=\"body\">\n      ${sections}\n      ${this.#generateFilteredSection()}\n    </div>`;\n  }\n\n  /**\n   * Generates a count input section\n   * @param name - Radio button group name\n   * @param mode - Mode value for the section\n   * @param label - Display label for the section\n   * @returns HTML string for a single count section\n   */\n  #generateCountSection(name: string, mode: string, label: string): string {\n    return `\n      <section class=\"count switching\" data-mode=\"${mode}\">\n        <label>\n          <input type=\"radio\" name=\"${name}\" value=\"${mode}\">\n          <span>${label}</span>\n        </label>\n        <div class=\"input\">\n          <input class=\"from\" min=\"0\" step=\"1\" type=\"number\">\n          ~\n          <input class=\"to\" min=\"0\" step=\"1\" type=\"number\">\n        </div>\n      </section>`;\n  }\n\n  /**\n   * Generates the filtered checkbox section\n   * @returns HTML string for the filtered section\n   */\n  #generateFilteredSection(): string {\n    return `\n      <section class=\"filtered\">\n        <label>\n          <input type=\"checkbox\" checked>\n          <span>Exclude filtered out variants</span>\n        </label>\n      </section>`;\n  }\n\n  /**\n   * Sets up the range slider component\n   */\n  #setupRangeSlider(): void {\n    const rangeSlider = document.createElement(\n      'range-slider'\n    ) as RangeSliderElement;\n    rangeSlider.searchType = 'advanced';\n    rangeSlider.sliderStep = 0.01;\n    rangeSlider.inputStep = 0.05;\n    rangeSlider.addEventListener('range-changed', (e: CustomEvent) => {\n      e.stopPropagation();\n      this.changeParameter(e.detail);\n    });\n\n    const container = this._el.querySelector('.range-selector-view');\n    if (container) {\n      container.appendChild(rangeSlider);\n    }\n\n    this.#rangeSelectorView = rangeSlider;\n  }\n\n  /**\n   * Sets up all event listeners for the component\n   */\n  #setupEventListeners(): void {\n    this.#setupModeToggleListeners();\n    this.#setupCountInputListeners();\n    this.#setupFilteredCheckboxListener();\n  }\n\n  /**\n   * Sets up event listeners for mode toggle radio buttons\n   */\n  #setupModeToggleListeners(): void {\n    const switchingElements = this._body.querySelectorAll(\n      ':scope > .switching'\n    );\n\n    for (const el of switchingElements) {\n      const input = el.querySelector(\n        ':scope > label > input'\n      ) as HTMLInputElement;\n      if (!input) continue;\n\n      input.addEventListener('change', (e) => {\n        this.#handleModeChange(e, switchingElements);\n      });\n\n      // Set default selection based on condition type\n      const defaultMode =\n        this._conditionType === 'genotype' ? MODE.alt_alt : MODE.frequency;\n      if (input.value === defaultMode) {\n        requestAnimationFrame(() => {\n          input.dispatchEvent(new Event('change'));\n          input.checked = true;\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles mode change events\n   * @param e - Change event\n   * @param switchingElements - All switching elements\n   */\n  #handleModeChange(e: Event, switchingElements: NodeListOf<Element>): void {\n    const target = e.target as HTMLInputElement;\n\n    // Update visual state of switching elements\n    for (const el of switchingElements) {\n      const htmlEl = el as HTMLElement;\n      if (htmlEl.dataset.mode === target.value) {\n        htmlEl.classList.add('-current');\n      } else {\n        htmlEl.classList.remove('-current');\n      }\n    }\n\n    this.#mode = target.value as ModeType;\n    this.#update();\n  }\n\n  /**\n   * Sets up event listeners for count input fields\n   */\n  #setupCountInputListeners(): void {\n    const switchingElements = this._body.querySelectorAll(\n      ':scope > .switching'\n    );\n\n    // Set up input listeners for all switching sections\n    switchingElements.forEach((element) => {\n      const inputs = element.querySelectorAll(':scope > .input > input');\n      inputs.forEach((input) => {\n        input.addEventListener('change', (e) => {\n          this.#handleCountInputChange(e);\n        });\n      });\n    });\n  }\n\n  /**\n   * Handles count input change events\n   * @param e - Change event from count input\n   */\n  #handleCountInputChange(e: Event): void {\n    const target = e.target as HTMLInputElement;\n    const key = target.className as keyof ConditionCount;\n    const currentCondition = this.#condition[this.#mode] as ConditionCount;\n    if (currentCondition) {\n      (currentCondition as any)[key] = Number(target.value);\n      this.#update();\n    }\n  }\n\n  /**\n   * Sets up event listener for filtered checkbox\n   */\n  #setupFilteredCheckboxListener(): void {\n    this.#filtered = this._body.querySelector(\n      ':scope > .filtered > label > input'\n    );\n    if (this.#filtered) {\n      this.#filtered.addEventListener('change', () => {\n        this.#update();\n      });\n      this.#filtered.dispatchEvent(new Event('change'));\n    }\n  }\n\n  /**\n   * Updates the condition parameters based on range slider changes\n   * @param newCondition - New condition values from range slider\n   */\n  changeParameter(newCondition: Partial<ConditionFrequency>): void {\n    if (!this.#rangeSelectorView) return;\n\n    for (const key in newCondition) {\n      if (key in this.#condition.frequency) {\n        (this.#condition.frequency as any)[key] = (newCondition as any)[key];\n      }\n    }\n    this.#update();\n  }\n\n  /**\n   * Stores the current values for potential restoration\n   */\n  keepLastValues(): void {\n    const currentCondition = this.#condition[this.#mode];\n    if (currentCondition) {\n      this.#lastValue = { ...currentCondition };\n    }\n  }\n\n  /**\n   * Restores previously stored values\n   */\n  restore(): void {\n    if (this.#lastValue && this.#condition[this.#mode]) {\n      this.#condition[this.#mode] = this.#lastValue as any;\n      this.#update();\n    }\n  }\n\n  /**\n   * Triggers a search operation\n   */\n  search(): void {\n    this.#update();\n  }\n\n  /**\n   * Gets the validation state of the current condition\n   * @returns True if the condition is valid\n   */\n  get isValid(): boolean {\n    return this.#validate();\n  }\n\n  /**\n   * Updates the component state and validates conditions\n   */\n  #update(): void {\n    this.#statsApplyToFreqCountViews();\n    this._valuesView.update(this.#validate());\n  }\n\n  /**\n   * Applies current condition values to frequency count views\n   */\n  #statsApplyToFreqCountViews(): void {\n    this._valuesElement\n      .querySelectorAll(':scope > condition-item-value-view')\n      .forEach((view) => {\n        const freqCountView = this.#getFrequencyCountView(view);\n        if (!freqCountView) return;\n\n        this.#updateFrequencyCountView(freqCountView);\n      });\n  }\n\n  /**\n   * Gets the frequency count view from a condition item value view\n   * @param view - Parent view element\n   * @returns Frequency count view element or null\n   */\n  #getFrequencyCountView(view: Element): FrequencyCountViewElement | null {\n    const shadowRoot = (view as any).shadowRoot;\n    if (!shadowRoot) return null;\n\n    const freqCountView = shadowRoot.querySelector(\n      'frequency-count-value-view'\n    ) as FrequencyCountViewElement;\n    return freqCountView && typeof freqCountView.setValues === 'function'\n      ? freqCountView\n      : null;\n  }\n\n  /**\n   * Updates a frequency count view with current condition values\n   * @param freqCountView - The frequency count view to update\n   */\n  #updateFrequencyCountView(freqCountView: FrequencyCountViewElement): void {\n    const currentCondition = this.#condition[this.#mode];\n    const invertValue =\n      this.#mode === MODE.frequency ? this.#condition.frequency.invert : '';\n    const isFiltered = this.#filtered?.checked ?? false;\n\n    freqCountView.setValues(\n      this.#conditionType,\n      this.#mode,\n      currentCondition.from ?? '',\n      currentCondition.to ?? '',\n      invertValue,\n      isFiltered\n    );\n\n    freqCountView.mode = this.#mode;\n    freqCountView.from = currentCondition.from ?? '';\n    freqCountView.update();\n  }\n\n  /**\n   * Validates the current condition\n   * @returns True if any condition value is not null\n   */\n  #validate(): boolean {\n    const currentCondition = this.#condition[this.#mode];\n    if (!currentCondition) {\n      return false;\n    }\n    return Object.values(currentCondition).some((value) => value !== null);\n  }\n}\n","import ConditionValueEditor from './ConditionValueEditor.js';\nimport '../components/ConditionPathogenicityPredictionSearch/TabView.js';\nimport '../components/ConditionPathogenicityPredictionSearch/PredictionRangeSliderView.js';\nimport { PREDICTIONS } from '../components/ConditionPathogenicityPredictionSearch/PredictionDatasets.js';\nimport ConditionValues from './ConditionValues.js';\nimport ConditionItemView from './ConditionItemView';\n\ninterface ConditionItemValueViewElement extends HTMLElement {\n  label?: string;\n  conditionType?: string;\n  value?: string;\n  deleteButton?: boolean;\n}\n\ninterface PredictionValueViewElement extends HTMLElement {\n  setValues(\n    dataset: string,\n    values: Array<number>,\n    inequalitySigns: Array<string>,\n    unassignedChecks: Array<string>\n  ): void;\n}\n\n/** Pathogenicity prediction editing screen */\nclass ConditionValueEditorPathogenicityPrediction extends ConditionValueEditor {\n  #dataset: string; // selected dataset (e.g., alphamissense, sift, polyphen)\n  #label: string; // selected label (e.g., AlphaMissense, SIFT, PolyPhen)\n  #values: Array<number>; // max-min values (0〜1)\n  #inequalitySigns: Array<string>; // max-min inequality signs (gte, gt, lte, lt)\n  #unassignedChecks: Array<string>; // unassigned checks (e.g., unassigned, unknown)\n  #tabsContainer: HTMLDivElement; // container for tabs\n  #lastState: {\n    dataset: string;\n    label: string;\n    values: Array<number>;\n    inequalitySigns: Array<string>;\n    unassignedChecks: Array<string>;\n  }; // last selected values and states\n\n  /**\n   * @param {ConditionValues} valuesView\n   * @param {ConditionItemView} conditionView\n   */\n  constructor(valuesView: ConditionValues, conditionView: ConditionItemView) {\n    super(valuesView, conditionView);\n    this.#initializeDefaultValues();\n    this.#initializeUI();\n    this.#initializeEvents();\n  }\n\n  // Initialize default values\n  #initializeDefaultValues() {\n    this.#dataset = 'alphamissense';\n    this.#label = 'AlphaMissense';\n    this.#values = [0, 1];\n    this.#inequalitySigns = ['gte', 'lte'];\n    this.#unassignedChecks = [];\n    this.#lastState = {\n      dataset: this.#dataset,\n      label: this.#label,\n      values: [...this.#values],\n      inequalitySigns: [...this.#inequalitySigns],\n      unassignedChecks: [...this.#unassignedChecks],\n    };\n  }\n\n  // Initialize UI elements\n  #initializeUI() {\n    this._createElement(\n      'pathogenicity-editor-view',\n      `<header>Select prediction</header><div class=\"body\" />`\n    );\n    this.#tabsContainer = this._el.querySelector('.body')!;\n    this.#createTabView();\n  }\n\n  // Initialize event listeners\n  #initializeEvents() {\n    this.#tabsContainer.addEventListener(\n      'set-prediction-values',\n      (e: Event) => {\n        const customEvent = e as CustomEvent;\n        this.#updateValuesAndSigns(customEvent.detail);\n      }\n    );\n\n    this.#tabsContainer.addEventListener('switch-tab', (e: Event) => {\n      const customEvent = e as CustomEvent;\n      this.#switchTab(customEvent.detail);\n    });\n  }\n\n  // Public methods\n  /** Retain values when switching to edit screen */\n  keepLastValues() {\n    this._valuesElement\n      .querySelectorAll(':scope > condition-item-value-view')\n      .forEach((view) => {\n        const conditionValues = (\n          view.shadowRoot?.querySelector('prediction-value-view') as any\n        )?.conditionValues;\n        if (conditionValues) {\n          const { dataset, label, values, inequalitySigns, unassignedChecks } =\n            conditionValues;\n          this.#lastState = {\n            dataset,\n            label,\n            values,\n            inequalitySigns,\n            unassignedChecks,\n          };\n        }\n      });\n  }\n\n  /** Restore the last selected values if editing is canceled */\n  restore() {\n    const { dataset, label, values, inequalitySigns, unassignedChecks } =\n      this.#lastState;\n    this.#addPredictionValueView(\n      dataset,\n      label,\n      values,\n      inequalitySigns,\n      unassignedChecks\n    );\n  }\n\n  // Private methods\n  /** Update UI and values when a tab is switched */\n  #switchTab(detail: any) {\n    this.#dataset = detail.dataset;\n    this.#label = PREDICTIONS[this.#dataset].label;\n    this.#updateValuesAndSigns(detail);\n  }\n\n  /** Update internal values and render */\n  #update() {\n    this.#addPredictionValueView(\n      this.#dataset,\n      this.#label,\n      this.#values,\n      this.#inequalitySigns,\n      this.#unassignedChecks\n    );\n    this._valuesView.update(this.#validate());\n  }\n\n  /** Add or update the value view */\n  #addPredictionValueView(\n    dataset: string,\n    label: string,\n    values: Array<number>,\n    inequalitySigns: Array<string>,\n    unassignedChecks: Array<string>\n  ) {\n    let valueView = this._valuesElement.querySelector(\n      'condition-item-value-view'\n    ) as ConditionItemValueViewElement;\n\n    if (!valueView) {\n      valueView = document.createElement('condition-item-value-view');\n      valueView.conditionType = this._conditionType;\n      this._valuesElement.append(valueView);\n    }\n\n    valueView.value = dataset;\n    valueView.label = label;\n\n    this._valuesElement\n      .querySelectorAll(':scope > condition-item-value-view')\n      .forEach((view) => {\n        const predictionValueView = view.shadowRoot?.querySelector(\n          'prediction-value-view'\n        ) as PredictionValueViewElement;\n        if (predictionValueView) {\n          predictionValueView.setValues(\n            dataset,\n            values,\n            inequalitySigns,\n            unassignedChecks\n          );\n        }\n      });\n  }\n\n  /** Validate if the values are valid */\n  #validate(): boolean {\n    return this.#values.filter((item) => !Number.isNaN(item)).length === 2;\n  }\n\n  /** Create tab view */\n  #createTabView() {\n    const tabView = document.createElement('tab-view') as any;\n    tabView.datasets = PREDICTIONS;\n    this.#tabsContainer.appendChild(tabView);\n  }\n\n  /** Update values and inequality signs */\n  #updateValuesAndSigns(detail: any) {\n    this.#values = [detail.values[0], detail.values[1]];\n    this.#inequalitySigns = [\n      detail.inequalitySigns[0],\n      detail.inequalitySigns[1],\n    ];\n    this.#unassignedChecks = detail.unassignedChecks;\n    this.#update();\n  }\n\n  // Accessor\n  /** You can press the OK button if there are two valid values */\n  get isValid() {\n    return this.#values.filter((item) => !Number.isNaN(item)).length === 2;\n  }\n}\n\nexport default ConditionValueEditorPathogenicityPrediction;\n","import { CONDITION_TYPE } from '../definition.js';\nimport ConditionValueEditorCheckboxes from './ConditionValueEditorCheckboxes.js';\nimport ConditionValueEditorClinicalSignificance from './ConditionValueEditorClinicalSignificance';\nimport ConditionValueEditorColumns from './ConditionValueEditorColumns.js';\nimport ConditionValueEditorColumnsDataset from './ConditionValueEditorColumnsDataset';\nimport ConditionValueEditorDisease from './ConditionValueEditorDisease.js';\nimport ConditionValueEditorFrequencyCount from './ConditionValueEditorFrequencyCount';\nimport ConditionValueEditorGene from './ConditionValueEditorGene.js';\nimport ConditionValueEditorLocation from './ConditionValueEditorLocation.js';\nimport ConditionValueEditorPathogenicityPrediction from './ConditionValueEditorPathogenicityPrediction';\nimport ConditionValueEditorVariantID from './ConditionValueEditorVariantID.js';\nimport ConditionItemView from './ConditionItemView';\n\ninterface ConditionValueEditor {\n  keepLastValues(): void;\n  restore(): void;\n  isValid: boolean;\n}\n\n/**\n * About the AdvancedSearch edit screen.\n * Create an instance of ConditionValueEditors\n */\nclass ConditionValues {\n  private _conditionView: ConditionItemView;\n  private _editors: ConditionValueEditor[];\n  private _sections: HTMLDivElement;\n  private _okButton: HTMLButtonElement;\n\n  constructor(conditionView: ConditionItemView) {\n    this._conditionView = conditionView;\n    this._editors = [];\n\n    // HTML\n    conditionView.editorElement.innerHTML = `\n      <div class=\"sections\"></div>\n      <div class=\"buttons\">\n        <button class=\"button-view -disabled\">OK</button>\n        <button class=\"button-view -negative\">Cancel</button>\n      </div>`;\n\n    // references\n    this._sections = conditionView.editorElement.querySelector(\n      ':scope > .sections'\n    ) as HTMLDivElement;\n    const buttons = conditionView.editorElement.querySelector(\n      ':scope > .buttons'\n    ) as HTMLElement;\n    this._okButton = buttons.querySelector(\n      ':scope > .button-view:nth-child(1)'\n    ) as HTMLButtonElement;\n\n    // events\n    this._okButton.addEventListener('click', this._clickOkButton.bind(this));\n    buttons\n      .querySelector(':scope > .button-view:nth-child(2)')!\n      .addEventListener('click', this._clickCancelButton.bind(this));\n\n    // initialization by types\n    switch (conditionView.conditionType) {\n      case CONDITION_TYPE.type:\n        this._editors.push(\n          new ConditionValueEditorCheckboxes(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        break;\n\n      case CONDITION_TYPE.significance:\n        this._editors.push(\n          new ConditionValueEditorClinicalSignificance(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        break;\n\n      case CONDITION_TYPE.consequence:\n        this._editors.push(\n          new ConditionValueEditorColumns(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        break;\n\n      case CONDITION_TYPE.dataset:\n      case CONDITION_TYPE.genotype:\n        this._editors.push(\n          new ConditionValueEditorColumnsDataset(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        this._editors.push(\n          new ConditionValueEditorFrequencyCount(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        break;\n\n      case CONDITION_TYPE.disease:\n        this._editors.push(\n          new ConditionValueEditorDisease(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        break;\n\n      case CONDITION_TYPE.gene_symbol:\n        this._editors.push(\n          new ConditionValueEditorGene(this as any, this._conditionView as any)\n        );\n        break;\n\n      case CONDITION_TYPE.pathogenicity_prediction:\n        this._editors.push(\n          new ConditionValueEditorPathogenicityPrediction(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        break;\n\n      case CONDITION_TYPE.variant_id:\n        this._editors.push(\n          new ConditionValueEditorVariantID(\n            this as any,\n            this._conditionView as any\n          )\n        );\n        break;\n\n      case CONDITION_TYPE.location:\n        this._editors.push(\n          new ConditionValueEditorLocation(\n            this as any,\n            this._conditionView as any,\n            0\n          )\n        );\n        break;\n    }\n  }\n\n  // public methods\n  /** Retains the value of ConditionValueEditor once editing starts */\n  startToEditCondition(): void {\n    for (const editor of this._editors) {\n      editor.keepLastValues();\n    }\n  }\n\n  /** Whether isValid(whether condition has a value) is true or false and okButton is disabled */\n  update(isValid: boolean): void {\n    if (\n      [CONDITION_TYPE.dataset, CONDITION_TYPE.genotype].includes(\n        this._conditionView.conditionType\n      )\n    ) {\n      isValid = this._editors.every((editor) => {\n        return editor.isValid;\n      });\n    }\n    if (isValid) {\n      this._okButton.classList.remove('-disabled');\n    } else {\n      this._okButton.classList.add('-disabled');\n    }\n  }\n\n  // private methods\n  /** If isFirstTime is false and there is no Node in values, delete conditionView. Otherwise finish editing */\n  private _clickOkButton(e: MouseEvent): void {\n    e.stopImmediatePropagation();\n    this._conditionView.doneEditing();\n  }\n\n  /** When isFirstTime is true, remove conditionView. Otherwise, revert to the state before editing. */\n  private _clickCancelButton(e: MouseEvent): void {\n    e.stopImmediatePropagation();\n    if (this._conditionView.isFirstTime) {\n      this._conditionView.remove();\n    } else {\n      for (const editor of this._editors) {\n        editor.restore();\n        if (\n          !['dataset', 'pathogenicity_prediction', 'id', 'location'].includes(\n            this._conditionView.conditionType\n          )\n        ) {\n          this._conditionView._elm.dataset.relation =\n            this._conditionView.keepLastRelation;\n        }\n      }\n      this._conditionView.doneEditing();\n    }\n  }\n\n  // accessors\n  get conditionView(): ConditionItemView {\n    return this._conditionView;\n  }\n\n  get sections(): HTMLDivElement {\n    return this._sections;\n  }\n\n  get editors(): ConditionValueEditor[] {\n    return this._editors;\n  }\n}\n\nexport default ConditionValues;\n","import { getSimpleSearchConditionMaster } from '../../store/searchManager';\nimport { DatasetMasterItem } from '../../types';\n\n/** Ref/Alt列で表示する配列の最大長 */\nexport const REF_ALT_SHOW_LENGTH = 4;\n\n/**\n * 各カラムのHTMLテンプレートを定数として定義\n * テーブルの各列に対応するHTML構造を提供\n */\nexport const COLUMN_TEMPLATES = {\n  togovar_id:\n    '<td class=\"togovar_id\"><a href=\"\" class=\"hyper-text -internal\" target=\"_blank\"></a></td>',\n  refsnp_id:\n    '<td class=\"refsnp_id\" data-remains=\"\"><a href=\"\" target=\"_blank\" class=\"hyper-text -external\"></a></td>',\n  position:\n    '<td class=\"position\"><div class=\"chromosome-position\"><div class=\"chromosome\"></div><div class=\"coordinate\"></div></div></td>',\n  ref_alt:\n    '<td class=\"ref_alt\"><div class=\"ref-alt\"><span class=\"ref\" data-sum=\"\"></span><span class=\"arrow\"></span><span class=\"alt\" data-sum=\"\"><span class=\"sum\"></span></span></div></td>',\n  type: '<td class=\"type\"><div class=\"variant-type\"></div></td>',\n  gene: '<td class=\"gene\" data-remains=\"\"><a href=\"\" class=\"hyper-text -internal\" target=\"_blank\"></a></td>',\n  consequence:\n    '<td class=\"consequence\" data-remains=\"\"><div class=\"consequence-item\"></div></td>',\n  clinical_significance:\n    '<td class=\"clinical_significance\"><div class=\"clinical-significance\" data-value=\"\"></div><a class=\"hyper-text -internal\" href=\"\" target=\"_blank\"></a><span class=\"icon\" data-remains=\"\" data-mgend=\"\"></span></td>',\n  alphamissense:\n    '<td class=\"alphamissense\"><div class=\"variant-function\" data-function=\"\"></div></td>',\n  sift: '<td class=\"sift\"><div class=\"variant-function\" data-function=\"\"></div></td>',\n  polyphen:\n    '<td class=\"polyphen\"><div class=\"variant-function\" data-function=\"\"></div></td>',\n} as const;\n\n/**\n * アレル頻度(Alt frequency)カラムのHTMLを動的に生成\n *\n * データセットマスタから頻度データを持つデータセットを取得し、\n * 各データセットに対応するlogarithmized-block-graph-frequency-view要素を生成する\n *\n * @returns 生成されたHTMLテーブルセル文字列\n */\nexport function createFrequencyColumnHTML(): string {\n  const master: DatasetMasterItem[] =\n    getSimpleSearchConditionMaster('dataset').items;\n  const frequencyElements = master\n    .filter((dataset) => dataset.has_freq)\n    .map(\n      (dataset) =>\n        `<logarithmized-block-graph-frequency-view\n        data-dataset=\"${dataset.id}\"\n        data-direction=\"vertical\"\n      ></logarithmized-block-graph-frequency-view>`\n    )\n    .join('');\n\n  return `<td class=\"alt_frequency\">${frequencyElements}</td>`;\n}\n","import { getSimpleSearchConditionMaster } from '../../store/searchManager';\nimport {\n  DatasetMasterItem,\n  TypeMasterItem,\n  ConsequenceMasterItem,\n  GeneSymbol,\n  Frequency,\n  TdFrequencies,\n  Transcript,\n  Significance,\n} from '../../types';\nimport { REF_ALT_SHOW_LENGTH } from './ResultsRowTemplates';\n\n/**\n * 結果行の各カラムデータ更新を担当するユーティリティクラス\n *\n * 各メソッドは静的メソッドとして実装され、特定のカラムタイプのDOM要素を\n * 対応するデータで更新する責任を持つ\n */\nexport class ResultsRowUpdaters {\n  /**\n   * TogoVar IDカラムを更新\n   *\n   * @param element - 更新対象のアンカー要素\n   * @param value - TogoVar ID値\n   * @param url - リンク先URL\n   */\n  static updateTogovarId(\n    element: HTMLAnchorElement | null,\n    value: string,\n    url: string\n  ) {\n    if (!element || !value) {\n      if (element) {\n        element.href = '';\n        element.textContent = '';\n      }\n      return;\n    }\n\n    element.href = url;\n    element.textContent = value;\n  }\n\n  /**\n   * RefSNP IDカラムを更新\n   *\n   * @param tdRS - RefSNPのテーブルセル要素\n   * @param tdRSAnchor - RefSNPのアンカー要素\n   * @param values - RefSNP ID配列\n   */\n  static updateRefSNP(\n    tdRS: HTMLTableCellElement | null,\n    tdRSAnchor: HTMLAnchorElement | null,\n    values: string[]\n  ) {\n    if (!tdRS || !tdRSAnchor) return;\n\n    if (!values || values.length === 0) {\n      tdRS.dataset.remains = '0';\n      tdRSAnchor.href = '';\n      tdRSAnchor.textContent = '';\n      return;\n    }\n\n    tdRS.dataset.remains = (values.length - 1).toString();\n    tdRSAnchor.href = `http://identifiers.org/dbsnp/${values[0]}`;\n    tdRSAnchor.textContent = values[0];\n  }\n\n  /**\n   * Positionカラムを更新\n   *\n   * @param tdPositionChromosome - 染色体表示用のDiv要素\n   * @param tdPositionCoordinate - 座標表示用のDiv要素\n   * @param chromosome - 染色体名\n   * @param position - 座標位置\n   */\n  static updatePosition(\n    tdPositionChromosome: HTMLDivElement | null,\n    tdPositionCoordinate: HTMLDivElement | null,\n    chromosome: string,\n    position: number\n  ) {\n    if (tdPositionChromosome) {\n      tdPositionChromosome.textContent = chromosome;\n    }\n    if (tdPositionCoordinate) {\n      tdPositionCoordinate.textContent = position.toString();\n    }\n  }\n\n  /**\n   * Ref/Altカラムを更新\n   *\n   * @param tdRefAltRef - Reference表示用のSpan要素\n   * @param tdRefAltAlt - Alternate表示用のSpan要素\n   * @param reference - Referenceアレル配列\n   * @param alternate - Alternateアレル配列\n   */\n  static updateRefAlt(\n    tdRefAltRef: HTMLSpanElement | null,\n    tdRefAltAlt: HTMLSpanElement | null,\n    reference: string,\n    alternate: string\n  ) {\n    const refData = this.formatRefAltData(reference || '');\n    const altData = this.formatRefAltData(alternate || '');\n\n    if (tdRefAltRef) {\n      tdRefAltRef.textContent = refData.display;\n      tdRefAltRef.dataset.sum = refData.length.toString();\n    }\n\n    if (tdRefAltAlt) {\n      tdRefAltAlt.textContent = altData.display;\n      tdRefAltAlt.dataset.sum = altData.length.toString();\n    }\n  }\n\n  /**\n   * Ref/Altデータのフォーマット情報を生成\n   *\n   * @param sequence - フォーマット対象の配列文字列\n   * @returns 表示用文字列と元の長さを含むオブジェクト\n   */\n  static formatRefAltData(sequence: string) {\n    return {\n      display: this.formatRefAlt(sequence),\n      length: sequence.length,\n    };\n  }\n\n  /**\n   * Ref/Alt配列を表示用にフォーマット\n   * 指定された長さを超える場合は省略記号を追加\n   *\n   * @param sequence - フォーマット対象の配列文字列\n   * @returns フォーマット済み文字列\n   */\n  static formatRefAlt(sequence: string) {\n    return (\n      sequence.substring(0, REF_ALT_SHOW_LENGTH) +\n      (sequence.length > REF_ALT_SHOW_LENGTH ? '...' : '')\n    );\n  }\n\n  /**\n   * Variant Typeカラムを更新\n   *\n   * @param element - 更新対象のDiv要素\n   * @param value - バリアントタイプID\n   */\n  static updateVariantType(element: HTMLDivElement | null, value: string) {\n    if (!element) return;\n\n    const master: TypeMasterItem[] =\n      getSimpleSearchConditionMaster('type').items;\n    element.textContent = master.find((item) => item.id === value)?.label || '';\n  }\n\n  /**\n   * Geneカラムを更新\n   *\n   * @param tdGene - 遺伝子のテーブルセル要素\n   * @param tdGeneAnchor - 遺伝子のアンカー要素\n   * @param symbols - 遺伝子シンボル配列\n   */\n  static updateGene(\n    tdGene: HTMLTableCellElement | null,\n    tdGeneAnchor: HTMLAnchorElement | null,\n    symbols: GeneSymbol[]\n  ) {\n    if (!tdGene || !tdGeneAnchor) return;\n\n    if (!symbols || symbols.length === 0) {\n      tdGene.dataset.remains = '0';\n      tdGeneAnchor.href = '';\n      tdGeneAnchor.textContent = '';\n      return;\n    }\n\n    tdGene.dataset.remains = (symbols.length - 1).toString();\n    tdGeneAnchor.href = `/gene/${symbols[0].id}`;\n    tdGeneAnchor.textContent = symbols[0].name;\n  }\n\n  /**\n   * Alt frequencyカラムを更新\n   *\n   * @param tdFrequencies - 頻度表示要素のマップ\n   * @param frequencies - 頻度データ配列\n   */\n  static updateAltFrequency(\n    tdFrequencies: TdFrequencies,\n    frequencies: Frequency[]\n  ) {\n    const master: DatasetMasterItem[] =\n      getSimpleSearchConditionMaster('dataset').items;\n\n    master\n      .filter((dataset) => dataset.has_freq)\n      .forEach((dataset) => {\n        const frequency = frequencies?.find(\n          (freq) => freq.source === dataset.id\n        );\n        const element = tdFrequencies[dataset.id];\n        if (element) {\n          element.frequency = frequency;\n        }\n      });\n  }\n\n  /**\n   * Consequenceカラムを更新\n   *\n   * @param tdConsequence - 結果のテーブルセル要素\n   * @param tdConsequenceItem - 結果表示用のDiv要素\n   * @param mostConsequence - 最も重要な結果\n   * @param transcripts - 転写産物データ配列\n   */\n  static updateConsequence(\n    tdConsequence: HTMLTableCellElement | null,\n    tdConsequenceItem: HTMLDivElement | null,\n    mostConsequence: string,\n    transcripts: Transcript[]\n  ) {\n    if (!tdConsequence || !tdConsequenceItem) return;\n\n    if (!mostConsequence) {\n      tdConsequence.dataset.remains = '0';\n      tdConsequenceItem.textContent = '';\n      return;\n    }\n\n    const master: ConsequenceMasterItem[] =\n      getSimpleSearchConditionMaster('consequence').items;\n    const uniqueConsequences = Array.from(\n      new Set(transcripts.flatMap((transcript) => transcript.consequence))\n    );\n\n    tdConsequence.dataset.remains = (uniqueConsequences.length - 1).toString();\n    tdConsequenceItem.textContent =\n      master.find((consequence) => consequence.id === mostConsequence)?.label ||\n      '';\n  }\n\n  /**\n   * Clinical significanceカラムを更新\n   *\n   * @param tdClinicalSign - Clinical significance表示用のDiv要素\n   * @param tdClinicalAnchor - Clinical significanceのアンカー要素\n   * @param tdClinicalIcon - Clinical significanceアイコン用のSpan要素\n   * @param significances - Clinical significanceデータ配列\n   */\n  static updateClinicalSignificance(\n    tdClinicalSign: HTMLDivElement | null,\n    tdClinicalAnchor: HTMLAnchorElement | null,\n    tdClinicalIcon: HTMLSpanElement | null,\n    significances: Significance[]\n  ) {\n    if (!tdClinicalSign || !tdClinicalAnchor || !tdClinicalIcon) return;\n\n    if (!significances || significances.length === 0) {\n      this.resetClinicalSignificance(\n        tdClinicalSign,\n        tdClinicalAnchor,\n        tdClinicalIcon\n      );\n      return;\n    }\n\n    const firstSignificance = significances[0];\n    const firstCondition = firstSignificance.conditions?.[0];\n\n    // Set interpretations value\n    tdClinicalSign.dataset.value = firstSignificance.interpretations[0];\n\n    this.updateClinicalCondition(\n      tdClinicalSign,\n      tdClinicalAnchor,\n      firstCondition\n    );\n    this.updateClinicalMetadata(tdClinicalIcon, significances);\n  }\n\n  /**\n   * Clinical significanceのリセット処理\n   *\n   * @param tdClinicalSign - Clinical significance表示用のDiv要素\n   * @param tdClinicalAnchor - Clinical significanceのアンカー要素\n   * @param tdClinicalIcon - Clinical significanceアイコン用のSpan要素\n   */\n  static resetClinicalSignificance(\n    tdClinicalSign: HTMLDivElement,\n    tdClinicalAnchor: HTMLAnchorElement,\n    tdClinicalIcon: HTMLSpanElement\n  ) {\n    tdClinicalSign.dataset.value = '';\n    tdClinicalAnchor.textContent = '';\n    tdClinicalAnchor.setAttribute('href', '');\n    tdClinicalIcon.dataset.remains = '0';\n    tdClinicalIcon.dataset.mgend = 'false';\n  }\n\n  /**\n   * Clinical significanceの状態情報を更新\n   *\n   * @param tdClinicalSign - Clinical significance表示用のDiv要素\n   * @param tdClinicalAnchor - Clinical significanceのアンカー要素\n   * @param firstCondition - 最初の状態データ\n   */\n  static updateClinicalCondition(\n    tdClinicalSign: HTMLDivElement,\n    tdClinicalAnchor: HTMLAnchorElement,\n    firstCondition: any\n  ) {\n    if (firstCondition) {\n      tdClinicalSign.textContent = '';\n      tdClinicalAnchor.textContent = firstCondition.name || '';\n\n      if (firstCondition.medgen) {\n        tdClinicalAnchor.setAttribute(\n          'href',\n          `/disease/${firstCondition.medgen}`\n        );\n      } else {\n        // Display in div instead of anchor when no medgen\n        tdClinicalSign.textContent = firstCondition.name;\n        tdClinicalAnchor.textContent = '';\n        tdClinicalAnchor.className = '';\n      }\n    } else {\n      // No conditions exist\n      tdClinicalSign.textContent = 'others';\n      tdClinicalAnchor.textContent = '';\n    }\n  }\n\n  /**\n   * Clinical significanceのメタデータを更新\n   *\n   * @param tdClinicalIcon - Clinical significanceアイコン用のSpan要素\n   * @param significances - Clinical significanceデータ配列\n   */\n  static updateClinicalMetadata(\n    tdClinicalIcon: HTMLSpanElement,\n    significances: Significance[]\n  ) {\n    // Set remaining significance count\n    tdClinicalIcon.dataset.remains = (significances.length - 1).toString();\n\n    // Check if mgend source exists in significances\n    const hasMedgen = significances.some(\n      (significance) => significance.source === 'mgend'\n    );\n    tdClinicalIcon.dataset.mgend = hasMedgen.toString();\n  }\n\n  /**\n   * 機能予測の共通更新ロジック\n   *\n   * @param element - 更新対象のDiv要素\n   * @param value - 機能予測値\n   * @param getFunctionClass - 値から機能クラスを決定する関数\n   */\n  static updateFunctionPrediction(\n    element: HTMLDivElement | null,\n    value: number | null,\n    getFunctionClass: (value: number) => string\n  ) {\n    if (!element) return;\n\n    if (value === null) {\n      element.textContent = '';\n      element.dataset.function = '';\n      return;\n    }\n\n    element.textContent = value.toString();\n    element.dataset.function = getFunctionClass(value);\n  }\n\n  /**\n   * AlphaMissenseスコアを更新\n   *\n   * @param element - 更新対象のDiv要素\n   * @param value - AlphaMissenseスコア\n   */\n  static updateAlphaMissense(element: HTMLDivElement | null, value: number) {\n    this.updateFunctionPrediction(element, value, (val) => {\n      if (val < 0.34) return 'LB';\n      if (val > 0.564) return 'LP';\n      return 'A';\n    });\n  }\n\n  /**\n   * SIFTスコアを更新\n   *\n   * @param element - 更新対象のDiv要素\n   * @param value - SIFTスコア\n   */\n  static updateSift(element: HTMLDivElement | null, value: number) {\n    this.updateFunctionPrediction(element, value, (val) =>\n      val >= 0.05 ? 'T' : 'D'\n    );\n  }\n\n  /**\n   * PolyPhenスコアを更新\n   *\n   * @param element - 更新対象のDiv要素\n   * @param value - PolyPhenスコア\n   */\n  static updatePolyphen(element: HTMLDivElement | null, value: number) {\n    this.updateFunctionPrediction(element, value, (val) => {\n      if (val > 0.908) return 'PROBD';\n      if (val > 0.446) return 'POSSD';\n      if (val >= 0) return 'B';\n      return 'U';\n    });\n  }\n}\n","import { COLUMNS } from '../../global.js';\nimport { storeManager } from '../../store/StoreManager';\nimport '../../components/LogarithmizedBlockGraphFrequencyView';\nimport {\n  ResultData,\n  Column,\n  TdFrequencies,\n  FrequencyElement,\n} from '../../types';\nimport {\n  COLUMN_TEMPLATES,\n  createFrequencyColumnHTML,\n} from './ResultsRowTemplates';\nimport { ResultsRowUpdaters } from './ResultsRowUpdaters';\n\n/**\n * 検索結果テーブルの1行を管理するクラス\n *\n * 各行のDOM要素の作成、データバインディング、状態管理を担当する\n * storeManagerからのデータ変更通知を受け取り、対応するDOM要素を更新する\n */\nexport class ResultsRowView {\n  /** 行のインデックス番号 */\n  index: number;\n  /** 行の選択状態 */\n  selected: boolean;\n  /** テーブル行要素 */\n  tr: HTMLTableRowElement;\n\n  // DOM要素のキャッシュ\n  // TogoVar ID\n  tdTGVAnchor: HTMLAnchorElement | null;\n  // RefSNP ID\n  tdRS: HTMLTableCellElement | null;\n  tdRSAnchor: HTMLAnchorElement | null;\n  // Position\n  tdPositionChromosome: HTMLDivElement | null;\n  tdPositionCoordinate: HTMLDivElement | null;\n  // Ref/Alt\n  tdRefAltRef: HTMLSpanElement | null;\n  tdRefAltAlt: HTMLSpanElement | null;\n  // Type\n  tdType: HTMLDivElement | null;\n  // Gene\n  tdGene: HTMLTableCellElement | null;\n  tdGeneAnchor: HTMLAnchorElement | null;\n  // Alt frequency\n  tdFrequencies: TdFrequencies;\n  // Consequence\n  tdConsequence: HTMLTableCellElement | null;\n  tdConsequenceItem: HTMLDivElement | null;\n  // Clinical significance\n  tdClinicalSign: HTMLDivElement | null;\n  tdClinicalAnchor: HTMLAnchorElement | null;\n  tdClinicalIcon: HTMLSpanElement | null;\n  // AlphaMissense\n  tdAlphaMissenseFunction: HTMLDivElement | null;\n  // SIFT\n  tdSiftFunction: HTMLDivElement | null;\n  // PolyPhen\n  tdPolyphenFunction: HTMLDivElement | null;\n\n  /**\n   * ResultsRowViewのコンストラクタ\n   *\n   * @param index - テーブル内の行のインデックス番号\n   */\n  constructor(index: number) {\n    this.index = index;\n    this.selected = false;\n    this.tr = this._createTableRow();\n\n    // `selectedRow` の変更を監視し、selectedRow() を活用\n    storeManager.subscribe('selectedRow', this.selectedRow.bind(this));\n    // `offset` の変更を監視し、テーブル行を更新\n    storeManager.subscribe('offset', this.updateTableRow.bind(this));\n  }\n\n  // ========================================\n  // Public Methods\n  // ========================================\n\n  /**\n   * 行がクリックされたときの処理\n   *\n   * 選択状態をトグルし、カスタムイベントを発火する\n   */\n  click() {\n    storeManager.setData('selectedRow', this.selected ? undefined : this.index);\n\n    // Dispatch custom event to notify tap completion\n    const tapCompletedEvent = new CustomEvent('tapCompleted', {\n      bubbles: true,\n      detail: { rowIndex: this.index },\n    });\n    this.tr.dispatchEvent(tapCompletedEvent);\n  }\n\n  /**\n   * 選択行の変更を処理\n   *\n   * @param index - 選択された行のインデックス\n   */\n  selectedRow(index: number) {\n    this.selected = index === this.index;\n    this.tr.classList.toggle('-selected', this.selected);\n  }\n\n  /**\n   * テーブル行のデータを更新\n   *\n   * storeManagerからの通知を受けて行の表示内容を更新する\n   * データの取得状況に応じて適切な表示状態を設定する\n   */\n  updateTableRow() {\n    if (\n      storeManager.getData('isFetching') ||\n      storeManager.getData('isStoreUpdating')\n    ) {\n      return this._setLoadingState();\n    }\n\n    // styleで範囲外の行(-out-of-range)は非表示\n    const rowCount = storeManager.getData('rowCount');\n    if (rowCount <= this.index) {\n      return this._setOutOfRangeState();\n    }\n\n    const result = storeManager.getRecordByIndex(this.index);\n    if (!result || result === 'loading' || result === 'out of range') {\n      return this._setLoadingState();\n    }\n\n    this._prepareTableData();\n\n    // 各カラムのデータ更新\n    COLUMNS.forEach((column) => this._updateColumnContent(column, result));\n\n    this.tr.classList.remove('-loading', '-out-of-range');\n  }\n\n  // ========================================\n  // Private Methods\n  // ========================================\n  /**\n   * テーブル行要素を作成\n   *\n   * @returns 作成されたテーブル行要素\n   */\n  private _createTableRow(): HTMLTableRowElement {\n    const tr = document.createElement('tr');\n    tr.classList.add('-loading');\n    tr.innerHTML = `<td colspan=\"${COLUMNS.length}\"></td>`;\n    tr.addEventListener('click', this.click.bind(this));\n    return tr;\n  }\n\n  /**\n   * 行をローディング状態に設定\n   */\n  private _setLoadingState() {\n    this.tr.classList.add('-loading');\n    this.tr.innerHTML = `<td colspan=\"${COLUMNS.length}\"></td>`;\n  }\n\n  /**\n   * 行を範囲外状態に設定\n   */\n  private _setOutOfRangeState() {\n    this.tr.classList.add('-out-of-range');\n    this.tr.innerHTML = `<td colspan=\"${COLUMNS.length}\"></td>`;\n  }\n\n  /**\n   * テーブルデータの準備\n   *\n   * HTMLの生成とDOM要素のキャッシュを実行\n   */\n  private _prepareTableData() {\n    this.tr.innerHTML = this._createTableCellHTML();\n    this._cacheTableCells();\n  }\n\n  /**\n   * テーブルセルのHTMLを動的に生成\n   *\n   * @returns 生成されたHTML文字列\n   */\n  private _createTableCellHTML(): string {\n    return COLUMNS.map((column) => {\n      if (column.id === 'alt_frequency') {\n        return createFrequencyColumnHTML();\n      }\n      return COLUMN_TEMPLATES[column.id] || '';\n    }).join('');\n  }\n\n  /**\n   * テーブルセル要素をキャッシュ\n   *\n   * パフォーマンス向上のため、頻繁にアクセスするDOM要素を事前にキャッシュ\n   */\n  private _cacheTableCells() {\n    this._cacheBasicElements();\n    this._cacheFrequencyElements();\n    this._cacheFunctionElements();\n  }\n\n  /**\n   * 基本的なテーブルセル要素をキャッシュ\n   */\n  private _cacheBasicElements() {\n    // TogoVar ID\n    this.tdTGVAnchor = this.tr.querySelector('td.togovar_id > a');\n\n    // RefSNP ID\n    this.tdRS = this.tr.querySelector('td.refsnp_id');\n    this.tdRSAnchor = this.tdRS?.querySelector('a') || null;\n\n    // Position\n    const tdPosition = this.tr.querySelector(\n      'td.position > .chromosome-position'\n    );\n    this.tdPositionChromosome =\n      tdPosition?.querySelector('.chromosome') || null;\n    this.tdPositionCoordinate =\n      tdPosition?.querySelector('.coordinate') || null;\n\n    // Ref/Alt\n    const tdRefAlt = this.tr.querySelector('td.ref_alt > .ref-alt');\n    this.tdRefAltRef = tdRefAlt?.querySelector('span.ref') || null;\n    this.tdRefAltAlt = tdRefAlt?.querySelector('span.alt') || null;\n\n    // Type\n    this.tdType = this.tr.querySelector('td.type > .variant-type');\n\n    // Gene\n    this.tdGene = this.tr.querySelector('td.gene');\n    this.tdGeneAnchor = this.tdGene?.querySelector('a') || null;\n\n    // Consequence\n    this.tdConsequence = this.tr.querySelector('td.consequence');\n    this.tdConsequenceItem =\n      this.tdConsequence?.querySelector('.consequence-item') || null;\n\n    // Clinical significance\n    const tdClinical = this.tr.querySelector('td.clinical_significance');\n    this.tdClinicalSign =\n      tdClinical?.querySelector('.clinical-significance') || null;\n    this.tdClinicalAnchor = tdClinical?.querySelector('a') || null;\n    this.tdClinicalIcon = tdClinical?.querySelector('span.icon') || null;\n  }\n\n  /**\n   * 頻度関連のテーブルセル要素をキャッシュ\n   */\n  private _cacheFrequencyElements() {\n    this.tdFrequencies = {};\n    this.tr\n      .querySelectorAll(\n        'td.alt_frequency > logarithmized-block-graph-frequency-view'\n      )\n      .forEach((elm) => {\n        const element = elm as FrequencyElement;\n        const datasetId = element.dataset.dataset;\n        if (datasetId) {\n          this.tdFrequencies[datasetId] = element;\n        }\n      });\n  }\n\n  /**\n   * 機能予測関連のテーブルセル要素をキャッシュ\n   */\n  private _cacheFunctionElements() {\n    // AlphaMissense\n    const tdAlphaMissense = this.tr.querySelector('td.alphamissense');\n    this.tdAlphaMissenseFunction =\n      tdAlphaMissense?.querySelector('.variant-function') || null;\n\n    // SIFT\n    const tdSift = this.tr.querySelector('td.sift');\n    this.tdSiftFunction = tdSift?.querySelector('.variant-function') || null;\n\n    // PolyPhen\n    const tdPolyphen = this.tr.querySelector('td.polyphen');\n    this.tdPolyphenFunction =\n      tdPolyphen?.querySelector('.variant-function') || null;\n  }\n\n  /**\n   * 指定されたカラムの内容を更新\n   *\n   * @param column - 更新対象のカラム定義\n   * @param result - 表示データ\n   */\n  private _updateColumnContent(column: Column, result: ResultData) {\n    const columnHandlers = {\n      togovar_id: () =>\n        ResultsRowUpdaters.updateTogovarId(\n          this.tdTGVAnchor,\n          result.id,\n          `/variant/${result.id}`\n        ),\n      refsnp_id: () =>\n        ResultsRowUpdaters.updateRefSNP(\n          this.tdRS,\n          this.tdRSAnchor,\n          result.existing_variations\n        ),\n      position: () =>\n        ResultsRowUpdaters.updatePosition(\n          this.tdPositionChromosome,\n          this.tdPositionCoordinate,\n          result.chromosome,\n          result.position\n        ),\n      ref_alt: () =>\n        ResultsRowUpdaters.updateRefAlt(\n          this.tdRefAltRef,\n          this.tdRefAltAlt,\n          result.reference,\n          result.alternate\n        ),\n      type: () =>\n        ResultsRowUpdaters.updateVariantType(this.tdType, result.type),\n      gene: () =>\n        ResultsRowUpdaters.updateGene(\n          this.tdGene,\n          this.tdGeneAnchor,\n          result.symbols\n        ),\n      alt_frequency: () =>\n        ResultsRowUpdaters.updateAltFrequency(\n          this.tdFrequencies,\n          result.frequencies\n        ),\n      consequence: () =>\n        ResultsRowUpdaters.updateConsequence(\n          this.tdConsequence,\n          this.tdConsequenceItem,\n          result.most_severe_consequence,\n          result.transcripts\n        ),\n      clinical_significance: () =>\n        ResultsRowUpdaters.updateClinicalSignificance(\n          this.tdClinicalSign,\n          this.tdClinicalAnchor,\n          this.tdClinicalIcon,\n          result.significance\n        ),\n      alphamissense: () =>\n        ResultsRowUpdaters.updateAlphaMissense(\n          this.tdAlphaMissenseFunction,\n          result.alphamissense\n        ),\n      sift: () =>\n        ResultsRowUpdaters.updateSift(this.tdSiftFunction, result.sift),\n      polyphen: () =>\n        ResultsRowUpdaters.updatePolyphen(\n          this.tdPolyphenFunction,\n          result.polyphen\n        ),\n    };\n    columnHandlers[column.id]?.();\n  }\n}\n","import { storeManager } from '../../store/StoreManager';\nimport { TR_HEIGHT } from '../../global.js';\n\n// ================================================================\n// CONSTANTS & TYPES\n// ================================================================\n\nconst RELEASE_DURATION = 2000;\nconst MIN_SCROLLBAR_HEIGHT = 30;\n\n/**\n * Represents the state of a drag operation\n */\ninterface DragState {\n  isDragging: boolean;\n  startY: number;\n  startTop: number;\n}\n\n/**\n * UI object for drag events containing position information\n */\ninterface DragEventUI {\n  position: {\n    top: number;\n  };\n}\n\n/**\n * Scroll calculation result type\n */\ntype ScrollCalculation = {\n  totalHeight: number;\n  availableScrollY: number;\n  newScrollPosition: number;\n};\n\n/**\n * ScrollBar calculation result type\n */\ntype ScrollBarCalculation = {\n  barHeight: number;\n  barTop: number;\n  displayRate: number;\n};\n\n/**\n * Scroll bounds type\n */\ntype ScrollBounds = {\n  min: number;\n  max: number;\n};\n\n// ================================================================\n// MAIN CLASS\n// ================================================================\n\n/**\n * Results専用スクロールバーコンポーネント\n *\n * ## Features\n * - Results表示に特化したスクロール処理\n * - マウス・タッチドラッグ対応\n * - 自動位置計算とフィードバック\n * - パフォーマンス最適化済み\n *\n * ## Usage\n * ```typescript\n * const scrollbar = new ResultsScrollBar(containerElement);\n * ```\n */\nexport default class ResultsScrollBar {\n  // ================================================================\n  // PROPERTIES\n  // ================================================================\n\n  /** Container element for the scrollbar */\n  private readonly container: HTMLElement;\n  /** Main scrollbar element */\n  private readonly scrollBarElement: HTMLElement;\n  /** Display element for current position */\n  private readonly positionDisplay: HTMLElement;\n  /** Display element for total count */\n  private readonly totalDisplay: HTMLElement;\n\n  /** Timeout ID for delayed release of visual states */\n  private releaseTimeoutId: number | undefined;\n  /** State object for mouse drag operations */\n  private mouseDragState: DragState | undefined;\n  /** Flag indicating if touch dragging is active */\n  private isTouchDragging: boolean = false;\n  /** Initial Y coordinate for touch drag */\n  private touchStartY: number = 0;\n  /** Initial top position for touch drag */\n  private touchStartTop: number = 0;\n  /** Last scroll position for delta calculations */\n  private lastScrollPosition: number = 0;\n\n  // ================================================================\n  // CONSTRUCTOR & INITIALIZATION\n  // ================================================================\n\n  /**\n   * Creates a new ResultsScrollBar instance\n   * @param containerElement - The container element where the scrollbar will be inserted\n   */\n  constructor(containerElement: HTMLElement) {\n    this.container = containerElement;\n\n    this._createScrollBarHTML();\n\n    const elements = this._getRequiredElements();\n    this.scrollBarElement = elements.scrollBar;\n    this.positionDisplay = elements.position;\n    this.totalDisplay = elements.total;\n\n    this._bindStoreEvents();\n    this._initializeDragFunctionality();\n  }\n\n  /**\n   * Creates the HTML structure for the scrollbar\n   */\n  private _createScrollBarHTML(): void {\n    this.container.insertAdjacentHTML(\n      'beforeend',\n      `\n      <div class=\"bar\">\n        <div class=\"indicator\">\n          <span class=\"position\">1</span>\n          <span class=\"total\"></span>\n        </div>\n      </div>\n      `\n    );\n  }\n\n  /**\n   * Gets and validates required DOM elements\n   */\n  private _getRequiredElements() {\n    const scrollBar = this.container.querySelector('.bar') as HTMLElement;\n    if (!scrollBar) {\n      throw new Error('ScrollBar element (.bar) not found');\n    }\n\n    const position = scrollBar.querySelector('.position') as HTMLElement;\n    const total = scrollBar.querySelector('.total') as HTMLElement;\n    if (!position || !total) {\n      throw new Error(\n        'Required indicator elements (.position, .total) not found'\n      );\n    }\n\n    return { scrollBar, position, total };\n  }\n\n  /**\n   * Binds this component to store events\n   */\n  private _bindStoreEvents(): void {\n    storeManager.bind('offset', this);\n    storeManager.bind('numberOfRecords', this);\n    storeManager.bind('rowCount', this);\n  }\n\n  /**\n   * Initializes drag functionality based on device capabilities\n   */\n  private _initializeDragFunctionality(): void {\n    if (window.matchMedia('(hover: hover) and (pointer: fine)').matches) {\n      this._initializeMouseDrag();\n    }\n    this._initializeTouchDrag();\n  }\n\n  // ================================================================\n  // PUBLIC API - Store Event Handlers\n  // ================================================================\n\n  /**\n   * Handles drag operation and updates the scroll position in store\n   * @param e - The original event (can be null for programmatic calls)\n   * @param ui - Object containing the drag position information\n   */\n  onDrag(e: Event | null, ui: DragEventUI): void {\n    const rowCount = storeManager.getData('rowCount') as number;\n    const numberOfRecords = storeManager.getData('numberOfRecords') as number;\n    const availableHeight =\n      rowCount * TR_HEIGHT - this.scrollBarElement.offsetHeight * 0;\n    const offsetRate = ui.position.top / availableHeight;\n\n    let offset = Math.ceil(offsetRate * numberOfRecords);\n    offset = offset < 0 ? 0 : offset;\n    offset =\n      offset + rowCount > numberOfRecords ? numberOfRecords - rowCount : offset;\n\n    storeManager.setData('offset', offset);\n    this._scheduleVisualStateRelease();\n  }\n\n  /**\n   * Updates the displayed position when the offset changes\n   * @param offset - The new offset value (0-based index)\n   */\n  offset(offset: number): void {\n    this.positionDisplay.textContent = (offset + 1).toString();\n    this._updateScrollBarAppearance();\n\n    // Maintain active state on touch devices\n    if (\n      window.matchMedia('(hover: none) and (pointer: coarse)').matches &&\n      this.container.classList.contains('-active')\n    ) {\n      return;\n    }\n  }\n\n  /**\n   * Updates the total number of records displayed\n   * @param numberOfRecords - The total count of records\n   */\n  numberOfRecords(numberOfRecords: number): void {\n    this.totalDisplay.textContent = numberOfRecords.toLocaleString();\n    this._updateScrollBarAppearance();\n  }\n\n  /**\n   * Handles row count changes and triggers a UI update\n   */\n  rowCount(): void {\n    this._updateScrollBarAppearance();\n  }\n\n  // ================================================================\n  // PUBLIC API - Results-specific methods\n  // ================================================================\n\n  /**\n   * Deactivate the scrollbar visual state\n   */\n  deactivate(): void {\n    this.container.classList.remove('-active');\n  }\n\n  /**\n   * Initialize scrollbar position\n   */\n  initializePosition(): void {\n    this.container.classList.add('-active');\n  }\n\n  /**\n   * Handle scroll with scrollbar feedback (for touch events)\n   * @param deltaY - Y delta value\n   * @param touchStartOffset - Starting offset when touch began\n   */\n  handleScrollWithFeedback(deltaY: number, touchStartOffset: number): void {\n    const newOffset = this._calculateTouchScrollOffset(\n      deltaY,\n      touchStartOffset\n    );\n    const boundedOffset = this._clampOffsetToValidRange(newOffset);\n\n    this.lastScrollPosition = boundedOffset * TR_HEIGHT;\n    storeManager.setData('offset', boundedOffset);\n    this.updateDirectly(boundedOffset);\n  }\n\n  /**\n   * Handle simple scroll (for wheel events)\n   * @param deltaY - Y delta value\n   */\n  handleScroll(deltaY: number): void {\n    const calculation = this._calculateScrollPosition(deltaY);\n\n    if (calculation.newScrollPosition === this.lastScrollPosition) {\n      return;\n    }\n\n    this.lastScrollPosition = calculation.newScrollPosition;\n    const offset = this._calculateOffsetFromScroll(this.lastScrollPosition);\n    storeManager.setData('offset', offset);\n  }\n\n  /**\n   * Update scrollbar directly with specific offset\n   * @param offset - Offset value\n   */\n  updateDirectly(offset: number): void {\n    const calculation = this._calculateScrollBarPosition(offset);\n    this._applyScrollBarStyles(this.scrollBarElement, calculation, offset);\n  }\n\n  // ================================================================\n  // PRIVATE - Visual Updates\n  // ================================================================\n\n  /**\n   * Updates the scrollbar appearance based on current data store values\n   */\n  private _updateScrollBarAppearance(): void {\n    const offset = storeManager.getData('offset') as number;\n    const rowCount = storeManager.getData('rowCount') as number;\n    const numberOfRecords = storeManager.getData('numberOfRecords') as number;\n\n    const totalHeight = numberOfRecords * TR_HEIGHT;\n    const offsetHeight = offset * TR_HEIGHT;\n    const displayHeight = rowCount * TR_HEIGHT;\n    const displayRate = displayHeight / totalHeight;\n\n    let barHeight = Math.ceil(displayHeight * displayRate);\n    barHeight =\n      barHeight < MIN_SCROLLBAR_HEIGHT ? MIN_SCROLLBAR_HEIGHT : barHeight;\n\n    const availableHeight = displayHeight - barHeight * 0;\n    const availableRate = availableHeight / totalHeight;\n    const barTop = Math.ceil(offsetHeight * availableRate);\n\n    this.scrollBarElement.style.height = `${barHeight}px`;\n    this.scrollBarElement.style.top = `${barTop}px`;\n    this._scheduleVisualStateRelease();\n\n    if (rowCount === 0 || numberOfRecords === rowCount) {\n      this.scrollBarElement.classList.add('-disabled');\n    } else {\n      this.scrollBarElement.classList.remove('-disabled');\n    }\n  }\n\n  /**\n   * Schedules delayed release of visual dragging state\n   */\n  private _scheduleVisualStateRelease(): void {\n    if (this.releaseTimeoutId !== undefined) {\n      window.clearTimeout(this.releaseTimeoutId);\n    }\n    this.releaseTimeoutId = window.setTimeout(\n      this._releaseVisualState.bind(this),\n      RELEASE_DURATION\n    );\n    this.container.classList.add('-dragging');\n  }\n\n  /**\n   * Removes the dragging visual state from the scrollbar\n   */\n  private _releaseVisualState(): void {\n    this.container.classList.remove('-dragging');\n  }\n\n  // ================================================================\n  // PRIVATE - Scroll Calculations (integrated from ScrollHandler)\n  // ================================================================\n\n  /**\n   * Calculate scroll position\n   */\n  private _calculateScrollPosition(deltaY: number): ScrollCalculation {\n    const numberOfRecords = storeManager.getData('numberOfRecords') as number;\n    const rowCount = storeManager.getData('rowCount') as number;\n\n    const totalHeight = numberOfRecords * TR_HEIGHT;\n    let availableScrollY = totalHeight - rowCount * TR_HEIGHT;\n    availableScrollY = Math.max(0, availableScrollY);\n\n    const newScrollPosition = this._clampScrollPosition(\n      this.lastScrollPosition + deltaY,\n      { min: 0, max: availableScrollY }\n    );\n\n    return {\n      totalHeight,\n      availableScrollY,\n      newScrollPosition,\n    };\n  }\n\n  /**\n   * Clamp scroll position within bounds\n   */\n  private _clampScrollPosition(value: number, bounds: ScrollBounds): number {\n    return Math.max(bounds.min, Math.min(value, bounds.max));\n  }\n\n  /**\n   * Calculate offset from scroll position\n   */\n  private _calculateOffsetFromScroll(scrollPosition: number): number {\n    return Math.ceil(scrollPosition / TR_HEIGHT);\n  }\n\n  /**\n   * Calculate touch scroll offset\n   */\n  private _calculateTouchScrollOffset(\n    deltaY: number,\n    touchStartOffset: number\n  ): number {\n    const rowCount = storeManager.getData('rowCount') as number;\n    const numberOfRecords = storeManager.getData('numberOfRecords') as number;\n\n    const availableHeight = rowCount * TR_HEIGHT;\n    const offsetRate = deltaY / availableHeight;\n\n    return Math.ceil(offsetRate * numberOfRecords) + touchStartOffset;\n  }\n\n  /**\n   * Clamp offset to valid range\n   */\n  private _clampOffsetToValidRange(offset: number): number {\n    const rowCount = storeManager.getData('rowCount') as number;\n    const numberOfRecords = storeManager.getData('numberOfRecords') as number;\n\n    const minOffset = 0;\n    const maxOffset = Math.max(0, numberOfRecords - rowCount);\n\n    return Math.max(minOffset, Math.min(offset, maxOffset));\n  }\n\n  /**\n   * Calculate scrollbar position and size\n   */\n  private _calculateScrollBarPosition(offset: number): ScrollBarCalculation {\n    const rowCount = storeManager.getData('rowCount') as number;\n    const numberOfRecords = storeManager.getData('numberOfRecords') as number;\n\n    const totalHeight = numberOfRecords * TR_HEIGHT;\n    const displayHeight = rowCount * TR_HEIGHT;\n    const displayRate = displayHeight / totalHeight;\n\n    let barHeight = Math.ceil(displayHeight * displayRate);\n    barHeight = Math.max(barHeight, MIN_SCROLLBAR_HEIGHT);\n\n    const availableHeight = displayHeight - barHeight;\n    const availableRate = availableHeight / totalHeight;\n    const barTop = Math.ceil(offset * TR_HEIGHT * availableRate);\n\n    return {\n      barHeight,\n      barTop,\n      displayRate,\n    };\n  }\n\n  /**\n   * Apply scrollbar styles\n   */\n  private _applyScrollBarStyles(\n    scrollBar: HTMLElement,\n    calculation: ScrollBarCalculation,\n    offset: number\n  ): void {\n    // Bar styles\n    scrollBar.style.height = `${calculation.barHeight}px`;\n    scrollBar.style.top = `${calculation.barTop}px`;\n\n    // Update position display\n    this._updatePositionDisplay(scrollBar, offset);\n\n    // Maintain active state\n    this.container.classList.add('-active');\n  }\n\n  /**\n   * Update position display\n   */\n  private _updatePositionDisplay(bar: HTMLElement, offset: number): void {\n    const position = bar.querySelector('.position') as HTMLElement;\n    if (position) {\n      position.textContent = String(offset + 1);\n    }\n  }\n\n  // ================================================================\n  // PRIVATE - Mouse Drag Implementation\n  // ================================================================\n\n  /**\n   * Initializes mouse drag functionality for desktop devices\n   */\n  private _initializeMouseDrag(): void {\n    this.mouseDragState = {\n      isDragging: false,\n      startY: 0,\n      startTop: 0,\n    };\n\n    this._setInitialCursorStyle();\n    this._attachMouseEventListeners();\n  }\n\n  /**\n   * Sets the initial cursor style for the scrollbar\n   */\n  private _setInitialCursorStyle(): void {\n    this.scrollBarElement.style.cursor = 'grab';\n  }\n\n  /**\n   * Attaches mouse event listeners for drag functionality\n   */\n  private _attachMouseEventListeners(): void {\n    this.scrollBarElement.addEventListener(\n      'mousedown',\n      this._onMouseDown.bind(this)\n    );\n    document.addEventListener('mousemove', this._onMouseMove.bind(this));\n    document.addEventListener('mouseup', this._onMouseUp.bind(this));\n  }\n\n  /**\n   * Handles mouse down events to start dragging\n   */\n  private _onMouseDown(e: MouseEvent): void {\n    if (!this.mouseDragState) return;\n\n    e.preventDefault();\n    this.mouseDragState.isDragging = true;\n    this.mouseDragState.startY = e.clientY;\n    this.mouseDragState.startTop =\n      parseInt(this.scrollBarElement.style.top) || 0;\n\n    this._setDraggingCursorStyle(true);\n  }\n\n  /**\n   * Handles mouse move events during dragging\n   */\n  private _onMouseMove(e: MouseEvent): void {\n    if (!this.mouseDragState?.isDragging) return;\n\n    e.preventDefault();\n\n    const deltaY = e.clientY - this.mouseDragState.startY;\n    const newTop = this.mouseDragState.startTop + deltaY;\n    const constrainedTop = this._constrainPositionWithinBounds(newTop);\n\n    this._setScrollBarPosition(constrainedTop);\n    this._triggerDragEvent(constrainedTop);\n  }\n\n  /**\n   * Handles mouse up events to end dragging\n   */\n  private _onMouseUp(): void {\n    if (!this.mouseDragState?.isDragging) return;\n\n    this.mouseDragState.isDragging = false;\n    this._setDraggingCursorStyle(false);\n    this._scheduleVisualStateRelease();\n  }\n\n  // ================================================================\n  // PRIVATE - Touch Drag Implementation\n  // ================================================================\n\n  /**\n   * Initializes touch event listeners for mobile device support\n   */\n  private _initializeTouchDrag(): void {\n    this.scrollBarElement.addEventListener(\n      'touchstart',\n      this._onTouchStart.bind(this),\n      {\n        passive: false,\n      }\n    );\n    this.scrollBarElement.addEventListener(\n      'touchmove',\n      this._onTouchMove.bind(this),\n      {\n        passive: false,\n      }\n    );\n    this.scrollBarElement.addEventListener(\n      'touchend',\n      this._onTouchEnd.bind(this),\n      {\n        passive: false,\n      }\n    );\n  }\n\n  /**\n   * Handles touch start events to begin touch dragging\n   */\n  private _onTouchStart(e: TouchEvent): void {\n    e.preventDefault();\n    this.isTouchDragging = true;\n    this.touchStartY = e.touches[0].clientY;\n    this.touchStartTop = parseInt(this.scrollBarElement.style.top) || 0;\n    this.container.classList.add('-dragging');\n    this.container.classList.add('-active');\n  }\n\n  /**\n   * Handles touch move events during touch dragging\n   */\n  private _onTouchMove(e: TouchEvent): void {\n    if (!this.isTouchDragging) return;\n    e.preventDefault();\n\n    const currentY = e.touches[0].clientY;\n    const deltaY = currentY - this.touchStartY;\n    const newTop = this.touchStartTop + deltaY;\n\n    this._triggerDragEvent(newTop);\n  }\n\n  /**\n   * Handles touch end events to finish touch dragging\n   */\n  private _onTouchEnd(e: TouchEvent): void {\n    if (!this.isTouchDragging) return;\n    e.preventDefault();\n    this.isTouchDragging = false;\n    this._scheduleVisualStateRelease();\n    this.container.classList.remove('-active');\n  }\n\n  // ================================================================\n  // PRIVATE - Helper Methods\n  // ================================================================\n\n  /**\n   * Constrains position within the container bounds\n   */\n  private _constrainPositionWithinBounds(newTop: number): number {\n    const maxTop =\n      this.container.offsetHeight - this.scrollBarElement.offsetHeight;\n    return Math.max(0, Math.min(newTop, maxTop));\n  }\n\n  /**\n   * Updates the visual position of the scrollbar\n   */\n  private _setScrollBarPosition(top: number): void {\n    this.scrollBarElement.style.top = `${top}px`;\n  }\n\n  /**\n   * Triggers the main drag event with position data\n   */\n  private _triggerDragEvent(top: number): void {\n    const mockEvent: DragEventUI = { position: { top } };\n    this.onDrag(null, mockEvent);\n  }\n\n  /**\n   * Sets the visual cursor style during dragging\n   */\n  private _setDraggingCursorStyle(isDragging: boolean): void {\n    this.scrollBarElement.style.cursor = isDragging ? 'grabbing' : 'grab';\n\n    if (isDragging) {\n      this.container.classList.add('-dragging');\n    }\n  }\n}\n","import { storeManager } from '../../store/StoreManager';\nimport ResultsScrollBar from './ResultsScrollBar';\nimport { COLUMNS } from '../../global.js';\nimport { keyDownEvent } from '../../utils/keyDownEvent.js';\nimport { ResultsViewTouchHandler } from './ResultsViewTouchHandler';\nimport { ResultsViewDataManager } from './ResultsViewDataManager';\n\n/** 検索メッセージの型定義 */\ntype SearchMessages = {\n  notice?: string;\n  warning?: string;\n  error?: string;\n};\n\n/** 検索ステータスの型定義 */\ntype SearchStatus = {\n  available: number;\n  filtered: number;\n};\n\n/** カラム設定の型定義 */\ntype ColumnConfig = {\n  id: string;\n  isUsed: boolean;\n};\n\n/**\n * 検索結果テーブルビューを管理するクラス\n * スクロール機能、タッチ操作、行の表示管理を行う\n */\nexport class ResultsView {\n  /** DOMセレクタ定数 */\n  private static readonly SELECTORS = {\n    STATUS: 'header.header > .left > .status',\n    MESSAGES: '#Messages',\n    TABLE_CONTAINER: '.tablecontainer',\n    TABLE_THEAD: '.tablecontainer > table.results-view > thead',\n    TABLE_TBODY: '.tablecontainer > table.results-view > tbody',\n    SCROLL_BAR: '.scroll-bar',\n  } as const;\n\n  /** ストアマネージャーのバインドキー */\n  private static readonly STORE_BINDINGS = [\n    'searchStatus',\n    'searchResults',\n    'columns',\n    'offset',\n    'karyotype',\n    'searchMessages',\n  ] as const;\n\n  /** ルート要素 */\n  private elm: HTMLElement;\n  /** タッチハンドラー */\n  private touchHandler: ResultsViewTouchHandler;\n  /** スクロールバー */\n  private scrollBar: ResultsScrollBar;\n  /** データマネージャー */\n  private dataManager: ResultsViewDataManager;\n  /** テーブルボディ要素 */\n  private tbody: HTMLElement;\n  /** テーブルコンテナ要素 */\n  private tablecontainer: HTMLElement;\n\n  /**\n   * ResultsViewのコンストラクタ\n   * @param elm - 結果表示用のルート要素\n   */\n  constructor(elm: HTMLElement) {\n    this.elm = elm;\n\n    // DOM要素の取得\n    const { status, messages, thead, tbody, tablecontainer } =\n      this._getDOMElements();\n    this.tbody = tbody;\n    this.tablecontainer = tablecontainer;\n\n    // ストアマネージャーのバインド\n    this._connectToStoreManager();\n\n    // UI要素の初期化\n    this._configureScrollBar();\n    this._initializeTableHeader(thead);\n    const stylesheet = this._createStylesheet();\n\n    // ハンドラーの初期化\n    this._initializeComponentHandlers(status, messages, stylesheet);\n\n    // 初期設定\n    this._configureInitialState();\n  }\n\n  // ========================================\n  // Public Methods\n  // ========================================\n\n  /**\n   * オフセットの変更時の処理\n   * @param offset - 新しいオフセット値\n   */\n  offset(offset: number): void {\n    this.dataManager.handleOffsetChange(offset);\n  }\n\n  /**\n   * 検索メッセージの表示\n   * @param messages - メッセージオブジェクト\n   */\n  searchMessages(messages: SearchMessages): void {\n    this.dataManager.handleSearchMessages(messages);\n  }\n\n  /**\n   * 検索ステータスの表示\n   * @param status - ステータスオブジェクト\n   */\n  searchStatus(status: SearchStatus): void {\n    this.dataManager.handleSearchStatus(status);\n  }\n\n  /**\n   * 検索結果の表示\n   * @param _results - 検索結果（未使用）\n   */\n  searchResults(_results: any): void {\n    this.dataManager.handleSearchResults(\n      _results,\n      this.touchHandler.isTouchEnabled,\n      this.touchHandler.setTouchElementsPointerEvents.bind(this.touchHandler)\n    );\n  }\n\n  /**\n   * カラムの表示／非表示を制御する\n   * @param columns - カラム設定の配列\n   */\n  columns(columns: ColumnConfig[]): void {\n    this.dataManager.handleColumnsChange(columns);\n  }\n\n  /**\n   * 表示サイズを更新する（外部からの呼び出し用）\n   */\n  updateDisplaySize(): void {\n    this.dataManager.updateDisplaySize(\n      this.touchHandler.isTouchEnabled,\n      this.touchHandler.setTouchElementsPointerEvents.bind(this.touchHandler)\n    );\n  }\n\n  /**\n   * 核型の変更時の処理\n   * @param _karyotype - 核型データ（未使用）\n   */\n  karyotype(_karyotype: any): void {\n    this.updateDisplaySize();\n  }\n\n  // ========================================\n  // Private Methods\n  // ========================================\n\n  /**\n   * DOM要素を取得する\n   */\n  private _getDOMElements() {\n    const status = this.elm.querySelector(\n      ResultsView.SELECTORS.STATUS\n    ) as HTMLElement;\n    const messages = this.elm.querySelector(\n      ResultsView.SELECTORS.MESSAGES\n    ) as HTMLElement;\n    const thead = this.elm.querySelector(\n      ResultsView.SELECTORS.TABLE_THEAD\n    ) as HTMLElement;\n    const tbody = this.elm.querySelector(\n      ResultsView.SELECTORS.TABLE_TBODY\n    ) as HTMLElement;\n    const tablecontainer = this.elm.querySelector(\n      ResultsView.SELECTORS.TABLE_CONTAINER\n    ) as HTMLElement;\n\n    return { status, messages, thead, tbody, tablecontainer };\n  }\n\n  /**\n   * ストアマネージャーに接続する\n   * データバインディングとキーボードイベントリスナーを設定\n   */\n  private _connectToStoreManager(): void {\n    ResultsView.STORE_BINDINGS.forEach((key) => {\n      storeManager.bind(key, this);\n    });\n    document.addEventListener('keydown', this._keydown.bind(this));\n  }\n\n  /**\n   * スクロールバーを設定する\n   * ホイールイベントの検出とスクロールバーの初期状態を構成\n   */\n  private _configureScrollBar(): void {\n    this.elm\n      .querySelector(ResultsView.SELECTORS.TABLE_CONTAINER)!\n      .insertAdjacentHTML('afterend', '<div class=\"scroll-bar\"></div>');\n    this.scrollBar = new ResultsScrollBar(\n      this.elm.querySelector(ResultsView.SELECTORS.SCROLL_BAR) as HTMLElement\n    );\n  }\n\n  /**\n   * テーブルヘッダーを初期化する\n   */\n  private _initializeTableHeader(thead: HTMLElement): void {\n    thead.innerHTML = `<tr>${COLUMNS.map(\n      (column) =>\n        `<th class=\"${column.id}\"><p data-tooltip-id=\"table-header-${column.id}\">${column.label}</p></th>`\n    ).join('')}</tr>`;\n  }\n\n  /**\n   * スタイルシートを作成する\n   */\n  private _createStylesheet(): HTMLStyleElement {\n    const stylesheet = document.createElement('style');\n    document.getElementsByTagName('head')[0].appendChild(stylesheet);\n    return stylesheet;\n  }\n\n  /**\n   * コンポーネントハンドラーを初期化する\n   * タッチ、スクロール、データ管理の各ハンドラーを作成し、イベントを設定\n   */\n  private _initializeComponentHandlers(\n    status: HTMLElement,\n    messages: HTMLElement,\n    stylesheet: HTMLStyleElement\n  ): void {\n    this.touchHandler = new ResultsViewTouchHandler(\n      this.elm,\n      this.tbody,\n      this.tablecontainer\n    );\n    this.dataManager = new ResultsViewDataManager(\n      this.elm,\n      status,\n      messages,\n      this.tbody,\n      stylesheet\n    );\n\n    // コールバック設定\n    this._configureEventHandlers();\n  }\n\n  /**\n   * 初期状態を設定する\n   * カラム設定、スクロール位置、タッチイベントの初期化\n   */\n  private _configureInitialState(): void {\n    // 初期化\n    this.dataManager.handleColumnsChange(storeManager.getData('columns'));\n\n    // 初期状態のpointer-events設定\n    this.touchHandler.setTouchElementsPointerEvents(\n      !this.touchHandler.isTouchEnabled\n    );\n  }\n\n  /**\n   * ホイールイベント名を取得する\n   */\n  private getWheelEventName(): string {\n    return 'onwheel' in document\n      ? 'wheel'\n      : 'onmousewheel' in document\n      ? 'mousewheel'\n      : 'DOMMouseScroll';\n  }\n\n  /**\n   * イベントハンドラーを設定する\n   */\n  private _configureEventHandlers(): void {\n    // PC用のホイールイベント\n    this.tbody.addEventListener(\n      this.getWheelEventName(),\n      this._scroll.bind(this)\n    );\n\n    // タッチハンドラーのコールバック設定\n    this.touchHandler.setScrollCallbacks({\n      onScrollStart: () => {\n        this.scrollBar.initializePosition();\n      },\n      onScroll: (deltaY, startOffset) => {\n        this.scrollBar.handleScrollWithFeedback(deltaY, startOffset);\n      },\n      onScrollEnd: () => {\n        this.scrollBar.deactivate();\n      },\n    });\n  }\n\n  /**\n   * スクロールイベントハンドラ\n   * @param e - ホイールイベント\n   */\n  private _scroll(e: WheelEvent): void {\n    e.stopPropagation();\n    // 縦方向にスクロールしていない場合スルー\n    if (e.deltaY === 0) return;\n\n    this.scrollBar.handleScroll(e.deltaY);\n  }\n\n  /**\n   * キーダウンイベントハンドラ\n   * @param e - キーボードイベント\n   */\n  private _keydown(e: KeyboardEvent): void {\n    if (storeManager.getData('selectedRow') === undefined) return;\n\n    if (keyDownEvent('selectedRow')) {\n      switch (e.key) {\n        case 'ArrowUp': // ↑\n          this.dataManager.shiftSelectedRow(-1);\n          break;\n        case 'ArrowDown': // ↓\n          this.dataManager.shiftSelectedRow(1);\n          break;\n        case 'Escape': // 選択解除\n          storeManager.setData('selectedRow', undefined);\n          break;\n      }\n    }\n  }\n}\n","import { storeManager } from '../../store/StoreManager';\nimport { ResultsRowView } from './ResultsRowView';\nimport { TR_HEIGHT, COMMON_FOOTER_HEIGHT } from '../../global.js';\n\n/** 検索メッセージの型定義 */\ntype SearchMessages = {\n  notice?: string;\n  warning?: string;\n  error?: string;\n};\n\n/** 検索ステータスの型定義 */\ntype SearchStatus = {\n  available: number;\n  filtered: number;\n};\n\n/** カラム設定の型定義 */\ntype ColumnConfig = {\n  id: string;\n  isUsed: boolean;\n};\n\n/** 表示される染色体領域の型定義 */\ntype DisplayingRegions = {\n  [chromosome: string]: {\n    start: number;\n    end: number;\n  };\n};\n\n/** レコードの型定義 */\ntype Record = {\n  chromosome: string;\n  start: number;\n  [key: string]: any;\n};\n\n/** 表示サイズ計算結果の型定義 */\ntype DisplaySizeCalculation = {\n  maxRowCount: number;\n  rowCount: number;\n  numberOfRecords: number;\n  offset: number;\n};\n\n/** 定数 */\nconst DISPLAY_CALCULATION_MARGIN = 2;\n\n/**\n * データ管理を行うクラス\n * 検索結果の表示、ストア連携、行の管理を行う\n */\nexport class ResultsViewDataManager {\n  /** ルート要素 */\n  private elm: HTMLElement;\n  /** 結果行のビューインスタンス配列 */\n  private rows: ResultsRowView[] = [];\n  /** ステータス表示要素 */\n  private status: HTMLElement;\n  /** メッセージ表示要素 */\n  private messages: HTMLElement;\n  /** テーブルボディ要素 */\n  private tbody: HTMLElement;\n  /** カラム表示制御用スタイルシート */\n  private stylesheet: HTMLStyleElement;\n\n  /**\n   * コンストラクタ\n   * @param elm - ルート要素\n   * @param status - ステータス表示要素\n   * @param messages - メッセージ表示要素\n   * @param tbody - テーブルボディ要素\n   * @param stylesheet - カラム表示制御用スタイルシート\n   */\n  constructor(\n    elm: HTMLElement,\n    status: HTMLElement,\n    messages: HTMLElement,\n    tbody: HTMLElement,\n    stylesheet: HTMLStyleElement\n  ) {\n    this.elm = elm;\n    this.status = status;\n    this.messages = messages;\n    this.tbody = tbody;\n    this.stylesheet = stylesheet;\n  }\n\n  // ========================================\n  // Public Methods\n  // ========================================\n\n  /**\n   * 結果行の配列を取得\n   * @returns 結果行の配列\n   */\n  get resultRows(): ResultsRowView[] {\n    return this.rows;\n  }\n\n  /**\n   * 表示サイズを更新する\n   * @param isTouchDevice - タッチデバイスかどうか\n   * @param setTouchElementsPointerEvents - pointer-events制御関数\n   */\n  updateDisplaySize(\n    isTouchDevice: boolean,\n    setTouchElementsPointerEvents: (enabled: boolean) => void\n  ): void {\n    if (this._shouldSkipUpdate()) {\n      return;\n    }\n\n    const calculation = this._calculateDisplaySize();\n    this._ensureRowsExist(calculation.rowCount);\n    this._adjustOffset(calculation);\n    this._updateRowsWithAnimation(isTouchDevice, setTouchElementsPointerEvents);\n  }\n\n  /**\n   * オフセットの変更時の処理\n   * @param offset - 新しいオフセット値\n   */\n  handleOffsetChange(offset: number): void {\n    if (this._shouldSkipOffsetUpdate()) {\n      return;\n    }\n\n    const displayingRegions = this._calculateDisplayingRegions();\n    if (Object.keys(displayingRegions).length > 0) {\n      storeManager.setData('displayingRegionsOnChromosome', displayingRegions);\n    }\n  }\n\n  /**\n   * 検索メッセージの表示\n   * @param messages - メッセージオブジェクト\n   */\n  handleSearchMessages(messages: SearchMessages): void {\n    this.messages.innerHTML = '';\n\n    this._appendMessageIfExists(messages.notice, 'notice');\n    this._appendMessageIfExists(messages.warning, 'warning');\n    this._appendMessageIfExists(messages.error, 'error');\n  }\n\n  /**\n   * 検索ステータスの表示\n   * @param status - ステータスオブジェクト\n   */\n  handleSearchStatus(status: SearchStatus): void {\n    const { available, filtered } = status;\n\n    this.status.innerHTML =\n      `The number of available variations is ${available.toLocaleString()} ` +\n      `out of <span class=\"bigger\">${filtered.toLocaleString()}</span>.`;\n\n    this._updateNotFoundState(filtered === 0);\n  }\n\n  /**\n   * 検索結果の表示\n   * @param _results - 検索結果（未使用）\n   * @param isTouchDevice - タッチデバイスかどうか\n   * @param setTouchElementsPointerEvents - pointer-events制御関数\n   */\n  handleSearchResults(\n    _results: any,\n    isTouchDevice: boolean,\n    setTouchElementsPointerEvents: (enabled: boolean) => void\n  ): void {\n    // 更新中フラグのチェックを1回だけに\n    const isUpdating = storeManager.getData('isStoreUpdating');\n    const isFetching = storeManager.getData('isFetching');\n\n    if (isUpdating || isFetching) {\n      requestAnimationFrame(() =>\n        this.handleSearchResults(\n          _results,\n          isTouchDevice,\n          setTouchElementsPointerEvents\n        )\n      );\n      return;\n    }\n\n    if (!this._validateData()) {\n      console.warn('データの検証に失敗しました');\n      return;\n    }\n\n    this.updateDisplaySize(isTouchDevice, setTouchElementsPointerEvents);\n  }\n\n  /**\n   * カラムの表示／非表示を制御する\n   * @param columns - カラム設定の配列\n   */\n  handleColumnsChange(columns: ColumnConfig[]): void {\n    this._clearExistingStyles();\n    this._applyColumnStyles(columns);\n  }\n\n  /**\n   * 選択行を移動する\n   * @param direction - 移動方向（+1で下、-1で上）\n   */\n  shiftSelectedRow(direction: number): void {\n    const state = this._getSelectionState();\n    const newIndex = this._calculateNewIndex(state, direction);\n    const adjustedOffset = this._adjustOffsetForSelection(\n      state,\n      newIndex,\n      direction\n    );\n\n    if (adjustedOffset !== state.offset) {\n      storeManager.setData('offset', adjustedOffset);\n    }\n\n    storeManager.setData('selectedRow', newIndex);\n  }\n\n  // ========================================\n  // Private Methods\n  // ========================================\n\n  /**\n   * 更新をスキップすべきかチェックする\n   */\n  private _shouldSkipUpdate(): boolean {\n    return storeManager.getData('isFetching');\n  }\n\n  /**\n   * 表示サイズの計算を行う\n   */\n  private _calculateDisplaySize(): DisplaySizeCalculation {\n    const availableHeight = this._calculateAvailableHeight();\n    const maxRowCount = Math.floor(availableHeight / TR_HEIGHT);\n    const numberOfRecords = storeManager.getData('numberOfRecords');\n    const offset = storeManager.getData('offset');\n    const rowCount = Math.min(maxRowCount, numberOfRecords);\n\n    storeManager.setData('rowCount', rowCount);\n\n    return {\n      maxRowCount,\n      rowCount,\n      numberOfRecords,\n      offset,\n    };\n  }\n\n  /**\n   * 利用可能な高さを計算する\n   */\n  private _calculateAvailableHeight(): number {\n    const karyotypeHeight = storeManager.getData('karyotype')?.height || 0;\n    return (\n      window.innerHeight -\n      this.tbody.getBoundingClientRect().top -\n      karyotypeHeight -\n      COMMON_FOOTER_HEIGHT -\n      DISPLAY_CALCULATION_MARGIN\n    );\n  }\n\n  /**\n   * 必要な行数が確保されているかチェックし、不足分を追加する\n   */\n  private _ensureRowsExist(requiredRowCount: number): void {\n    while (this.rows.length < requiredRowCount) {\n      const rowIndex = this.rows.length;\n      const rowView = new ResultsRowView(rowIndex);\n      this.rows.push(rowView);\n      this.tbody.appendChild(rowView.tr);\n    }\n  }\n\n  /**\n   * オフセット量を調整する\n   */\n  private _adjustOffset(calculation: DisplaySizeCalculation): void {\n    const { maxRowCount, numberOfRecords, offset } = calculation;\n    const visibleRecords = numberOfRecords - offset;\n    const emptySpace = maxRowCount - visibleRecords;\n\n    if (emptySpace > 0) {\n      const newOffset = this._calculateAdjustedOffset(offset, emptySpace);\n      storeManager.setData('offset', newOffset);\n    }\n  }\n\n  /**\n   * 調整されたオフセット値を計算する\n   */\n  private _calculateAdjustedOffset(\n    currentOffset: number,\n    emptySpace: number\n  ): number {\n    if (currentOffset >= emptySpace) {\n      // 上の隙間の方が大きい場合、差分をオフセットにセット\n      return currentOffset - emptySpace;\n    } else {\n      // 下の隙間が大きい場合、オフセット量をゼロに\n      return 0;\n    }\n  }\n\n  /**\n   * アニメーションフレーム内で行の更新を実行する\n   */\n  private _updateRowsWithAnimation(\n    isTouchDevice: boolean,\n    setTouchElementsPointerEvents: (enabled: boolean) => void\n  ): void {\n    requestAnimationFrame(() => {\n      this.rows.forEach((row) => row.updateTableRow());\n\n      if (isTouchDevice) {\n        setTouchElementsPointerEvents(false);\n      }\n    });\n  }\n\n  /**\n   * オフセット更新をスキップすべきかチェックする\n   */\n  private _shouldSkipOffsetUpdate(): boolean {\n    return (\n      storeManager.getData('isStoreUpdating') ||\n      storeManager.getData('isFetching')\n    );\n  }\n\n  /**\n   * 現在表示中の染色体領域を計算する\n   */\n  private _calculateDisplayingRegions(): DisplayingRegions {\n    const rowCount = storeManager.getData('rowCount');\n    const chromosomePositions: { [key: string]: number[] } = {};\n\n    // 各行のレコードから染色体位置を収集\n    for (let i = 0; i < rowCount; i++) {\n      const record = storeManager.getRecordByIndex(i) as Record;\n\n      if (this._isValidRecord(record)) {\n        (chromosomePositions[record.chromosome] ??= []).push(record.start);\n      }\n    }\n\n    return this._convertToRegions(chromosomePositions);\n  }\n\n  /**\n   * レコードが有効かチェックする\n   */\n  private _isValidRecord(record: any): record is Record {\n    return (\n      record &&\n      typeof record === 'object' &&\n      typeof record.chromosome === 'string' &&\n      typeof record.start === 'number'\n    );\n  }\n\n  /**\n   * 染色体位置の配列を領域オブジェクトに変換する\n   */\n  private _convertToRegions(chromosomePositions: {\n    [key: string]: number[];\n  }): DisplayingRegions {\n    const regions: DisplayingRegions = {};\n\n    for (const chromosome in chromosomePositions) {\n      const positions = chromosomePositions[chromosome];\n      regions[chromosome] = {\n        start: Math.min(...positions),\n        end: Math.max(...positions),\n      };\n    }\n\n    return regions;\n  }\n\n  /**\n   * メッセージが存在する場合にDOMに追加する\n   */\n  private _appendMessageIfExists(\n    message: string | undefined,\n    type: string\n  ): void {\n    if (message) {\n      this.messages.innerHTML += `<div class=\"message -${type}\">${message}</div>`;\n    }\n  }\n\n  /**\n   * 検索結果が見つからない状態のUI更新\n   */\n  private _updateNotFoundState(isNotFound: boolean): void {\n    if (isNotFound) {\n      this.elm.classList.add('-not-found');\n    } else {\n      this.elm.classList.remove('-not-found');\n    }\n  }\n\n  /**\n   * データの妥当性を検証する\n   * @returns 検証結果\n   */\n  private _validateData(): boolean {\n    const results = storeManager.getData('searchResults');\n    const numberOfRecords = storeManager.getData('numberOfRecords');\n\n    return (\n      Array.isArray(results) &&\n      typeof numberOfRecords === 'number' &&\n      numberOfRecords >= 0\n    );\n  }\n\n  /**\n   * 既存のスタイルをクリアする\n   */\n  private _clearExistingStyles(): void {\n    const sheet = this.stylesheet.sheet;\n    if (!sheet) return;\n\n    while (sheet.cssRules.length > 0) {\n      sheet.deleteRule(0);\n    }\n  }\n\n  /**\n   * カラムスタイルを適用する\n   */\n  private _applyColumnStyles(columns: ColumnConfig[]): void {\n    const sheet = this.stylesheet.sheet;\n    if (!sheet) return;\n\n    columns.forEach((column, index) => {\n      const displayValue = column.isUsed ? 'table-cell' : 'none';\n      const rule =\n        `.tablecontainer > table.results-view th.${column.id}, ` +\n        `.tablecontainer > table.results-view td.${column.id} { ` +\n        `display: ${displayValue} }`;\n\n      sheet.insertRule(rule, index);\n    });\n  }\n\n  /**\n   * 現在の選択状態を取得する\n   */\n  private _getSelectionState() {\n    return {\n      currentIndex: storeManager.getData('selectedRow'),\n      rowCount: storeManager.getData('rowCount'),\n      offset: storeManager.getData('offset'),\n      numberOfRecords: storeManager.getData('numberOfRecords'),\n    };\n  }\n\n  /**\n   * 新しい選択インデックスを計算する\n   */\n  private _calculateNewIndex(state: any, direction: number): number {\n    const newIndex = state.currentIndex + direction;\n    return Math.max(0, Math.min(newIndex, state.rowCount - 1));\n  }\n\n  /**\n   * 選択に応じてオフセットを調整する\n   */\n  private _adjustOffsetForSelection(\n    state: any,\n    newIndex: number,\n    direction: number\n  ): number {\n    let { offset } = state;\n\n    if (direction < 0 && newIndex === 0 && offset > 0) {\n      // 上にスクロール\n      offset--;\n    } else if (direction > 0 && newIndex === state.rowCount - 1) {\n      // 下にスクロール（範囲内の場合のみ）\n      if (offset + newIndex < state.numberOfRecords - 1) {\n        offset++;\n      }\n    }\n\n    return offset;\n  }\n}\n","/** タッチ対象要素のセレクタ定数 */\nconst TOUCH_ELEMENTS_SELECTOR =\n  '.tablecontainer > table > tbody > tr, .tablecontainer > table > tbody > td, .tablecontainer > table > tbody > td *';\n/** スクロールコールバックの型定義 */\ninterface ScrollCallbacks {\n  onScrollStart?: () => void;\n  onScroll?: (deltaY: number, startOffset: number) => void;\n  onScrollEnd?: () => void;\n}\n\n/** タッチ状態の型定義 */\ninterface TouchState {\n  startY: number;\n  startX: number;\n  startTime: number;\n  lastY: number;\n  lastX: number;\n  distance: number;\n  duration: number;\n  isScrolling: boolean;\n  startOffset: number;\n}\n\n/** タッチ判定結果の型定義 */\ninterface TouchGesture {\n  isTap: boolean;\n  isScroll: boolean;\n  deltaY: number;\n  deltaX: number;\n}\n\n/** タッチ設定の定数 */\nconst TOUCH_CONFIG = {\n  /** スクロール感度の調整 */\n  SCROLL_SENSITIVITY: 0.1,\n  /** スクロール判定の閾値（ピクセル） */\n  SCROLL_THRESHOLD: 10,\n  /** タップ判定の閾値（ミリ秒） */\n  TAP_THRESHOLD: 300,\n} as const;\n\n/**\n * タッチイベント処理を管理するクラス\n * タッチ操作の検出、タップとスクロールの判定、pointer-events制御を行う\n */\nexport class ResultsViewTouchHandler {\n  /** ルート要素 */\n  private elm: HTMLElement;\n  /** テーブルボディ要素 */\n  private tbody: HTMLElement;\n  /** テーブルコンテナ要素 */\n  private tablecontainer: HTMLElement;\n\n  /** タッチ状態 */\n  private touchState: TouchState;\n  /** タッチデバイス判定フラグ */\n  private isTouchDevice: boolean = false;\n\n  /** スクロールコールバック */\n  private scrollCallbacks: ScrollCallbacks = {};\n\n  /**\n   * コンストラクタ\n   * @param elm - ルート要素\n   * @param tbody - テーブルボディ要素\n   * @param tablecontainer - テーブルコンテナ要素\n   */\n  constructor(\n    elm: HTMLElement,\n    tbody: HTMLElement,\n    tablecontainer: HTMLElement\n  ) {\n    this.elm = elm;\n    this.tbody = tbody;\n    this.tablecontainer = tablecontainer;\n\n    this.initializeTouchState();\n    this.detectTouchDevice();\n    this.setupTouchEvents();\n  }\n\n  // ========================================\n  // Public Methods\n  // ========================================\n\n  /**\n   * スクロールコールバックを設定\n   * @param callbacks - コールバック関数オブジェクト\n   */\n  setScrollCallbacks(callbacks: ScrollCallbacks): void {\n    this.scrollCallbacks = { ...callbacks };\n  }\n\n  /**\n   * タッチ開始時のオフセットを設定\n   * @param offset - オフセット値\n   */\n  setTouchStartOffset(offset: number): void {\n    this.touchState.startOffset = offset;\n  }\n\n  /**\n   * タッチデバイスかどうかを返す\n   * @returns タッチデバイスかどうか\n   */\n  get isTouchEnabled(): boolean {\n    return this.isTouchDevice;\n  }\n\n  /**\n   * タッチ要素のpointer-eventsを制御する\n   * @param enabled - pointer-eventsを有効にするかどうか\n   */\n  setTouchElementsPointerEvents(enabled: boolean): void {\n    this._updateTouchElementsPointerEvents(enabled);\n    this._ensureLinkElementsEnabled();\n  }\n\n  // ========================================\n  // Private Methods\n  // ========================================\n\n  /**\n   * タッチ状態を初期化する\n   */\n  private initializeTouchState(): void {\n    this.touchState = {\n      startY: 0,\n      startX: 0,\n      startTime: 0,\n      lastY: 0,\n      lastX: 0,\n      distance: 0,\n      duration: 0,\n      isScrolling: false,\n      startOffset: 0,\n    };\n  }\n\n  /**\n   * タッチデバイスを検出する\n   */\n  private detectTouchDevice(): void {\n    this.isTouchDevice =\n      'ontouchstart' in window || navigator.maxTouchPoints > 0;\n  }\n\n  /**\n   * タッチイベントを設定する\n   */\n  private setupTouchEvents(): void {\n    const touchElements = [this.tablecontainer, this.tbody];\n\n    touchElements.forEach((element) => {\n      element.addEventListener(\n        'touchstart',\n        this._handleTouchStart.bind(this),\n        {\n          passive: false,\n          capture: true,\n        }\n      );\n      element.addEventListener('touchmove', this._handleTouchMove.bind(this), {\n        passive: false,\n        capture: true,\n      });\n      element.addEventListener('touchend', this._handleTouchEnd.bind(this), {\n        passive: false,\n        capture: true,\n      });\n    });\n\n    this.tbody.addEventListener(\n      'tapCompleted',\n      this._handleTapCompleted.bind(this)\n    );\n  }\n\n  /**\n   * タッチ要素のpointer-eventsを更新する\n   */\n  private _updateTouchElementsPointerEvents(enabled: boolean): void {\n    const touchElements = this.elm.querySelectorAll(\n      TOUCH_ELEMENTS_SELECTOR\n    ) as NodeListOf<HTMLElement>;\n\n    touchElements.forEach((element) => {\n      element.style.pointerEvents = enabled ? 'auto' : 'none';\n    });\n  }\n\n  /**\n   * リンク要素を常に有効にする\n   */\n  private _ensureLinkElementsEnabled(): void {\n    const linkElements = this.elm.querySelectorAll(\n      '.tablecontainer > table > tbody > td a'\n    ) as NodeListOf<HTMLElement>;\n\n    linkElements.forEach((element) => {\n      element.style.pointerEvents = 'auto';\n    });\n  }\n\n  /**\n   * タッチが有効な範囲内かチェックする\n   */\n  private _isValidTouchTarget(e: TouchEvent): boolean {\n    return (\n      (this.elm.contains(e.target as Node) ||\n        this.elm.contains(e.currentTarget as Node)) &&\n      (e.currentTarget === this.tablecontainer ||\n        e.currentTarget === this.tbody)\n    );\n  }\n\n  /**\n   * タッチ状態をリセットする\n   */\n  private _resetTouchState(): void {\n    this.touchState.isScrolling = false;\n    this.touchState.distance = 0;\n    this.touchState.startY = 0;\n    this.touchState.startX = 0;\n    this.touchState.lastY = 0;\n    this.touchState.lastX = 0;\n    this.touchState.startTime = 0;\n    this.touchState.duration = 0;\n  }\n\n  /**\n   * タッチジェスチャーを判定する\n   */\n  private _analyzeTouchGesture(\n    currentY: number,\n    currentX: number\n  ): TouchGesture {\n    const deltaY = currentY - this.touchState.startY;\n    const deltaX = currentX - this.touchState.startX;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    const isVerticalScroll = Math.abs(deltaY) > Math.abs(deltaX);\n    const exceedsThreshold = distance > TOUCH_CONFIG.SCROLL_THRESHOLD;\n    const isScroll = isVerticalScroll && exceedsThreshold;\n\n    const duration = Date.now() - this.touchState.startTime;\n    const isTap =\n      distance < TOUCH_CONFIG.SCROLL_THRESHOLD &&\n      duration < TOUCH_CONFIG.TAP_THRESHOLD;\n\n    return {\n      isTap,\n      isScroll,\n      deltaY,\n      deltaX,\n    };\n  }\n\n  /**\n   * タッチ開始イベントを処理する\n   * @param e - タッチイベント\n   */\n  private _handleTouchStart(e: TouchEvent): void {\n    if (!this._isValidTouchTarget(e) || e.touches.length !== 1) {\n      return;\n    }\n\n    this._resetTouchState();\n\n    const touch = e.touches[0];\n    this.touchState.startY = touch.clientY;\n    this.touchState.startX = touch.clientX;\n    this.touchState.lastY = touch.clientY;\n    this.touchState.lastX = touch.clientX;\n    this.touchState.startTime = Date.now();\n\n    this.setTouchElementsPointerEvents(true);\n  }\n\n  /**\n   * タッチ移動イベントを処理する\n   * @param e - タッチイベント\n   */\n  private _handleTouchMove(e: TouchEvent): void {\n    if (!this._isValidTouchTarget(e) || e.touches.length !== 1) {\n      return;\n    }\n\n    const touch = e.touches[0];\n    const gesture = this._analyzeTouchGesture(touch.clientY, touch.clientX);\n\n    this.touchState.distance = Math.sqrt(\n      gesture.deltaX * gesture.deltaX + gesture.deltaY * gesture.deltaY\n    );\n\n    if (gesture.isScroll) {\n      if (!this.touchState.isScrolling) {\n        this.touchState.isScrolling = true;\n        this.setTouchElementsPointerEvents(false);\n        this.scrollCallbacks.onScrollStart?.();\n      }\n\n      this.touchState.lastY = touch.clientY;\n      this.scrollCallbacks.onScroll?.(\n        -gesture.deltaY * TOUCH_CONFIG.SCROLL_SENSITIVITY,\n        this.touchState.startOffset\n      );\n    }\n  }\n\n  /**\n   * タッチ終了イベントを処理する\n   * @param e - タッチイベント\n   */\n  private _handleTouchEnd(e: TouchEvent): void {\n    this.touchState.duration = Date.now() - this.touchState.startTime;\n\n    const isTap =\n      this.touchState.distance < TOUCH_CONFIG.SCROLL_THRESHOLD &&\n      this.touchState.duration < TOUCH_CONFIG.TAP_THRESHOLD;\n\n    if (isTap) {\n      this.setTouchElementsPointerEvents(true);\n    } else if (this.touchState.isScrolling) {\n      this.touchState.isScrolling = false;\n      this.setTouchElementsPointerEvents(false);\n      this.scrollCallbacks.onScrollEnd?.();\n    } else {\n      this.setTouchElementsPointerEvents(true);\n    }\n\n    this._resetTouchState();\n  }\n\n  /**\n   * タップ処理完了時の処理\n   * @param e - カスタムイベント\n   */\n  private _handleTapCompleted(e: Event): void {\n    if (!this.isTouchDevice) return;\n    this.setTouchElementsPointerEvents(false);\n  }\n}\n","import { LitElement, html, nothing, TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport './FrequencyCountValueView'; // for embedding\nimport './ConditionPathogenicityPredictionSearch/PredictionValueView'; // for embedding\nimport Style from '../../stylesheets/object/component/condition-item-value-view.scss';\n\n@customElement('condition-item-value-view')\nclass ConditionItemValueView extends LitElement {\n  static styles = [Style];\n\n  @property({ type: String }) label: string = '';\n  @property({ type: String }) conditionType: string = '';\n  @property({ type: String }) value: string = '';\n  @property({ type: Boolean }) deleteButton: boolean = false;\n\n  private _handleDelete(e: Event): void {\n    e.stopPropagation();\n    this.dispatchEvent(\n      new CustomEvent('delete-condition-item', {\n        detail: this.value,\n        bubbles: true,\n      })\n    );\n  }\n\n  // Render the UI as a function of component state\n  render(): TemplateResult {\n    if (this.dataset) {\n      this.dataset.conditionType = this.conditionType;\n      this.dataset.value = this.value;\n    }\n\n    let option: TemplateResult | string = '';\n    if (this.conditionType === 'dataset' || this.conditionType === 'genotype') {\n      option = html`<frequency-count-value-view\n        data-dataset=\"${this.value}\"\n      ></frequency-count-value-view>`;\n    }\n    if (this.conditionType === 'pathogenicity_prediction') {\n      option = html` <prediction-value-view\n        data-dataset=${this.value}\n      ></prediction-value-view>`;\n    }\n    return html`\n      <div class=\"condition-item-value-container\">\n        <span\n          class=\"inner\"\n          data-condition-type=\"${this.conditionType}\"\n          data-value=${this.value}\n        >\n          ${this.label}${this.deleteButton\n            ? html`<button\n                class=\"delete\"\n                part=\"delete-tag-btn\"\n                @click=${this._handleDelete}\n              ></button>`\n            : nothing}</span\n        >\n        ${option}\n      </div>\n    `;\n  }\n}\n\nexport default ConditionItemValueView;\n","import { LitElement, html, TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport Style from '../../stylesheets/object/component/frequency-count-value-view.scss';\n\n/**\n * Display mode constants definition\n */\nconst MODE = {\n  frequency: 'frequency',\n  count: 'count',\n  alt_alt: 'aac',\n  alt_ref: 'arc',\n  hemi_alt: 'hac',\n} as const;\n\ntype ModeType = (typeof MODE)[keyof typeof MODE];\n\n/**\n * Web component for visualizing frequency count values\n */\n@customElement('frequency-count-value-view')\nexport class FrequencyCountValueView extends LitElement {\n  static styles = [Style];\n\n  /** Type of condition for query building ('dataset' or 'genotype') */\n  @property({ type: String }) conditionType: 'dataset' | 'genotype';\n\n  /** Display mode */\n  @property({ type: String }) mode: ModeType = MODE.frequency;\n\n  /** Range start value */\n  @property({ type: Number }) from: number = 0;\n\n  /** Range end value */\n  @property({ type: Number }) to: number = 1;\n\n  /** Invert mode flag */\n  @property({ type: String }) invert: string = '0';\n\n  /** Filtering status */\n  @property({ type: Boolean }) filtered: boolean = false;\n\n  /** Reference to bar elements */\n  private _bars: NodeListOf<HTMLElement> | undefined;\n\n  /**\n   * Generates the HTML template for the component\n   * @returns TemplateResult for rendering\n   */\n  render(): TemplateResult {\n    return html`\n      <div class=\"frequencygraph\">\n        <div class=\"bar -bar1\"></div>\n        <div class=\"bar -bar2\"></div>\n      </div>\n      <div class=\"range\">\n        <span class=\"from\">${this.from}</span> ~\n        <span class=\"to\">${this.to}</span>\n      </div>\n      <p class=\"filtered\" ?hidden=${!this.filtered}>\n        Exclude filtered out variants\n      </p>\n    `;\n  }\n\n  /**\n   * Initialization process after first rendering\n   * Creates scale elements and gets references to bar elements\n   */\n  firstUpdated(): void {\n    this._bars = this.shadowRoot!.querySelectorAll('.bar');\n    this._createScaleElements();\n  }\n\n  /**\n   * Creates scale elements and adds them to the frequency graph\n   * @private\n   */\n  private _createScaleElements(): void {\n    const frequencyGraph = this.shadowRoot!.querySelector(\n      '.frequencygraph'\n    ) as HTMLElement;\n    const scaleTemplate = document.createElement('div');\n    scaleTemplate.classList.add('scale');\n\n    for (let i = 0; i <= 10; i++) {\n      const scale = scaleTemplate.cloneNode() as HTMLElement;\n      scale.style.left = `calc(${i * 10}% - ${i / 10}px)`;\n      frequencyGraph.appendChild(scale);\n    }\n  }\n\n  /**\n   * Sets component values and updates display\n   * @param conditionType - Type of condition ('dataset' or 'genotype')\n   * @param mode - Display mode\n   * @param from - Range start value\n   * @param to - Range end value\n   * @param invert - Invert mode flag\n   * @param filtered - Filtering status\n   */\n  setValues(\n    conditionType: 'dataset' | 'genotype',\n    mode: ModeType,\n    from: number,\n    to: number,\n    invert: string,\n    filtered: boolean\n  ): void {\n    this.conditionType = conditionType;\n    this.mode = mode;\n    this.from = from;\n    this.to = to;\n    this.invert = invert;\n    this.filtered = filtered;\n    this.dataset.mode = mode;\n\n    this._updateBarVisualization();\n    this.requestUpdate();\n  }\n\n  /**\n   * Updates bar visualization\n   * @private\n   */\n  private _updateBarVisualization(): void {\n    if (this.mode !== MODE.frequency || !this._bars) return;\n\n    if (this.invert === '0') {\n      this._setNormalBarMode();\n    } else {\n      this._setInvertBarMode();\n    }\n  }\n\n  /**\n   * Sets normal bar display mode\n   * @private\n   */\n  private _setNormalBarMode(): void {\n    if (!this._bars) return;\n\n    this._bars[0].style.left = `${this.from * 100}%`;\n    this._bars[0].style.width = `${(this.to - this.from) * 100}%`;\n    this._bars[1].style.width = '0%';\n  }\n\n  /**\n   * Sets inverted bar display mode\n   * @private\n   */\n  private _setInvertBarMode(): void {\n    if (!this._bars) return;\n\n    this._bars[0].style.left = '0%';\n    this._bars[0].style.width = `${this.from * 100}%`;\n    this._bars[1].style.left = `${this.to * 100}%`;\n    this._bars[1].style.width = `${(1 - this.to) * 100}%`;\n  }\n\n  /**\n   * Generates query value object based on current component state\n   * @returns Query parameter object for filtering\n   */\n  get queryValue() {\n    const dataset = { name: this.dataset.dataset };\n\n    if (this.conditionType === 'dataset') {\n      return this._buildDatasetQuery(dataset);\n    } else {\n      return this._buildGenotypeQuery(dataset);\n    }\n  }\n\n  /**\n   * Builds query object for dataset condition type\n   * @param dataset - Dataset information object\n   * @returns Query object for dataset filtering\n   * @private\n   */\n  private _buildDatasetQuery(dataset: { name: string }) {\n    if (this.invert === '1') {\n      return this._buildInvertedDatasetQuery(dataset);\n    } else {\n      return this._buildNormalDatasetQuery(dataset);\n    }\n  }\n\n  /**\n   * Builds inverted query object for dataset condition\n   * @param dataset - Dataset information object\n   * @returns Inverted query object with OR conditions\n   * @private\n   */\n  private _buildInvertedDatasetQuery(dataset: { name: string }) {\n    return {\n      or: [\n        {\n          frequency: {\n            dataset,\n            frequency: {\n              gte: 0,\n              lte: this.from,\n            },\n            filtered: this.filtered,\n          },\n        },\n        {\n          frequency: {\n            dataset,\n            frequency: {\n              gte: this.to,\n              lte: 1,\n            },\n            filtered: this.filtered,\n          },\n        },\n      ],\n    };\n  }\n\n  /**\n   * Builds normal query object for dataset condition\n   * @param dataset - Dataset information object\n   * @returns Normal query object with range values\n   * @private\n   */\n  private _buildNormalDatasetQuery(dataset: { name: string }) {\n    const values = this._buildRangeValues();\n    return {\n      frequency: {\n        dataset,\n        [this.mode]: values,\n        filtered: this.filtered,\n      },\n    };\n  }\n\n  /**\n   * Builds query object for genotype condition type\n   * @param dataset - Dataset information object\n   * @returns Query object for genotype filtering\n   * @private\n   */\n  private _buildGenotypeQuery(dataset: { name: string }) {\n    const values = this._buildRangeValues();\n    return {\n      frequency: {\n        dataset,\n        genotype: {\n          key: MODE[this.mode],\n          count: values,\n        },\n        filtered: this.filtered,\n      },\n    };\n  }\n\n  /**\n   * Builds range values object from current from/to properties\n   * @returns Object containing gte and/or lte values\n   * @private\n   */\n  private _buildRangeValues(): Record<string, number> {\n    const values: Record<string, number> = {};\n    if (String(this.from) !== '') values.gte = this.from;\n    if (String(this.to) !== '') values.lte = this.to;\n    return values;\n  }\n}\n\nexport default FrequencyCountValueView;\n","import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { ref, createRef, Ref } from 'lit/directives/ref.js';\nimport Style from '../../../stylesheets/object/component/search-field.scss';\n\n/** Class to create a only search field */\n@customElement('search-field')\nclass SearchField extends LitElement {\n  static styles = [Style];\n  _inputRef: Ref<HTMLInputElement> = createRef();\n\n  /**\n   * @description Creates a styled search field\n   * All events of the input field are dispatched on the element itself.\n   * Can be attached with JS like this:\n   * ```js\n   * const searchField = new SearchField('Search', document.getElementById('search'));\n   * ```\n   *\n   * Or with Lit like this:\n   * ```js\n   * render() {\n   *   html`\n   *     <search-field-only placeholder=\"Search\"></search-field-only>\n   *   `\n   * }\n   * ```\n   */\n\n  /**\n   * @param {HTMLDivElement} element - HTML element to which the search field is attached. (for vairant id)\n   * @param {string} placeholder - Placeholder text */\n  constructor(element?: HTMLDivElement, placeholder?: string) {\n    super();\n    this.placeholder = placeholder || '';\n\n    if (element) {\n      element.appendChild(this);\n    }\n  }\n\n  @property({ type: String }) placeholder: string = '';\n  @property({ type: String }) value: string = '';\n\n  /** Put a value into input when loaded */\n  connectedCallback(): void {\n    super.connectedCallback();\n    window.addEventListener('load', this._handleLoad);\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    window.removeEventListener('load', this._handleLoad);\n  }\n\n  /** update input value */\n  willUpdate(changed: Map<string | number | symbol, unknown>): void {\n    if (changed.has('value') && this._inputRef.value) {\n      this._inputRef.value.value = this.value;\n    }\n  }\n\n  /** If url has a value, put the value in input (simple search)\n   * @private */\n  private _handleLoad = (): void => {\n    if (this._inputRef.value) {\n      this._inputRef.value.value = this.value;\n    }\n  };\n\n  /**\n   * See {@link SearchFieldtWithSuggestions _handleInput}\n   * @private\n   * @param {Event} e */\n  private _handleInput(e: Event): void {\n    e.preventDefault();\n    const target = e.target as HTMLInputElement;\n    this.value = target.value;\n    this.dispatchEvent(\n      new CustomEvent('input-change', {\n        detail: this.value,\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  /** Control the normal behavior when pressing enter\n   * @private\n   * @param {KeyboardEvent} e */\n  private _handleForm(e: KeyboardEvent): void {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  }\n\n  /** Fires an event when the cross button is pressed\n   * @private */\n  private _handleResetClick(): void {\n    if (this._inputRef.value) {\n      this._inputRef.value.value = '';\n      this.value = '';\n    }\n    this.dispatchEvent(new CustomEvent('input-reset'));\n  }\n\n  render() {\n    return html` <div class=\"search-field-view\">\n      <div class=\"fieldcontainer\">\n        <div class=\"field\">\n          <form class=\"input-form\" @keydown=${this._handleForm}>\n            <input\n              class=\"searchfield\"\n              part=\"input-field\"\n              ${ref(this._inputRef)}\n              type=\"text\"\n              .placeholder=${this.placeholder}\n              @input=${this._handleInput}\n              required\n            />\n            <button\n              class=\"delete\"\n              type=\"reset\"\n              @click=${this._handleResetClick}\n            ></button>\n          </form>\n        </div>\n      </div>\n    </div>`;\n  }\n}\n\nexport default SearchField;\n","import { LitElement, html, CSSResultGroup, TemplateResult } from 'lit';\nimport { customElement } from 'lit/decorators.js';\n\nimport Styles from '../../../../stylesheets/object/component/simple-search-button.scss';\n\n/** SearchButton - 検索ボタンコンポーネント */\n@customElement('search-button')\nexport default class SearchButton extends LitElement {\n  static styles: CSSResultGroup = [Styles];\n\n  constructor() {\n    super();\n  }\n\n  render(): TemplateResult {\n    return html`<button class=\"btn\"></button>`;\n  }\n}\n","import { API_URL } from '../../../global.js';\n\n/** SimpleSearchConstants - SimpleSearchView関連の定数定義 */\n\n/** グローバル変数の型宣言 */\ndeclare const TOGOVAR_FRONTEND_REFERENCE: 'GRCh37' | 'GRCh38' | string;\n\n/** 検索例のアイテム型 */\nexport interface ExampleItem {\n  key: string;\n  value: string;\n}\n\n/** 検索フィールド設定の型 */\nexport interface SearchFieldConfig {\n  placeholder: string;\n  suggestAPIURL: string;\n  suggestAPIQueryParam: string;\n  options: {\n    valueMappings: {\n      valueKey: string;\n      labelKey: string;\n      aliasOfKey: string;\n    };\n    titleMappings: {\n      gene: string;\n      disease: string;\n    };\n  };\n}\n\n/** 検索例のデータ */\nexport const EXAMPLES: ExampleItem[] = (() => {\n  switch (TOGOVAR_FRONTEND_REFERENCE) {\n    case 'GRCh37':\n      return [\n        {\n          key: 'Disease',\n          value: 'Breast-ovarian cancer, familial 2',\n        },\n        {\n          key: 'Gene',\n          value: 'ALDH2',\n        },\n        {\n          key: 'refSNP',\n          value: 'rs114202595',\n        },\n        {\n          key: 'TogoVar',\n          value: 'tgv56616325',\n        },\n        {\n          key: 'Position(GRCh37/hg19)',\n          value: '16:48258198',\n        },\n        {\n          key: 'Region(GRCh37/hg19)',\n          value: '10:73270743-73376976',\n        },\n        {\n          key: 'HGVSc',\n          value: 'NM_000690:c.1510G>A',\n        },\n        {\n          key: 'HGVSp',\n          value: 'ALDH2:p.Glu504Lys',\n        },\n      ];\n    case 'GRCh38':\n      return [\n        {\n          key: 'Disease',\n          value: 'Breast-ovarian cancer, familial 2',\n        },\n        {\n          key: 'Gene',\n          value: 'ALDH2',\n        },\n        {\n          key: 'refSNP',\n          value: 'rs114202595',\n        },\n        {\n          key: 'TogoVar',\n          value: 'tgv56616325',\n        },\n        {\n          key: 'Position(GRCh38)',\n          value: '16:48224287',\n        },\n        {\n          key: 'Region(GRCh38)',\n          value: '10:71510986-71617219',\n        },\n        {\n          key: 'HGVSc',\n          value: 'NM_000690:c.1510G>A',\n        },\n        {\n          key: 'HGVSp',\n          value: 'ALDH2:p.Glu504Lys',\n        },\n      ];\n    default:\n      return [];\n  }\n})();\n\n/** 検索フィールドの設定 */\nexport const SEARCH_FIELD_CONFIG: SearchFieldConfig = {\n  placeholder: 'Search for disease or gene symbol or rs...',\n  suggestAPIURL: `${API_URL}/suggest`,\n  suggestAPIQueryParam: 'term',\n  options: {\n    valueMappings: {\n      valueKey: 'term',\n      labelKey: 'term',\n      aliasOfKey: 'alias_of',\n    },\n    titleMappings: {\n      gene: 'Gene names',\n      disease: 'Disease names',\n    },\n  },\n};\n\n/** 染色体パターンの正規表現 */\nexport const CHROMOSOME_PATTERN: RegExp = /([1-9]|1[0-9]|2[0-2]|X|Y|M|MT):\\d+/i;\n","import { setSimpleSearchCondition } from '../../../store/searchManager';\nimport { storeManager } from '../../../store/StoreManager';\nimport { CHROMOSOME_PATTERN } from './SimpleSearchConstants';\nimport {\n  SimpleSearchHost,\n  SuggestionItem,\n  ExampleItem,\n} from './SimpleSearchTypes';\n\n/**\n * SimpleSearchController - SimpleSearchViewのビジネスロジックを担当\n */\nexport class SimpleSearchController {\n  private host: SimpleSearchHost;\n\n  constructor(host: SimpleSearchHost) {\n    this.host = host;\n  }\n\n  /**\n   * 検索処理\n   * 染色体パターンの正規化も行う\n   * @param term - 検索語\n   */\n  search(term: string): void {\n    if (CHROMOSOME_PATTERN.test(term)) {\n      term = term.replace(/Chr|ch|Cr|cs/i, '').toUpperCase();\n\n      if (term.includes('M:')) {\n        term = term.replace('M:', 'MT:');\n      }\n    }\n\n    setSimpleSearchCondition('term', term);\n  }\n\n  /**\n   * 入力項目の更新\n   * @param term - 入力値\n   */\n  updateTerm(term: string): void {\n    this.host._term = term;\n\n    // 入力されたテキストを検索条件に反映する（ただし検索は実行しない）\n    const currentConditions = {\n      ...storeManager.getData('simpleSearchConditions'),\n    };\n    // 空文字列も適切に処理\n    currentConditions.term = term || '';\n    storeManager.setData('simpleSearchConditions', currentConditions);\n  }\n\n  /** 検索状態のリセット */\n  reset(): void {\n    this.host._term = '';\n    this.host._value = '';\n    this.host._hideSuggestions = true;\n\n    // 検索条件を更新して空の検索を実行\n    setSimpleSearchCondition('term', '');\n  }\n\n  /**\n   * サジェスト選択時の処理\n   * @param suggestion - 選択されたサジェスト\n   */\n  selectSuggestion(suggestion: SuggestionItem): void {\n    this.host._hideSuggestions = true;\n    this.host._value = suggestion.label;\n    this.host._term = suggestion.label;\n    this.search(suggestion.label);\n  }\n\n  /**\n   * 例文選択時の処理\n   * @param example - 選択された例文\n   */\n  selectExample(example: ExampleItem): void {\n    this.host._hideSuggestions = true;\n    this.host._value = example.value;\n    this.host._term = example.value;\n    this.search(example.value);\n  }\n\n  /**\n   * 現在の検索項目を使用して検索実行\n   */\n  executeCurrentSearch(): void {\n    if (this.host._term === undefined) return;\n    this.search(this.host._term);\n  }\n\n  /**\n   * ボタンクリック時の検索実行\n   */\n  executeButtonSearch(): void {\n    this.search(this.host._term || '');\n  }\n}\n","/** SimpleSearchEventHandlers - SimpleSearchViewのイベントハンドラーを担当 */\n\nimport {\n  SimpleSearchHost,\n  SimpleSearchControllerInterface,\n  SuggestionItem,\n  ExampleItem,\n} from './SimpleSearchTypes';\n\nexport class SimpleSearchEventHandlers {\n  private host: SimpleSearchHost;\n  private controller: SimpleSearchControllerInterface;\n\n  constructor(\n    host: SimpleSearchHost,\n    controller: SimpleSearchControllerInterface\n  ) {\n    this.host = host;\n    this.controller = controller;\n  }\n\n  /**\n   * サジェスト選択イベントの処理\n   * @param e - new-suggestion-selected イベント\n   */\n  handleSuggestionEnter = (e: CustomEvent<SuggestionItem>): void => {\n    this.controller.selectSuggestion(e.detail);\n  };\n\n  /**\n   * 例文選択イベントの処理\n   * @param e - example-selected イベント\n   */\n  handleExampleSelected = (e: CustomEvent<ExampleItem>): void => {\n    this.controller.selectExample(e.detail);\n  };\n\n  /**\n   * 入力イベントの処理\n   * @param e - input-term イベント\n   */\n  handleInputTerm = (e: CustomEvent<string>): void => {\n    this.controller.updateTerm(e.detail);\n  };\n\n  /** Enterキー押下時の検索実行 */\n  handleTermEnter = (): void => {\n    this.controller.executeCurrentSearch();\n  };\n\n  /** 検索ボタンクリック時の処理 */\n  handleSearchButtonClick = (): void => {\n    this.controller.executeButtonSearch();\n  };\n\n  /** 入力フィールドでの入力開始時の処理 */\n  handleInputStart = (): void => {\n    this.host._hideSuggestions = false;\n  };\n\n  /** リセットボタンクリック時の処理 */\n  handleInputReset = (): void => {\n    this.controller.reset();\n  };\n}\n","import { LitElement, html, CSSResultGroup, TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\n\nimport Styles from '../../../../stylesheets/object/component/simple-search-examples.scss';\n\n/** 例文データの型定義 */\nexport interface ExampleItem {\n  key: string;\n  value: string;\n}\n\n/** SimpleSearchExamples - Simple検索用の例表示コンポーネント */\n@customElement('simple-search-examples')\nexport default class SimpleSearchExamples extends LitElement {\n  static styles: CSSResultGroup = [Styles];\n\n  /** 例文データの配列 */\n  @property({ type: Array })\n  examples: ExampleItem[] = [];\n\n  /**\n   * 例文クリック時のイベントハンドラー\n   * @param example - クリックされた例文データ\n   */\n  private handleClick(example: ExampleItem): void {\n    this.dispatchEvent(\n      new CustomEvent('example-selected', {\n        detail: example,\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  render(): TemplateResult {\n    return html`\n      ${map(\n        this.examples,\n        (example: ExampleItem) =>\n          html`<dl @click=${() => this.handleClick(example)}>\n            <dt>${example.key}</dt>\n            <dd>${example.value}</dd>\n          </dl>`\n      )}\n    `;\n  }\n}\n","import { LitElement, html, CSSResultGroup, TemplateResult } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport '../suggestions/SearchFieldWithSuggestions';\nimport './SimpleSearchExamples';\nimport './SimpleSearchButton';\nimport { getSimpleSearchCondition } from '../../../store/searchManager';\nimport { SimpleSearchController } from './SimpleSearchController';\nimport { SimpleSearchEventHandlers } from './SimpleSearchEventHandlers';\nimport { EXAMPLES, SEARCH_FIELD_CONFIG } from './SimpleSearchConstants';\nimport Styles from '../../../../stylesheets/object/component/simple-search-view.scss';\n\n/**\n * SimpleSearchView - シンプル検索のメインコンポーネント\n * ビジネスロジックとイベントハンドリングは別クラスに委譲\n */\n@customElement('simple-search-view')\nclass SimpleSearchView extends LitElement {\n  static styles: CSSResultGroup = [Styles];\n\n  private _controller: SimpleSearchController;\n  private _eventHandlers: SimpleSearchEventHandlers;\n\n  constructor() {\n    super();\n    const element = document.getElementById('SimpleSearchView');\n    if (element) {\n      element.appendChild(this);\n    }\n\n    // コントローラーとイベントハンドラーを初期化\n    this._controller = new SimpleSearchController(this);\n    this._eventHandlers = new SimpleSearchEventHandlers(this, this._controller);\n  }\n\n  // ============================================================================\n  // State Properties\n  // ============================================================================\n  @state() _value: string = ''; // 選択されたサジェストの値\n  @state() _term: string = getSimpleSearchCondition('term') || ''; // 検索キーワード\n  @state() _hideSuggestions: boolean = true; // サジェストを非表示にするかどうか\n\n  // ============================================================================\n  // Getter Methods (Controller Access)\n  // ============================================================================\n\n  /** コントローラーへのアクセサ */\n  get controller(): SimpleSearchController {\n    return this._controller;\n  }\n\n  /** イベントハンドラーへのアクセサ */\n  get eventHandlers(): SimpleSearchEventHandlers {\n    return this._eventHandlers;\n  }\n\n  // ============================================================================\n  // Event Handler Methods\n  // ============================================================================\n\n  /** 検索ボタンクリック時の処理 */\n  private _handleSearchButtonClick = (): void => {\n    this._eventHandlers.handleSearchButtonClick();\n  };\n\n  /** 例文選択時の処理 */\n  private _handleExampleSelected = (e: CustomEvent): void => {\n    this._eventHandlers.handleExampleSelected(e);\n  };\n\n  // ============================================================================\n  // Render Method\n  // ============================================================================\n\n  render(): TemplateResult {\n    return html`\n      <div class=\"simple-search-container\">\n        <search-field-with-suggestions\n          exportparts=\"input-field\"\n          .placeholder=${SEARCH_FIELD_CONFIG.placeholder}\n          .suggestAPIURL=${SEARCH_FIELD_CONFIG.suggestAPIURL}\n          .suggestAPIQueryParam=${SEARCH_FIELD_CONFIG.suggestAPIQueryParam}\n          .options=${SEARCH_FIELD_CONFIG.options}\n          .term=${this._term}\n          .hideSuggestions=${this._hideSuggestions}\n          @new-suggestion-selected=${this._eventHandlers.handleSuggestionEnter}\n          @search-term-enter=${this._eventHandlers.handleTermEnter}\n          @input-term=${this._eventHandlers.handleInputTerm}\n          @input=${this._eventHandlers.handleInputStart}\n          @input-reset=${this._eventHandlers.handleInputReset}\n        ></search-field-with-suggestions>\n\n        <search-button @click=${this._handleSearchButtonClick}></search-button>\n      </div>\n      <simple-search-examples\n        .examples=${EXAMPLES}\n        @example-selected=${this._handleExampleSelected}\n      ></simple-search-examples>\n    `;\n  }\n}\n\nexport default SimpleSearchView;\n","import { directive, AsyncDirective } from 'lit/async-directive.js';\nimport { PartInfo } from 'lit/directive.js';\n\n/** 表示可能領域の情報 */\ninterface ViewableArea {\n  height: number;\n  width: number;\n}\n\n/** スクロール計算の結果 */\ninterface ScrollCalculation {\n  scrollTop: number;\n  scrollBot: number;\n  shouldScrollTop: boolean;\n}\n\n/**\n * 選択された要素を親要素の表示可能領域内にスクロールするLitディレクティブ\n */\nclass ScrollIntoView extends AsyncDirective {\n  render(): void {}\n\n  /**\n   * ディレクティブの更新処理\n   * @param part - Litディレクティブのパート情報\n   * @param selected - 要素が選択されているかどうかのフラグ\n   */\n  update(part: PartInfo, [selected]: [boolean]): void {\n    if (!selected) {\n      return;\n    }\n\n    const element = this._getElementFromPart(part);\n    if (!element?.parentElement) {\n      return;\n    }\n\n    this._scrollParentToChild(element.parentElement, element);\n  }\n\n  /**\n   * PartInfoから要素を安全に取得する\n   * @param part - Litディレクティブのパート情報\n   * @returns 要素またはnull\n   */\n  private _getElementFromPart(part: PartInfo): Element | null {\n    // elementプロパティが存在する場合に取得\n    if ('element' in part && part.element) {\n      return part.element as Element;\n    }\n    return null;\n  }\n\n  /**\n   * 要素が表示可能領域内にあるかを判定する\n   * @param parentRect - 親要素の位置情報\n   * @param childRect - 子要素の位置情報\n   * @param viewableArea - 親要素の表示可能領域\n   * @returns 表示可能かどうか\n   */\n  private _isElementViewable(\n    parentRect: DOMRect,\n    childRect: DOMRect,\n    viewableArea: ViewableArea\n  ): boolean {\n    return (\n      childRect.top >= parentRect.top &&\n      childRect.bottom <= parentRect.top + viewableArea.height\n    );\n  }\n\n  /**\n   * スクロール方向と量を計算する\n   * @param parentRect - 親要素の位置情報\n   * @param childRect - 子要素の位置情報\n   * @returns スクロール計算結果\n   */\n  private _calculateScrollDirection(\n    parentRect: DOMRect,\n    childRect: DOMRect\n  ): ScrollCalculation {\n    const scrollTop = childRect.top - parentRect.top;\n    const scrollBot = childRect.bottom - parentRect.bottom;\n\n    return {\n      scrollTop,\n      scrollBot,\n      shouldScrollTop: Math.abs(scrollTop) < Math.abs(scrollBot),\n    };\n  }\n\n  /**\n   * 子要素を親要素の表示可能領域内にスクロールする\n   *\n   * 子要素が親要素の表示領域外にある場合、最小限のスクロールで\n   * 子要素を表示領域内に移動させる。上下どちらの方向でも\n   * より近い方向にスクロールする。\n   *\n   * @param parent - 親要素（スクロールコンテナ）\n   * @param child - 子要素（表示したい要素）\n   */\n  private _scrollParentToChild(parent: Element, child: Element): void {\n    const parentRect = parent.getBoundingClientRect();\n    const viewableArea: ViewableArea = {\n      height: parent.clientHeight,\n      width: parent.clientWidth,\n    };\n\n    const childRect = child.getBoundingClientRect();\n\n    // 既に表示可能領域内にある場合は何もしない\n    if (this._isElementViewable(parentRect, childRect, viewableArea)) {\n      return;\n    }\n\n    // スクロール方向と量を計算\n    const scrollCalc = this._calculateScrollDirection(parentRect, childRect);\n\n    // より少ないスクロール量の方向にスクロール\n    const scrollAmount = scrollCalc.shouldScrollTop\n      ? scrollCalc.scrollTop\n      : scrollCalc.scrollBot;\n\n    parent.scrollTop += scrollAmount;\n  }\n}\n\n/**\n * 選択された要素を表示可能領域内にスクロールするLitディレクティブ\n * @param selected 要素が選択されているかどうか\n */\nexport const scrollIntoView = directive(ScrollIntoView);\n","import { LitElement, html, nothing, CSSResultGroup, TemplateResult } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\nimport Styles from '../../../../stylesheets/object/component/search-field-suggestions-list.scss';\nimport { scrollIntoView } from '../scrollIntoView';\n\n/** Suggestion data structure */\ninterface SuggestionItem {\n  term?: string;\n  alias_of?: string;\n  highlight?: string;\n  id?: string;\n  name?: string;\n  symbol?: string;\n  [key: string]: any;\n}\n\n/** Class to create a list of suggestions */\n@customElement('search-field-suggestions-list')\nclass SearchFieldSuggestionsList extends LitElement {\n  static styles: CSSResultGroup = [Styles];\n\n  /** Suggestions data */\n  @property({ type: Array }) suggestData: SuggestionItem[] = [];\n\n  /** Highlighted item's index (by keys) */\n  @property({ type: Number }) highlightedSuggestionIndex: number = -1;\n\n  /** What of an item to map to dispatched event's detail.id */\n  @property() itemIdKey: string = '';\n\n  /** What of an item to map to dispatched event's detail.label */\n  @property() itemLabelKey: string = '';\n\n  /** If there is alias_of -kind of data, where in data to see for it */\n  @property() subTextKey: string = '';\n\n  /** Column title in case of Simple search */\n  @property() title: string = '';\n\n  /** Whether API response has been received */\n  @property({ type: Boolean }) hasApiResponse: boolean = false;\n\n  /**\n   * Handle suggestion selection\n   * @param item - The selected suggestion item\n   */\n  private _handleSelect(item: SuggestionItem): void {\n    this.dispatchEvent(\n      new CustomEvent('suggestion-selected', {\n        detail: item,\n        bubbles: true,\n        composed: true,\n      })\n    );\n  }\n\n  render(): TemplateResult {\n    return html`\n      ${this.title ? html`<h3 class=\"title\">${this.title}</h3>` : nothing}\n      <ul class=\"list\">\n        ${!this.hasApiResponse\n          ? nothing\n          : !this.suggestData || this.suggestData.length === 0\n          ? html`<li class=\"item -empty\">No results</li>`\n          : map(\n              this.suggestData,\n              (item: SuggestionItem, index: number) => html`\n                <li\n                  class=\"item ${this.highlightedSuggestionIndex === index\n                    ? '-selected'\n                    : ''}\"\n                  @mousedown=\"${() => this._handleSelect(item)}\"\n                  ${(scrollIntoView as any)(\n                    this.highlightedSuggestionIndex === index\n                  )}\n                >\n                  ${unsafeHTML(item?.highlight || item?.[this.itemLabelKey])}\n                  ${this.subTextKey && item?.[this.subTextKey]\n                    ? html`<span class=\"sub\">\n                        alias: ${item[this.subTextKey]}</span\n                      >`\n                    : nothing}\n                </li>\n              `\n            )}\n      </ul>\n    `;\n  }\n}\n\nexport default SearchFieldSuggestionsList;\n","import { LitElement, html, nothing, CSSResultGroup, TemplateResult } from 'lit';\nimport { customElement, state, property } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { ReactiveControllerHost } from 'lit';\n\nimport '../SearchField';\nimport './SearchFieldSuggestionsList';\nimport { SearchFieldController } from './handlers/SearchFieldController';\nimport { SuggestionKeyboardHandler } from './handlers/SuggestionKeyboardHandler';\nimport { SuggestionSelectionHandler } from './handlers/SuggestionSelectionHandler';\nimport { InputEventHandler } from './handlers/InputEventHandler';\n\nimport Styles from '../../../../stylesheets/object/component/search-field-with-suggestions.scss';\n\n/** SearchFieldWithSuggestionsのデフォルト設定 */\nconst DEFAULT_VALUE_MAPPINGS = {\n  valueKey: 'id',\n  labelKey: 'term',\n  aliasOfKey: 'alias_of',\n} as const;\n\n/**\n * 部分的なオプションを完全なSearchFieldOptionsに変換する\n * @param options - 部分的なオプション\n * @returns 完全なSearchFieldOptions\n */\nfunction createCompleteSearchFieldOptions(options?: Partial<SearchFieldOptions>): SearchFieldOptions {\n  return {\n    valueMappings: {\n      valueKey: options?.valueMappings?.valueKey || DEFAULT_VALUE_MAPPINGS.valueKey,\n      labelKey: options?.valueMappings?.labelKey || DEFAULT_VALUE_MAPPINGS.labelKey,\n      aliasOfKey: options?.valueMappings?.aliasOfKey || DEFAULT_VALUE_MAPPINGS.aliasOfKey,\n    },\n    titleMappings: options?.titleMappings || {},\n  };\n}\n\n/** Suggestion data structure */\nexport interface SuggestionData {\n  term?: string;\n  alias_of?: string;\n  highlight?: string;\n  id?: string;\n  name?: string;\n  symbol?: string;\n  [key: string]: any;\n}\n\n/** Options for configuring the search field behavior */\nexport interface SearchFieldOptions {\n  /** Mappings for suggestion values */\n  valueMappings: {\n    valueKey: string; // Key to map to the value (usually \"id\")\n    labelKey: string; // Key to map to the label\n    aliasOfKey?: string; // Key to map to the subText (optional)\n  };\n  titleMappings?: { [key: string]: string }; // Mappings for suggestion titles (optional)\n}\n\n/** Host interface for handlers */\nexport interface SearchFieldHost extends ReactiveControllerHost {\n  _searchFieldOptions: SearchFieldOptions;\n  _suggestionKeysArray: string[];\n  value: string;\n  label: string;\n  term: string;\n  showSuggestions: boolean;\n  suppressSuggestions: boolean;\n  hasApiResponse: boolean;\n  hasUserInput: boolean;\n  currentSuggestionIndex: number;\n  currentSuggestionColumnIndex: number;\n  suggestData: { [key: string]: SuggestionData[] };\n  hideSuggestionsMethod(): void;\n  selectSuggestion(suggestion: SuggestionData): void;\n  searchWithoutSuggestion(term: string): void;\n  selectCurrentSuggestion(): void;\n  executeSearchWithoutSuggestion(): void;\n  closeSuggestions(): void;\n  hideControllerSuggestions(): void;\n  showControllerSuggestions(): void;\n  clearControllerSuggestData(): void;\n  resetKeyboardSelection(): void;\n  dispatchEvent(event: CustomEvent): boolean;\n}\n\n/** Partial options type for more flexible configuration */\nexport type PartialSearchFieldOptions = {\n  valueMappings: Partial<SearchFieldOptions['valueMappings']> & {\n    valueKey: string;\n    labelKey: string;\n  };\n  titleMappings?: { [key: string]: string };\n};\n\n/** Class for search field with suggestions\n * Used by SimpleSearchView, ConditionValueEditorGene, ConditionValueEditorDisease */\n@customElement('search-field-with-suggestions')\nclass SearchFieldWithSuggestions extends LitElement {\n  static styles: CSSResultGroup = [Styles];\n\n  // ============================================================================\n  // Properties (External Configuration)\n  // ============================================================================\n  @property() suggestAPIURL: string = ''; // API URL\n  @property() suggestAPIQueryParam: string = ''; // Query parameter for API\n  @property({ type: Object }) options?: PartialSearchFieldOptions; // Options for the search field\n  @property({ type: Boolean }) hideSuggestions: boolean = false; // Whether to hide suggestions from parent\n\n  // ============================================================================\n  // State Properties (Internal State)\n  // ============================================================================\n  @state() term: string = ''; // Input area value\n  @state() value: string = ''; // Value of selected suggestion\n  @state() label: string = ''; // Label of selected suggestion\n  @state() showSuggestions: boolean = false; // Whether suggestions are displayed\n  @state() suppressSuggestions: boolean = false; // Whether to suppress suggestions after search\n  @state() hasApiResponse: boolean = false; // Whether API response has been received\n  @state() hasUserInput: boolean = false; // Whether user has made input\n  @state() currentSuggestionIndex: number = -1; // Position from top of selection\n  @state() currentSuggestionColumnIndex: number = 0; // Position from side of selection\n  @state() suggestData: { [key: string]: SuggestionData[] } = {}; // Suggest data list\n  @state() private _suggestionKeysArrayInternal: string[] = []; // Suggest content keys\n\n  // ============================================================================\n  // Private Properties\n  // ============================================================================\n  private _controller: SearchFieldController;\n  private _keyboardHandler: SuggestionKeyboardHandler;\n  private _selectionHandler: SuggestionSelectionHandler;\n  private _inputHandler: InputEventHandler;\n  private _searchFieldOptionsInternal: SearchFieldOptions;\n\n  // ============================================================================\n  // Constructor\n  // ============================================================================\n  /**\n   * @param placeholder - Placeholder text\n   * @param suggestAPIURL - URL to fetch suggestions from\n   * @param suggestAPIQueryParam - Query parameter to be used for the API call\n   * @param element - HTML element to which the search field is attached\n   * @param options - Options for the search field\n   */\n  constructor(\n    public placeholder: string,\n    suggestAPIURL: string,\n    suggestAPIQueryParam: string,\n    element?: HTMLElement,\n    options?: PartialSearchFieldOptions\n  ) {\n    super();\n    this.suggestAPIURL = suggestAPIURL;\n    this.suggestAPIQueryParam = suggestAPIQueryParam;\n\n    // デフォルト値とマージして完全なSearchFieldOptionsを作成\n    this._searchFieldOptionsInternal = createCompleteSearchFieldOptions(options);\n\n    // 初期化\n    this._controller = new SearchFieldController(this);\n    this._keyboardHandler = new SuggestionKeyboardHandler(this);\n    this._selectionHandler = new SuggestionSelectionHandler(this);\n    this._inputHandler = new InputEventHandler(this);\n\n    // for only gene\n    if (element) element.appendChild(this);\n  }\n\n  // ============================================================================\n  // Getters\n  // ============================================================================\n  /** API task getter　- provides access to the suggestion fetching task */\n  get apiTask() {\n    return this._controller.apiTask;\n  }\n\n  /** Get search field options for handlers */\n  get _searchFieldOptions() {\n    return this._searchFieldOptionsInternal;\n  }\n\n  /** Get suggestion keys array for handlers */\n  get _suggestionKeysArray() {\n    return this._suggestionKeysArrayInternal;\n  }\n\n  /** Set suggestion keys array for handlers */\n  set _suggestionKeysArray(value: string[]) {\n    this._suggestionKeysArrayInternal = value;\n  }\n\n  // ============================================================================\n  // Lifecycle Methods\n  // ============================================================================\n  /** Compute property values that depend on other properties and are used in the rest of the update process */\n  willUpdate(changedProperties: Map<string | number | symbol, unknown>): void {\n    if (changedProperties.has('suggestAPIURL')) {\n      this._controller.setSuggestURL(\n        this.suggestAPIURL,\n        this.suggestAPIQueryParam\n      );\n    }\n\n    if (changedProperties.has('options') && this.options) {\n      // 部分的なオプションを完全なSearchFieldOptionsに変換\n      this._searchFieldOptionsInternal = createCompleteSearchFieldOptions(this.options);\n    }\n\n    if (changedProperties.has('hideSuggestions')) {\n      this.showSuggestions = !this.hideSuggestions;\n    }\n  }\n\n  // ============================================================================\n  // Public Event Handlers\n  // ============================================================================\n  /** Select with keydown(ArrowUp, ArrowDown, ArrowLeft, ArrowRight, Enter, Escape) */\n  handleUpDownKeys = (e: KeyboardEvent): void => {\n    return this._keyboardHandler.handleUpDownKeys(e);\n  };\n\n  /** Handle suggestion selected event */\n  handleSuggestionSelected = (e: CustomEvent<SuggestionData>): void => {\n    return this._selectionHandler.handleSuggestionSelected(e);\n  };\n\n  /** Put the characters input in this.term, (Only SimpleSearch)create input-term event, hide suggestions if the length is less than 3, and empty suggestData */\n  handleInput = (e: InputEvent): void => {\n    return this._inputHandler.handleInput(e);\n  };\n\n  /** Initialize currentSuggestion position when input is clicked. */\n  handleClick = (): void => {\n    return this._inputHandler.handleClick();\n  };\n\n  /** Display suggestions, if the input character is greater than 3 when the focus on. */\n  handleFocusIn = (): void => {\n    return this._inputHandler.handleFocusIn();\n  };\n\n  /** Hide suggestions when focus moves away from input */\n  handleFocusOut = (): void => {\n    return this._inputHandler.handleFocusOut();\n  };\n\n  /** Hide suggestions and empty input when input is reset. input-reset event for simple search */\n  handleInputReset = (): void => {\n    return this._inputHandler.handleInputReset();\n  };\n\n  /** Hide suggestions */\n  hideSuggestionsMethod = (): void => {\n    this.showSuggestions = false;\n  };\n\n  /** Put the selected value in value and label, create new-suggestion-selected event, and hide suggestion */\n  selectSuggestion = (suggestion: SuggestionData): void => {\n    return this._selectionHandler.select(suggestion);\n  };\n\n  /** (Only SimpleSearch) Search without suggestions, create search-term-enter event and hide suggest after event firing */\n  searchWithoutSuggestion = (term: string): void => {\n    return this._selectionHandler.searchWithoutSelect(term);\n  };\n\n  /** Select currently highlighted suggestion with keyboard navigation */\n  selectCurrentSuggestion = (): void => {\n    if (this.showSuggestions && this.currentSuggestionIndex !== -1) {\n      const currentSuggestion =\n        this.suggestData[\n          this._suggestionKeysArray[this.currentSuggestionColumnIndex]\n        ][this.currentSuggestionIndex];\n\n      this.selectSuggestion(currentSuggestion);\n      this.resetKeyboardSelection();\n      this.hideSuggestionsMethod();\n    }\n  };\n\n  /** Execute search without suggestion selection */\n  executeSearchWithoutSuggestion = (): void => {\n    this.searchWithoutSuggestion(this.term);\n  };\n\n  /** Close suggestions and suppress further suggestions */\n  closeSuggestions = (): void => {\n    this.hideSuggestionsMethod();\n    this.suppressSuggestions = true;\n  };\n\n  /** Hide suggestions using controller */\n  hideControllerSuggestions = (): void => {\n    this._controller.hideSuggestions();\n  };\n\n  /** Show suggestions using controller */\n  showControllerSuggestions = (): void => {\n    this._controller.showSuggestions();\n  };\n\n  /** Clear suggest data using controller */\n  clearControllerSuggestData = (): void => {\n    this._controller.clearSuggestData();\n  };\n\n  /** Reset keyboard selection */\n  resetKeyboardSelection = (): void => {\n    this._keyboardHandler.resetSelection();\n  };\n\n  // ============================================================================\n  // Protected Methods (Used by Handlers)\n  // ============================================================================\n  /** Handle index of column */\n  protected _handleStepThroughColumns(): void {\n    // 列間のインデックス調整を処理\n    if (\n      this.currentSuggestionIndex >\n      this.suggestData[\n        this._suggestionKeysArray[this.currentSuggestionColumnIndex]\n      ]?.length -\n        1\n    ) {\n      this.currentSuggestionIndex =\n        this.suggestData[\n          this._suggestionKeysArray[this.currentSuggestionColumnIndex]\n        ]?.length - 1;\n    }\n  }\n\n  // ============================================================================\n  // Render Method\n  // ============================================================================\n  render(): TemplateResult {\n    return html`\n      <search-field\n        exportparts=\"input-field\"\n        value=${this.term}\n        .placeholder=${this.placeholder}\n        @input-change=${this.handleInput}\n        @click=${this.handleClick}\n        @focusin=${this.handleFocusIn}\n        @focusout=${this.handleFocusOut}\n        @keydown=${this.handleUpDownKeys}\n        @input-reset=${this.handleInputReset}\n      ></search-field>\n      <div class=\"suggestions-container\">\n        ${this.suggestData &&\n        this.showSuggestions &&\n        this.hasApiResponse &&\n        !this.hideSuggestions\n          ? html`\n              ${map(\n                this._suggestionKeysArray,\n                (key: string, keyIndex: number) => {\n                  return html`\n                    <div class=\"column\">\n                      <search-field-suggestions-list\n                        .suggestData=${this.suggestData[key]}\n                        .highlightedSuggestionIndex=\"${keyIndex ===\n                        this.currentSuggestionColumnIndex\n                          ? this.currentSuggestionIndex\n                          : -1}\"\n                        .itemIdKey=${'term'}\n                        .itemLabelKey=${'term'}\n                        .subTextKey=${this._searchFieldOptions?.valueMappings\n                          ?.aliasOfKey}\n                        .hasApiResponse=${this.hasApiResponse}\n                        title=${this._searchFieldOptions?.titleMappings?.[key]}\n                        @suggestion-selected=${this.handleSuggestionSelected}\n                      ></search-field-suggestions-list>\n                    </div>\n                  `;\n                }\n              )}\n            `\n          : nothing}\n      </div>\n    `;\n  }\n}\n\nexport default SearchFieldWithSuggestions;\n","import { SearchFieldHost } from '../SearchFieldWithSuggestions';\n\n/** InputEventHandler - 入力イベントの処理とフォーカス管理を担当するクラス */\nexport class InputEventHandler {\n  private host: SearchFieldHost;\n\n  /** @param host - ホストとなるLitElementインスタンス */\n  constructor(host: SearchFieldHost) {\n    this.host = host;\n  }\n\n  /** 入力変更イベントを処理 */\n  handleInput = (e: CustomEvent<string> | InputEvent): void => {\n    // イベントの型に応じて適切なプロパティから値を取得\n    let inputValue: string;\n    if (e instanceof CustomEvent) {\n      inputValue = String(e.detail) || '';\n    } else {\n      // 標準的な InputEvent の場合は data プロパティまたは target.value を使用\n      const target = e.target as HTMLInputElement;\n      inputValue = target?.value || '';\n    }\n    \n    this.host.term = inputValue;\n\n    // ユーザーが入力を行ったことを記録\n    this.host.hasUserInput = true;\n\n    // 新しい入力があった場合、サジェスト抑制を解除\n    if (this.host.suppressSuggestions) {\n      this.host.suppressSuggestions = false;\n    }\n\n    this.host.dispatchEvent(\n      new CustomEvent('input-term', {\n        detail: inputValue,\n        bubbles: true,\n        composed: true,\n      })\n    );\n\n    // 3文字未満の場合はサジェストを非表示\n    if (this.host.term.length < 3) {\n      this.host.hideControllerSuggestions();\n      this.host.clearControllerSuggestData();\n    }\n  };\n\n  /** クリックイベントを処理 - サジェスト選択位置を初期化 */\n  handleClick = (): void => {\n    this.host.resetKeyboardSelection();\n  };\n\n  /** フォーカスインイベントを処理 - 条件を満たす場合サジェストを表示 */\n  handleFocusIn = (): void => {\n    // ユーザーが実際に入力を行った場合のみサジェストを表示\n    if (\n      this.host.term?.length > 3 &&\n      !this.host.suppressSuggestions &&\n      this.host.hasUserInput\n    ) {\n      this.host.showControllerSuggestions();\n    }\n  };\n\n  /** フォーカスアウトイベントを処理 - サジェストを非表示 */\n  handleFocusOut = (): void => {\n    this.host.hideSuggestionsMethod();\n  };\n\n  /** 入力リセットイベントを処理 - すべてのフィールドをクリア */\n  handleInputReset = (): void => {\n    this.host.term = '';\n    this.host.value = '';\n    this.host.label = '';\n    this.host.showSuggestions = false;\n    this.host.hasUserInput = false;\n    this.host.clearControllerSuggestData();\n    this.host.hideSuggestionsMethod();\n    this.host.dispatchEvent(new CustomEvent('input-reset'));\n  };\n\n  /** 入力フィールドの状態をリセット */\n  resetInputState(): void {\n    this.host.term = '';\n    this.host.value = '';\n    this.host.label = '';\n  }\n\n  /** サジェスト表示の条件をチェック */\n  shouldShowSuggestions(): boolean {\n    return this.host.term && this.host.term.length >= 3;\n  }\n}\n","import { Task } from '@lit-labs/task';\nimport { axios } from '../../../../utils/cachedAxios';\nimport { debounce } from '../../../../utils/debounce';\nimport { SearchFieldHost, SuggestionData } from '../SearchFieldWithSuggestions';\n\n/** SearchFieldController - API呼び出しとデータ管理を担当するクラス */\nexport class SearchFieldController {\n  private host: SearchFieldHost;\n  apiTask: Task;\n  private _getSuggestURL: ((text: string) => string) | null = null;\n\n  /** @param host - ホストとなるLitElementインスタンス */\n  constructor(host: SearchFieldHost) {\n    this.host = host;\n    this._initializeApiTask();\n  }\n\n  /** APIタスクを初期化 */\n  private _initializeApiTask(): void {\n    this.apiTask = new Task(\n      this.host, // SearchFieldHostはReactiveControllerHostを継承\n      debounce(async (dependencies: readonly unknown[]) => {\n        const term = dependencies[0] as string;\n        // ユーザーが実際に入力を行った場合のみAPI呼び出しを実行\n        if (term && term.length >= 3 && this.host.hasUserInput) {\n          // サジェストを表示状態にする\n          this.host.showSuggestions = true;\n          \n          // 既存のサジェストがない場合のみ、APIレスポンス待機状態に設定\n          const hadPreviousData = this.host.hasApiResponse && Object.keys(this.host.suggestData).length > 0;\n          if (!hadPreviousData) {\n            this.host.hasApiResponse = false;\n          }\n\n          if (!this._getSuggestURL) {\n            throw new Error('Suggest URL function is not set');\n          }\n\n          try {\n            const { data } = await axios.get(this._getSuggestURL(term));\n            let dataToReturn: { [key: string]: SuggestionData[] };\n\n            // Make suggestion data same format for simple & gene etc search\n            if (Array.isArray(data)) {\n              // for AdvancedSearch\n              dataToReturn = { data: data as SuggestionData[] };\n              this.host._suggestionKeysArray = ['data'];\n            } else {\n              // for SimpleSearch\n              dataToReturn = data as { [key: string]: SuggestionData[] };\n              this.host._suggestionKeysArray = Object.keys(data);\n            }\n\n            this.host.suggestData = dataToReturn;\n            this.host.hasApiResponse = true;\n            return dataToReturn;\n          } catch (error) {\n            this.host.hasApiResponse = true; // エラーでもレスポンスは受信したとみなす\n            throw error;\n          }\n        }\n        \n        // 3文字未満の場合のみサジェストを非表示にする\n        // 空文字や短い文字列の場合は、既存のサジェストもクリアする\n        if (!term || term.length < 3) {\n          this.host.showSuggestions = false;\n          this.host.hasApiResponse = false;\n        }\n        return {};\n      }, 300),\n      () => [this.host.term]\n    );\n  }\n\n  /**\n   * サジェストAPIのURLを生成する関数を設定\n   * @param suggestAPIURL - API URL\n   * @param suggestAPIQueryParam - クエリパラメータ名\n   */\n  setSuggestURL(suggestAPIURL: string, suggestAPIQueryParam: string): void {\n    this._getSuggestURL = (text: string): string => {\n      const url = new URL(suggestAPIURL);\n      url.searchParams.set(suggestAPIQueryParam, text);\n      return url.toString();\n    };\n  }\n\n  /** サジェストを非表示にし、storeManagerを更新 */\n  hideSuggestions(): void {\n    this.host.showSuggestions = false;\n  }\n\n  /** サジェストを表示し、storeManagerを更新 */\n  showSuggestions(): void {\n    this.host.showSuggestions = true;\n  }\n\n  /** サジェストデータをクリア */\n  clearSuggestData(): void {\n    this.host.suggestData = {};\n    this.host.hasApiResponse = false;\n  }\n}\n","import { SearchFieldHost } from '../SearchFieldWithSuggestions';\n\n/** SuggestionKeyboardHandler - キーボードナビゲーションとキー操作を担当するクラス */\nexport class SuggestionKeyboardHandler {\n  private host: SearchFieldHost;\n\n  /** @param host - ホストとなるLitElementインスタンス */\n  constructor(host: SearchFieldHost) {\n    this.host = host;\n  }\n\n  /** キーボードイベント（ArrowUp, ArrowDown, ArrowLeft, ArrowRight, Enter, Escape）を処理 */\n  handleUpDownKeys = (e: KeyboardEvent): void => {\n    const arrowKeys: string[] = [\n      'ArrowUp',\n      'ArrowDown',\n      'ArrowLeft',\n      'ArrowRight',\n    ];\n    if (\n      arrowKeys.includes(e.key) &&\n      this.host.showSuggestions &&\n      this.host.currentSuggestionIndex !== -1\n    ) {\n      e.preventDefault();\n    }\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        this._handleArrowLeft();\n        break;\n\n      case 'ArrowRight':\n        this._handleArrowRight();\n        break;\n\n      case 'ArrowUp':\n        this._handleArrowUp();\n        break;\n\n      case 'ArrowDown':\n        this._handleArrowDown();\n        break;\n\n      case 'Enter':\n        this._handleEnter();\n        break;\n\n      case 'Escape':\n        this._handleEscape();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  /** 左矢印キーの処理 - 列の左移動 */\n  private _handleArrowLeft(): void {\n    if (this.host.currentSuggestionColumnIndex - 1 < 0) {\n      this.host.currentSuggestionColumnIndex =\n        this.host._suggestionKeysArray?.length - 1;\n      return;\n    }\n    this.host.currentSuggestionColumnIndex--;\n    this._handleStepThroughColumns();\n  }\n\n  /** 右矢印キーの処理 - 列の右移動 */\n  private _handleArrowRight(): void {\n    if (\n      this.host.currentSuggestionColumnIndex + 1 >\n      this.host._suggestionKeysArray?.length - 1\n    ) {\n      this.host.currentSuggestionColumnIndex = 0;\n      return;\n    }\n    this.host.currentSuggestionColumnIndex++;\n    this._handleStepThroughColumns();\n  }\n\n  /** 上矢印キーの処理 - 行の上移動 */\n  private _handleArrowUp(): void {\n    if (this.host.currentSuggestionIndex - 1 < 0) {\n      this.host.currentSuggestionIndex =\n        this.host.suggestData[\n          this.host._suggestionKeysArray[this.host.currentSuggestionColumnIndex]\n        ]?.length - 1;\n      return;\n    }\n    this.host.currentSuggestionIndex--;\n  }\n\n  /** 下矢印キーの処理 - 行の下移動 */\n  private _handleArrowDown(): void {\n    if (\n      this.host.currentSuggestionIndex + 1 >\n      this.host.suggestData[\n        this.host._suggestionKeysArray[this.host.currentSuggestionColumnIndex]\n      ]?.length -\n        1\n    ) {\n      this.host.currentSuggestionIndex = 0;\n      return;\n    }\n    this.host.currentSuggestionIndex++;\n  }\n\n  /** Enterキーの処理 - 選択または検索実行 */\n  private _handleEnter(): void {\n    if (this.host.showSuggestions && this.host.currentSuggestionIndex !== -1) {\n      // サジェストが選択されている場合：ホストに委譲\n      this.host.selectCurrentSuggestion();\n    } else {\n      // サジェストが選択されていない場合：ホストに委譲\n      this.host.executeSearchWithoutSuggestion();\n    }\n  }\n\n  /** Escapeキーの処理 - サジェスト非表示 */\n  private _handleEscape(): void {\n    this.host.closeSuggestions();\n  }\n\n  /** 列間のインデックス調整を処理 */\n  private _handleStepThroughColumns(): void {\n    if (\n      this.host.currentSuggestionIndex >\n      this.host.suggestData[\n        this.host._suggestionKeysArray[this.host.currentSuggestionColumnIndex]\n      ]?.length -\n        1\n    ) {\n      this.host.currentSuggestionIndex =\n        this.host.suggestData[\n          this.host._suggestionKeysArray[this.host.currentSuggestionColumnIndex]\n        ]?.length - 1;\n    }\n  }\n\n  /** 選択位置を初期化 */\n  resetSelection(): void {\n    this.host.currentSuggestionIndex = -1;\n    this.host.currentSuggestionColumnIndex = 0;\n  }\n}\n","import { SuggestionData, SearchFieldHost } from '../SearchFieldWithSuggestions';\n\n/**\n * SuggestionSelectionHandler - サジェストの選択と検索実行を担当するクラス\n */\nexport class SuggestionSelectionHandler {\n  private host: SearchFieldHost;\n\n  /**\n   * @param host - ホストとなるLitElementインスタンス\n   */\n  constructor(host: SearchFieldHost) {\n    this.host = host;\n  }\n\n  /**\n   * サジェストを選択して値を設定\n   * @param suggestion - 選択されたサジェスト\n   */\n  select = (suggestion: SuggestionData): void => {\n    const valueKey =\n      suggestion[this.host._searchFieldOptions.valueMappings.valueKey] || '';\n    const labelKey =\n      suggestion[this.host._searchFieldOptions.valueMappings.labelKey] || '';\n\n    // サジェストの値をフォーマットして設定\n    this.host.value = this._formatSuggestionValue(valueKey);\n    this.host.label = this._formatSuggestionValue(labelKey);\n\n    // サジェスト選択後はサジェストを抑制\n    this.host.suppressSuggestions = true;\n    // サジェスト選択後はユーザー入力フラグもリセット\n    this.host.hasUserInput = false;\n\n    this.host.dispatchEvent(\n      new CustomEvent('new-suggestion-selected', {\n        detail: { id: this.host.value, label: this.host.label },\n        bubbles: true,\n        composed: true,\n      })\n    );\n  };\n\n  /**\n   * (Only SimpleSearch) サジェストなしで検索を実行\n   * @param term - 検索語\n   */\n  searchWithoutSelect = (term: string): void => {\n    // 検索実行後はサジェストを抑制\n    this.host.suppressSuggestions = true;\n    // 検索実行後はユーザー入力フラグもリセット\n    this.host.hasUserInput = false;\n\n    this.host.dispatchEvent(\n      new CustomEvent('search-term-enter', {\n        detail: term,\n        bubbles: true,\n        composed: true,\n      })\n    );\n    this.host.hideSuggestionsMethod();\n  };\n\n  /**\n   * サジェスト選択イベントを処理\n   * @param e - サジェスト選択イベント\n   */\n  handleSuggestionSelected = (e: CustomEvent<SuggestionData>): void => {\n    this.select(e.detail);\n  };\n\n  /**\n   * 複数のサジェストカラムが存在するかチェック\n   * 複数カラムの場合はSimpleSearchモードとしてダブルクォートを追加する\n   * @returns 複数カラムの場合はtrue、単一カラム（gene, diseaseなど）の場合はfalse\n   */\n  private _hasMultipleSuggestionColumns(): boolean {\n    return this.host._suggestionKeysArray.length > 1;\n  }\n\n  /**\n   * 文字列をエスケープする\n   * @param str - エスケープする文字列\n   * @returns エスケープされた文字列\n   */\n  private _escapeString(str: string | undefined): string {\n    return String(str || '')\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g, '\\\\\"');\n  }\n\n  /**\n   * サジェスト値を適切にフォーマットする\n   * \n   * SimpleSearchモード（複数カラム）の場合：\n   * - ダブルクォートで囲む（完全一致検索のため）\n   * - 複数の検索対象（遺伝子、疾患など）が混在するため、明示的な区切りが必要\n   * \n   * 特定検索モード（gene, diseaseなど単一カラム）の場合：\n   * - クォートなし（部分一致検索を許可）\n   * - 検索対象が特定されているため、より柔軟な検索が可能\n   * \n   * @param value - フォーマットする値\n   * @returns フォーマットされた値\n   */\n  private _formatSuggestionValue(value: string): string {\n    const escapedValue = this._escapeString(value);\n    \n    if (this._hasMultipleSuggestionColumns()) {\n      // SimpleSearchモード: ダブルクォートで囲んで完全一致検索\n      return `\"${escapedValue}\"`;\n    } else {\n      // 特定検索モード: クォートなしで部分一致検索を許可\n      return escapedValue;\n    }\n  }\n}\n","import * as _ from 'lodash';\nimport {\n  handleHistoryChange,\n  reflectSimpleSearchConditionToURI,\n  reflectAdvancedSearchConditionToURI,\n  setAdvancedSearchCondition,\n} from '../store/searchManager';\nimport { executeSearch } from '../api/fetchData';\nimport { StoreState, ResultData, SearchMode } from '../types';\n\n// class storeManager extends FormatData {\nclass StoreManager {\n  #bindings: Record<string, any[]> = {}; // TODO: いずれ削除\n  #listeners = new Map<string, Set<(value: any) => void>>();\n  #state: StoreState = {\n    karyotype: '',\n    searchMode: '',\n    simpleSearchConditionsMaster: [],\n    simpleSearchConditions: {},\n    columns: [],\n    searchResults: [],\n    numberOfRecords: 0,\n    offset: 0,\n    rowCount: 0,\n    appStatus: 'preparing',\n    isLogin: false,\n    isFetching: false,\n    isStoreUpdating: false,\n    displayingRegionsOnChromosome: {},\n  };\n\n  constructor() {\n    this.#initSearchCondition();\n  }\n\n  #initSearchCondition() {\n    this.setData('isFetching', false);\n    // events\n    window.addEventListener('popstate', handleHistoryChange.bind(this));\n    this.subscribe('searchMode', this.searchMode.bind(this));\n  }\n\n  /** 指定されたキーからデータを取得する */\n  getData<T = any>(key: keyof StoreState): T {\n    return this._deepCopy(this.#state[key]);\n  }\n\n  /** 指定されたキーにデータをセットする */\n  setData<T extends keyof StoreState>(key: T, newValue: StoreState[T]) {\n    const oldValue = this.#state[key];\n    // 値がプリミティブ型ならそのまま比較\n    if (typeof newValue !== 'object' || newValue === null) {\n      if (!Object.is(oldValue, newValue)) {\n        this.#state[key] = newValue;\n        this.publish(key);\n      }\n      return;\n    }\n\n    // オブジェクトの比較（変更があればコピーして保存）\n    if (!_.isEqual(oldValue, newValue)) {\n      this.#state[key] = structuredClone(newValue);\n      this.publish(key);\n    }\n  }\n\n  /** 変更監視を追加する\n   * callcackが変更されたら、UIが更新される */\n  subscribe<T extends keyof StoreState>(\n    key: T,\n    callback: (value: StoreState[T]) => void\n  ) {\n    if (!this.#listeners.has(key)) {\n      this.#listeners.set(key, new Set());\n    }\n    this.#listeners.get(key)?.add(callback);\n  }\n\n  // /** 変更監視を解除する */\n  // unsubscribe<T extends keyof StoreState>(\n  //   key: T,\n  //   callback: (value: StoreState[T]) => void\n  // ) {\n  //   this.#listeners.get(key)?.delete(callback);\n  // }\n\n  /** 指定されたキーにターゲットをバインドする */\n  // TODO: bindingsがなくなったら、以下は削除する\n  bind<T = any>(key: string, target: T) {\n    if (this.#bindings[key] === undefined) {\n      // 初めてのバインディングなら新しい配列を作成\n      this.#bindings[key] = [target];\n    } else {\n      // すでにバインドされている場合は追加\n      this.#bindings[key].push(target);\n    }\n  }\n\n  /** listenersに登録されている関数を実行 */\n  publish<T extends keyof StoreState>(key: T) {\n    this.#listeners.get(key)?.forEach((callback) => callback(this.#state[key]));\n\n    //TODO: bindingsがなくなったら、以下は削除する\n    if (this.#bindings[key]) {\n      this.#bindings[key].forEach((observer) => {\n        const valueCopy = this._deepCopy(this.#state[key]);\n        if (typeof observer[key] === 'function') {\n          observer[key](valueCopy);\n        } else {\n          console.warn(\n            `This binding has no corresponding function.`,\n            observer,\n            key\n          );\n        }\n      });\n    }\n  }\n\n  /** Deep copy the provided value */\n  _deepCopy<T>(value: T): T {\n    if (value === null || typeof value !== 'object') return value;\n    return structuredClone(value);\n  }\n\n  // ------------------------------\n  //  検索結果の管理\n  // ------------------------------\n  /** 検索結果を保存し、状態を更新する */\n  setResults(records: ResultData[], offset: number) {\n    // 更新中フラグを立てる\n    this.setData('isStoreUpdating', true);\n\n    const updatedResults = Array(this.getData('numberOfRecords')).fill(null);\n\n    // 既存データと新データの更新\n    this.getData('searchResults').forEach((record, index) => {\n      if (record) {\n        updatedResults[index] = record;\n      }\n    });\n\n    records.forEach((record, index) => {\n      updatedResults[offset + index] = record;\n    });\n\n    // 更新順序の変更とログ追加\n    this.setData('searchResults', updatedResults);\n\n    this.publish('searchResults');\n\n    this.setData('isFetching', false);\n\n    this.setData('isStoreUpdating', false);\n  }\n\n  /** 指定されたインデックスのレコードを取得\n   * レコードが存在しない場合は検索を実行し、ステータスを 'loading' に設定 */\n  getRecordByIndex(index: number) {\n    if (this.getData('isStoreUpdating')) return 'loading';\n    const recordIndex = this.getData('offset') + index;\n\n    if (recordIndex < this.#state.numberOfRecords) {\n      const record = this.#state.searchResults[recordIndex];\n      if (record) return this._deepCopy(record);\n      executeSearch(this.getData('offset') + index);\n      return 'loading';\n    }\n    return 'out of range';\n  }\n\n  // どのPanelViewが呼ばれるかを判定するための関数\n  getSelectedRecord() {\n    if (this.#state.selectedRow !== undefined) {\n      return this.#state.searchResults[\n        this.#state.offset + this.#state.selectedRow\n      ];\n    } else {\n      return null;\n    }\n  }\n\n  // ------------------------------\n  //  Login Status管理\n  // ------------------------------\n  async fetchLoginStatus() {\n    try {\n      if (window.location.origin === 'http://localhost:8000') {\n        this.setData('isLogin', true);\n        return;\n      }\n\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000); // 10秒でリクエストを中断\n\n      const response = await fetch(`${window.location.origin}/auth/status`, {\n        signal: controller.signal,\n      }).catch(() => {\n        throw new Error('Request failed or timed out');\n      });\n\n      clearTimeout(timeoutId);\n\n      if (response instanceof Response) {\n        if (response.status === 200) {\n          this.setData('isLogin', true);\n        } else {\n          console.warn(`Not logged in: Received status ${response.status}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching auth status:', error);\n      this.setData('isLogin', false);\n    }\n  }\n\n  // ------------------------------\n  //  検索モードの管理\n  // ------------------------------\n  /** 検索モードを変更 */\n  searchMode(mode: SearchMode) {\n    this.setData('isStoreUpdating', true);\n\n    try {\n      this.setData('offset', 0);\n      this.setData('selectedRow', undefined);\n      this.setData('searchResults', []);\n      this.setData('numberOfRecords', 0);\n      this.setData('rowCount', 0);\n\n      document.body.dataset.searchMode = mode;\n\n      switch (mode) {\n        case 'simple':\n          reflectSimpleSearchConditionToURI();\n          this.publish('simpleSearchConditions');\n          break;\n        case 'advanced':\n          const condition = this.getData('advancedSearchConditions');\n          setAdvancedSearchCondition(condition);\n          reflectAdvancedSearchConditionToURI();\n          break;\n      }\n\n      // 検索を開始（モード切り替え時は必ず初回検索として扱う）\n      this.setData('appStatus', 'searching');\n      executeSearch(0, true);\n    } finally {\n      this.setData('isStoreUpdating', false);\n    }\n  }\n}\n\nexport const storeManager = new StoreManager();\n","import { storeManager } from './StoreManager';\n\nexport function initializeApp() {\n  const searchParams = new URLSearchParams(window.location.search);\n  const urlMode = searchParams.get('mode');\n\n  // URLのモードパラメータに基づいて検索モードを設定\n  if (urlMode === 'advanced') {\n    storeManager.setData('searchMode', 'advanced');\n  } else {\n    storeManager.setData('searchMode', 'simple');\n  }\n}\n","import * as qs from 'qs';\nimport { executeSearch } from '../api/fetchData';\nimport { storeManager } from '../store/StoreManager';\nimport {\n  MasterConditions,\n  MasterConditionId,\n  SimpleSearchCurrentConditions,\n} from '../types';\n\nlet _currentUrlParams = qs.parse(window.location.search.substring(1));\n\n// 初期化処理を遅延実行\nsetTimeout(() => {\n  initializeSearchMode();\n}, 100);\n\n/** デフォルト値と異なる検索条件を抽出 */\nexport function extractSearchCondition(\n  currentConditions: SimpleSearchCurrentConditions = {} as SimpleSearchCurrentConditions\n): Record<string, unknown> {\n  const masterSearchConditions: MasterConditions[] = storeManager.getData(\n    'simpleSearchConditionsMaster'\n  );\n\n  const diffConditions: Record<string, unknown> = {};\n  const conditionMap = new Map(\n    masterSearchConditions.map((condition) => [condition.id, condition])\n  );\n\n  for (const [conditionKey, conditionValue] of Object.entries(\n    currentConditions\n  )) {\n    const masterCondition = conditionMap.get(conditionKey as MasterConditionId);\n    if (!masterCondition) continue;\n\n    switch (masterCondition.type) {\n      case 'array': {\n        const filteredValues: Record<string, string | number> = {};\n        if (typeof conditionValue === 'object' && conditionValue !== null) {\n          for (const [itemKey, itemValue] of Object.entries(conditionValue)) {\n            const defaultValue = masterCondition.items?.find(\n              (item) => item.id === itemKey\n            )?.default;\n            if (itemValue !== defaultValue) {\n              filteredValues[itemKey] = itemValue;\n            }\n          }\n        }\n        if (Object.keys(filteredValues).length > 0) {\n          diffConditions[conditionKey] = filteredValues;\n        }\n        break;\n      }\n\n      case 'boolean':\n      case 'string': {\n        const defaultValue = masterCondition.default;\n        if (conditionValue !== defaultValue) {\n          diffConditions[conditionKey] = conditionValue;\n        }\n        break;\n      }\n    }\n  }\n\n  return diffConditions;\n}\n\n// Simple Search ----------------------------------------\n/** SimpleSearchの検索条件を設定 */\nexport function setSimpleSearchCondition<\n  K extends keyof SimpleSearchCurrentConditions\n>(conditionKey: K, conditionValue: SimpleSearchCurrentConditions[K]) {\n  _setSimpleSearchConditions({ [conditionKey]: conditionValue });\n}\n\n/** シンプル検索条件を設定し、必要に応じて検索を開始 */\nfunction _setSimpleSearchConditions(\n  newSearchConditions: Partial<SimpleSearchCurrentConditions>,\n  isFromHistory?: boolean\n) {\n  // 検索条件を更新\n  const updatedConditions = {\n    ...storeManager.getData('simpleSearchConditions'),\n  };\n  Object.keys(newSearchConditions).forEach((conditionKey) => {\n    updatedConditions[conditionKey] = newSearchConditions[conditionKey];\n  });\n  storeManager.setData('simpleSearchConditions', updatedConditions);\n\n  // 現在のモードがsimpleで、履歴からの呼び出しでない場合のみURLを更新\n  if (!isFromHistory && storeManager.getData('searchMode') === 'simple') {\n    reflectSimpleSearchConditionToURI();\n  }\n\n  storeManager.setData('appStatus', 'searching');\n  executeSearch(0, true);\n}\n\n/** 指定された検索条件キーに対応する現在の検索条件を取得する */\nexport function getSimpleSearchCondition(key: MasterConditionId) {\n  return storeManager.getData('simpleSearchConditions')?.[key];\n}\n\n/** 指定された検索条件キーに対応するマスター検索条件を取得する */\nexport function getSimpleSearchConditionMaster(key: MasterConditionId) {\n  return storeManager\n    .getData('simpleSearchConditionsMaster')\n    .find((condition: MasterConditions) => condition.id === key);\n}\n\n/** 現在のSimple Searchの条件をURLパラメータに反映する */\nexport function reflectSimpleSearchConditionToURI() {\n  // デフォルト値と異なる検索条件を抽出\n  const currentConditions = storeManager.getData('simpleSearchConditions');\n  const diffConditions = extractSearchCondition(currentConditions);\n\n  // 現在のterm値を保存（一時変数）\n  const currentTerm = currentConditions.term || '';\n\n  // 検索条件が空の場合は、URLパラメータを完全にクリア\n  if (Object.keys(diffConditions).length === 0 && currentTerm === '') {\n    _currentUrlParams = {\n      mode: 'simple',\n    };\n  } else {\n    // 現在のURLパラメータを保持しながら更新\n    _currentUrlParams = {\n      mode: 'simple',\n      ...diffConditions,\n    };\n\n    // 常にtermパラメータを正しく維持\n    if (currentTerm !== '') {\n      _currentUrlParams.term = currentTerm;\n    } else {\n      delete _currentUrlParams.term;\n    }\n  }\n\n  //URLを更新 (ブラウザの履歴に新しい状態を追加)\n  const newUrl = `${window.location.origin}${\n    window.location.pathname\n  }?${qs.stringify(_currentUrlParams)}`;\n  window.history.pushState(_currentUrlParams, '', newUrl);\n}\n\nexport function resetSimpleSearchConditions() {\n  const simpleSearchConditionsMaster = storeManager.getData(\n      'simpleSearchConditionsMaster'\n    ),\n    resetConditions = {};\n  for (const condition of simpleSearchConditionsMaster) {\n    switch (condition.type) {\n      case 'string':\n      case 'boolean':\n        if (condition.id !== 'term')\n          resetConditions[condition.id] = condition.default;\n        break;\n      case 'array':\n        {\n          const temp = {};\n          for (const item of condition.items) {\n            temp[item.id] = item.default;\n          }\n          resetConditions[condition.id] = temp;\n        }\n        break;\n    }\n  }\n  _setSimpleSearchConditions(resetConditions);\n}\n\n// 動かないからチェック\n/** ブラウザの「戻る」「進む」ボタンが押されたときに検索条件を更新\n * @param {Event} event - popstate イベント */\nexport function handleHistoryChange(_e) {\n  // 現在のURLからクエリパラメータを取得\n  const urlParams = qs.parse(window.location.search.substring(1));\n\n  // 取得したクエリパラメータを検索条件として適用\n  _setSimpleSearchConditions(urlParams, true);\n}\n\n// Advanced Search ----------------------------------------\n/** AdvancedSearch検索条件を設定し、必要に応じて検索を実行 */\nexport function setAdvancedSearchCondition(newSearchConditions: any) {\n  storeManager.setData('advancedSearchConditions', newSearchConditions);\n  storeManager.setData('appStatus', 'searching');\n\n  // URLパラメータを更新\n  reflectAdvancedSearchConditionToURI();\n\n  executeSearch(0, true);\n}\n\nexport function reflectAdvancedSearchConditionToURI() {\n  _currentUrlParams.mode = 'advanced';\n  window.history.pushState(\n    _currentUrlParams,\n    '',\n    `${window.location.origin}${window.location.pathname}?mode=advanced`\n  );\n}\n\n// アプリケーション初期化時\nfunction initializeSearchMode() {\n  const searchParams = new URLSearchParams(window.location.search);\n  const urlMode = searchParams.get('mode');\n\n  // URLのモードパラメータに基づいて検索モードを設定\n  if (urlMode === 'advanced') {\n    storeManager.setData('searchMode', 'advanced');\n  } else {\n    storeManager.setData('searchMode', 'simple');\n  }\n}\n"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","ActivityIndicator","constructor","elm","this","storeManager","bind","appStatus","status","classList","remove","add","ConditionGroupView","ConditionView","builder","parentView","logicalOperator","conditionViews","referenceElm","isRoot","super","CONDITION_ITEM_TYPE","group","_elm","_isRoot","dataset","numberOfChild","length","innerHTML","_logicalOperatorSwitch","querySelector","_container","conditionView","append","operator","addEventListener","_toggleSelecting","stopImmediatePropagation","and","or","_doneEditing","_mutationObserver","_defineObserveConditions","_builder","changeCondition","maketToolbar","toolbar","document","createElement","addNewConditionItem","conditionType","options","ConditionItemView","addNewConditionGroup","ungroup","Array","from","querySelectorAll","addConditionViews","view","insertBefore","removeConditionView","removeChild","disconnect","observer","MutationObserver","mutationsList","mutation","type","_numberOfChild","observe","attributes","childList","subtree","query","children","delegate","el","container","childViews","childNodes","AdvancedSearchToolbar","_delegate","ADVANCED_CONDITIONS","key","index","label","join","command","shortcut","String","fromCharCode","forEach","addCondition","condition","detail","copy","edit","delete","canSearch","can","_searchButton","AdvancedSearchSelection","area","_selectionArea","SelectionArea","class","boundaries","selectables","startareas","overlap","singleTap","allow","disable","getSelectingConditionViews","conditionEls","getSelection","siblingEls","parentNode","sort","el1","el2","indexOf","deselectAllConditions","deselect","clearSelection","selectConditionView","deselectSelecting","existingConditionViews","siblings","siblingElms","deselectConditionView","select","keepSelection","selectedConditionViews","AdvancedSearchBuilderView","_rootGroup","_toolbar","_defineEvents","_selection","canUngroup","canCopy","canDelete","canGroup","search","parentGroupView","siblingViews","position","Infinity","conditionGroupView","views","setAdvancedSearchCondition","selectingConditionViews","selectingConditionView","downX","downY","x","y","Math","abs","selection","ChromosomeView","no","maxLength","_no","_map","_filteredRegion","_displayRegion","_selectedRegion","lowMap","reduce","acc","subBand","band","push","start","end","_length","_svg","chromosomeHeight","offsetHeight","PADDING","rate","style","height","html","stainType","floor","ceil","round","_selectBand","_subbands","subband","_bands","includesSubbands","filter","chr","getData","setSimpleSearchCondition","getElementById","dispatchEvent","CustomEvent","displayingRegionsOnChromosome","displayingRegions","displayRegion","clientHeight","regionHeight","top","updateSelectedPositions","positions","intersection","_intersection","range1","range2","valuesView","_valuesView","_conditionView","_conditionType","_createElement","className","_el","sections","_body","_addValueView","value","isOnly","showDeleteButton","selector","valueView","_valuesElement","deleteButton","_clearValueViews","_valueViews","_updateValueViews","lastValueViews","_removeValueView","valuesElement","ConditionValueEditorCheckboxes","ConditionValueEditor","master","values","_checkboxes","checkbox","_update","button","checked","keepLastValues","_lastValues","restore","find","undefined","isValid","some","update","_validate","SELECTION_DEPENDED_ON_PARENT","consequence","disease","API_URL","ConditionValueEditorColumns","_data","_prepareData","_selectionDependedOnParent","_columns","_description","_drawColumn","datum","CONDITION_TYPE","assign","parentId","_getItems","items","column","depth","item","parent","li","target","closest","_updateChildren","parseInt","left","scrollWidth","clientWidth","scrollTo","behavior","reject","child","_updateIndeterminate","checkLeaves","indeterminate","numberOfChecked","childDatum","ErrorModal","LitElement","properties","erorMessage","arguments","errorMessage","render","styles","css","customElements","define","disconnectedRects","Map","Flip","AsyncDirective","args","element","boundingRect","role","parentRect","nothing","part","heroId","scrolledHeroRect","set","getBoundingClientRect","has","width","parentElement","getRootNode","prepareToFlip","noChange","get","flip","listener","removing","previous","deltaY","filteredListener","event","removeEventListener","animate","transform","opacity","onfinish","disconnected","requestAnimationFrame","directive","KEYS_MAP","text","link","cui","OntologyCard","data","state","hidden","Boolean","attribute","reflect","mode","order","prevRect","shouldUpdate","_skipKeys","cardRef","createRef","_leftCoinnector","leftConnectorClassName","rightConnectorClassName","willUpdate","prevParams","leaf","root","prevMode","updated","animProps","duration","easing","animation","overflow","backgroundColor","defaultBgColor","selectedBgColor","firstUpdated","getComputedStyle","getPropertyValue","ref","includes","Column","nodes","animationOptions","_handleClick","tagName","rect","bubbles","composed","repeat","node","Container","flexRef","clipRef","nodeRef","movement","flexWidth","deltaWidth","nodeWidth","gap","scrolledRect","API","cachedAxios","dataColumns","_parents","parents","hero","_children","_id","_loadingStarted","_loadingEnded","changedProperties","right","toUpperCase","slice","updateComplete","suggestAPI","ConditionDiseaseSearch","diseaseId","loading","_timer","appendChild","_changeDiseaseEventHadnler","stopPropagation","_loadingStartedHandler","setTimeout","_loadingEndedHandler","clearInterval","connectedCallback","setAttribute","valueMappings","valueKey","labelKey","createRenderRoot","ConditionValueEditorDisease","_conditionElem","_ConditionValueEditorGene_brand","WeakSet","ConditionValueEditorGene","_classPrivateMethodInitSpec","_handleSuggestSelect","_value","_label","_assertClassBrand","call","_searchFieldView","SearchFieldWithSuggestions","aliasOfKey","_lastValue","_lastLabel","OPTIONS","_","ConditionValueEditorLocation","defaultValues","rows","_chr","_rangeInputView","inputs","_start","input","contains","_end","_isWhole","_karyotype","reference","chromosomes","region","max","_ConditionValueEditorVariantID_brand","ConditionValueEditorVariantID","SearchField","trim","_handleDeleteValue","_lastValueViews","hasChildNodes","_type","isSelecting","_parentView","Configuration","bg","PAGE","initHome","typeEscape","close","open","setData","CONFIGURES","constant","COLUMNS","storeKey","configure","stored","localStorage","getItem","JSON","parse","newItem","isUsed","columns","setItem","stringify","_trigger","WeakMap","_filetype","_path","_DownloadButton_brand","DownloadButton","trigger","_classPrivateFieldInitSpec","_classPrivateFieldSet","filetype","_classPrivateFieldGet","_downloadFile","_downloadFromSimpleSearch","_downloadFromAdvancedSearch","term","anchor","href","click","body","form","action","method","enctype","submit","CHROMOSOME_KEYS","HEIGHTS","DEFAULT","isOpened","isShowBand","version","selected","GRCh37","GRCh38","X","Y","MT","REGEXP","RegExp","karyotype","initialiseKaryotype","tsv","default","Karyotype","isReady","chromosomeViews","_changeKaryotype","buttons","_bandShowButton","_bandHideButton","geneMap","parseGeneMap","chromosome","_drawChromosome","chromosomeKey","split","i","params","getElementsByTagName","simpleSearchConditions","conditions","result","exec","location","gte","lte","_updateLocations","advancedSearchConditions","locations","takeOutLocations","isSelectingChromosome","collectedLocations","chromosomeView","ModuleTabsView","tabs","tab","section","tabId","window","tabGroup","TopPageLayoutManager","storedTab","boundUrlParam","param","URL","searchParams","selectedTab","Event","kind","localStorageKey","toggle","PanelViewCheckList","PanelView","statisticsType","_statisticsType","conditionMaster","_createGUI","getSimpleSearchCondition","_inputsValues","nextElementSibling","_changeFilter","all","count","textContent","toLocaleString","filtered","D","T","PROBD","POSSD","B","U","LP","A","LB","insertAdjacentHTML","isAll","PanelViewFilterAlternativeAlleleFrequency","_conditionMaster","getSimpleSearchConditionMaster","_getConditionFromStore","rangeSlider","value1","value2","to","sliderStep","inputStep","searchType","changeParameter","_rangeSelectorView","newCondition","frequency","CollapseView","collapseView","setup","_e","collapseTargets","isParentCollapsed","ancestors","tr","TR","display","collapseId","collapseDepth","nextTR","nextSibling","targetDepth","KIND_OF_CONDITION","PanelViewFilterConsequence","grouping","findValues","updateNestedCheckboxes","hasChildren","accumulator","values2","concat","statisticsConsequence","PanelViewFilterVariantCallingQuality","change","quality","PanelViewPreviewAlternativeAlleleFrequencies","tbody","_master","has_freq","_datasets","alt","total","selectedRow","offset","record","getSelectedRecord","frequencies","source","ac","an","af","DECIMAL_DIGIT","numOfDigits","integerized","padStart","floated","parseFloat","toExponential","strIns","PanelViewPreviewClinicalSignificance","content","significance","mergeByMedgen","merged","entry","name","medgen","medgenName","interpretations","interpretation","Set","groupAndSortByInterpretation","sources","grouped","interpretationKeys","interpretationObj","a","b","nameA","nameB","localeCompare","sensitivity","flat","structuredClone","PanelViewPreviewConsequence","_content","transcripts","accessions","transcript","first","second","accession","description","_PanelViewPreviewExternalLinks_brand","PanelViewPreviewExternalLinks","table","list","external_link","dbsnp","_createLinkList","title","xref","mgend","clinvar","tommo","gnomad","url","PanelViewPreviewGene","symbols","symbol","synonyms","PreviewToVariantReport","SideBar","scrollBarWidth","offsetWidth","marginRight","_setupResetButton","resetSimpleSearchConditions","TippyBox","tooltipElements","HTMLElement","setTooltip","json","require","freeze","getAttribute","tooltip","template","createTemplate","tippy","allowHTML","interactive","theme","placement","appendTo","maxWidth","delay","zIndex","err","console","error","contentP","innerText","createAnchor","props","_isReady","init","targets","_globalHeader","_searchInputView","_searchResultsView","_drawerView","globalHeaderHeight","searchInputHeight","drawerOffsetTop","offsetTop","drawerHeight","innerHeight","updateDisplaySize","ALPHAMISSENSE_THRESHOLD","color","min","minInequalitySign","maxInequalitySign","Ambiguous","PREDICTIONS","alphamissense","unassignedLists","threshold","sift","Tolerated","Deleterious","polyphen","Benign","Possibly_damaging","Probably_damaging","SLIDER_CONFIG","step","numberOfScales","sliderWidth","scaleInterval","_decorate","customElement","_initialize","_LitElement","F","d","static","Styles","decorators","property","Number","queryAll","_range","backgroundImage","createGradientSlider","activeDataset","minValue","maxValue","inequalitySigns","unassignedChecks","primaryInputs","secondaryInputs","_rangeInput","_numberInput","setInequalitySign","_inequalitySign","newSign","newHtml","_switchInequalitySign","inequalitySign","sign","createNumberInput","_handleSliderValues","createRangeInput","createInequalitySignButton","_handleInequalitySign","createUnassignedList","predictionScoreName","capitalizeFirstLetter","_handleUnassignedCheckbox","range","toFixed","entries","details","_handleThresholdButton","PredictionValueView","_setBarStyles","_dataset","_values","_inequalitySigns","_unassignedChecks","_activeDataset","_inequalitySignsEl","_bar","score","preventDefault","activePanelId","replace","activePanel","_predictionRangeSlider","panel","_tabButtons","removeAttribute","_switchTabEvent","datasetEntries","datasets","_handleSwitchTab","rangeEl","gradientStops","flatMap","division","rangeLeft","stop","INEQUALITY_SIGN","gt","lt","LogarithmizedBlockGraphFrequencyView","alleleCount","frequencyValue","alternateAlleleCount","aac","logarithmizedFrequency","VERTICAL_BLOCK_WIDTH","VERTICAL_BLOCK_HEIGHT","searchTypeSimple","RangeSlider","observedAttributes","_slider1Input","_slider2Input","_toChange","_fromChange","_invertChange","invert","match","rulerNumberOfSteps","attachShadow","shadowRoot","cloneNode","slider1","slider2","sliderTrack","invertChk","_meter","attributeChangedCallback","oldValue","newValue","_reRenderRuler","_fillSlider","ruler","scale","orientation","val1","val2","percentVal1","percentVal2","background","_drawThumbs","_fireEvent","eventKeys","eventData","fromEntries","Proxy","prop","receiver","isNaN","parsedValue","_getToFromFromState","Reflect","disconnectedCallback","genotype","pathogenicity_prediction","consequence_grouping","adv_frequency","gene_symbol","variant_id","_currentUrlParams","qs","substring","setUserAgent","initializeApp","readyInitialSearch","initResultsView","getElement","initSidebar","initVariantPreview","initSearchInputs","getAllElements","ua","navigator","userAgent","toLowerCase","os","callback","simpleSearchConditionsMaster","extractSearchCondition","resultView","ResultsView","SimpleSearchView","axios","setupCache","Axios","create","headers","Accept","baseURL","maxCacheSize","cache","size","string","charAt","debounce","func","ms","timeout","clearTimeout","apply","keyDownEvent","storeName","LIMIT","currentAbortController","_currentSearchMode","lastRequestRanges","_calculateOffset","limit","roundedOffset","executeSearch","isRequestInProgress","isFirstTime","newSearchMode","abort","clear","offsetStart","rangeKey","AbortController","signal","apiEndpoints","basePath","_determineSearchEndpoints","requestOptions","_getRequestOptions","endpoint","response","fetch","ok","jsonResponse","queryParams","setResults","scroll","stat","available","statistics","max_rows","_processStatistics","notice","warning","abortError","_fetchData","toggleAttribute","publish","_updateAppState","catch","cconditionItemType","_keydownEscapeEvent","_keydownEscape","_isFirstTime","_keepLastRelation","initializeHTML","setupDOMReferences","attachEventListeners","autoEnterEditMode","classification","relation","getInitialRelation","generateHTML","summary","_valuesEl","_editorEl","_conditionValues","attachClickPropagationStopper","attachSelectionToggle","attachRelationToggle","attachButtonHandlers","attachKeyboardHandler","toggleRelation","currentRelation","handleButtonClick","enterEditMode","startToEditCondition","doneEditing","revertChanges","editor","editors","editorElement","keepLastRelation","valueElements","getValueElements","buildDatasetQuery","buildPathogenicityQuery","buildLocationQuery","buildGeneQuery","buildVariantIdQuery","buildSignificanceQuery","buildDefaultQuery","queries","queryValue","positionStr","positionArray","queryId","gene","terms","valueMgendElements","getMgendElements","valueClinvarElements","getClinvarElements","relationType","buildMgendCondition","buildClinvarCondition","elements","ConditionValueEditorClinicalSignificance","datasetValue","findIndex","splice","span","wrapper","wrapperClass","conditionWrapperClass","conditionWrapper","ConditionValueEditorColumnsDataset","dataNodes","isInteger","processedNode","rawData","processedData","hierarchy","isLogin","toString","inputId","listItem","nodeId","changedNode","arrow","currentColumn","columnsContainer","currentDepth","columnElement","fetchLoginStatus","each","lastValue","descendants","descendant","dataNode","checkedChildren","indeterminateChildren","allChecked","someChecked","hasIndeterminate","eachAfter","nodeToShow","every","pathNodes","path","reverse","pathNode","DEFAULT_CONDITION","MODE","ConditionValueEditorFrequencyCount","alt_alt","alt_ref","hemi_alt","currentCondition","option","switchingElements","defaultMode","htmlEl","freqCountView","setValues","invertValue","isFiltered","ConditionValueEditorPathogenicityPrediction","conditionValues","customEvent","predictionValueView","tabView","_editors","_sections","_okButton","_clickOkButton","_clickCancelButton","REF_ALT_SHOW_LENGTH","COLUMN_TEMPLATES","togovar_id","refsnp_id","ref_alt","clinical_significance","updateTogovarId","updateRefSNP","tdRS","tdRSAnchor","remains","updatePosition","tdPositionChromosome","tdPositionCoordinate","updateRefAlt","tdRefAltRef","tdRefAltAlt","alternate","refData","formatRefAltData","altData","sum","sequence","formatRefAlt","updateVariantType","updateGene","tdGene","tdGeneAnchor","updateAltFrequency","tdFrequencies","freq","updateConsequence","tdConsequence","tdConsequenceItem","mostConsequence","uniqueConsequences","updateClinicalSignificance","tdClinicalSign","tdClinicalAnchor","tdClinicalIcon","significances","resetClinicalSignificance","firstSignificance","firstCondition","updateClinicalCondition","updateClinicalMetadata","hasMedgen","updateFunctionPrediction","getFunctionClass","function","updateAlphaMissense","val","updateSift","updatePolyphen","_createTableRow","subscribe","updateTableRow","tapCompletedEvent","rowIndex","_setLoadingState","_setOutOfRangeState","getRecordByIndex","_prepareTableData","_updateColumnContent","_createTableCellHTML","_cacheTableCells","createFrequencyColumnHTML","_cacheBasicElements","_cacheFrequencyElements","_cacheFunctionElements","tdTGVAnchor","tdPosition","tdRefAlt","tdType","tdClinical","datasetId","tdAlphaMissense","tdAlphaMissenseFunction","tdSift","tdSiftFunction","tdPolyphen","tdPolyphenFunction","columnHandlers","ResultsRowUpdaters","existing_variations","alt_frequency","most_severe_consequence","containerElement","isTouchDragging","touchStartY","touchStartTop","lastScrollPosition","_createScrollBarHTML","_getRequiredElements","scrollBarElement","scrollBar","positionDisplay","totalDisplay","_bindStoreEvents","_initializeDragFunctionality","matchMedia","matches","_initializeMouseDrag","_initializeTouchDrag","onDrag","ui","rowCount","numberOfRecords","availableHeight","TR_HEIGHT","offsetRate","_scheduleVisualStateRelease","_updateScrollBarAppearance","deactivate","initializePosition","handleScrollWithFeedback","touchStartOffset","newOffset","_calculateTouchScrollOffset","boundedOffset","_clampOffsetToValidRange","updateDirectly","handleScroll","calculation","_calculateScrollPosition","newScrollPosition","_calculateOffsetFromScroll","_calculateScrollBarPosition","_applyScrollBarStyles","totalHeight","displayHeight","displayRate","barHeight","availableRate","barTop","releaseTimeoutId","_releaseVisualState","availableScrollY","_clampScrollPosition","bounds","scrollPosition","maxOffset","_updatePositionDisplay","bar","mouseDragState","isDragging","startY","startTop","_setInitialCursorStyle","_attachMouseEventListeners","cursor","_onMouseDown","_onMouseMove","_onMouseUp","clientY","_setDraggingCursorStyle","newTop","constrainedTop","_constrainPositionWithinBounds","_setScrollBarPosition","_triggerDragEvent","_onTouchStart","passive","_onTouchMove","_onTouchEnd","touches","maxTop","mockEvent","messages","thead","tablecontainer","_getDOMElements","_connectToStoreManager","_configureScrollBar","_initializeTableHeader","stylesheet","_createStylesheet","_initializeComponentHandlers","_configureInitialState","dataManager","handleOffsetChange","searchMessages","handleSearchMessages","searchStatus","handleSearchStatus","searchResults","_results","handleSearchResults","touchHandler","isTouchEnabled","setTouchElementsPointerEvents","handleColumnsChange","SELECTORS","STATUS","MESSAGES","TABLE_THEAD","TABLE_TBODY","TABLE_CONTAINER","STORE_BINDINGS","_keydown","SCROLL_BAR","ResultsViewTouchHandler","ResultsViewDataManager","_configureEventHandlers","getWheelEventName","_scroll","setScrollCallbacks","onScrollStart","onScroll","startOffset","onScrollEnd","shiftSelectedRow","resultRows","isTouchDevice","_shouldSkipUpdate","_calculateDisplaySize","_ensureRowsExist","_adjustOffset","_updateRowsWithAnimation","_shouldSkipOffsetUpdate","_calculateDisplayingRegions","_appendMessageIfExists","_updateNotFoundState","isUpdating","isFetching","_validateData","warn","_clearExistingStyles","_applyColumnStyles","direction","_getSelectionState","newIndex","_calculateNewIndex","adjustedOffset","_adjustOffsetForSelection","_calculateAvailableHeight","maxRowCount","karyotypeHeight","COMMON_FOOTER_HEIGHT","requiredRowCount","rowView","ResultsRowView","emptySpace","_calculateAdjustedOffset","currentOffset","row","chromosomePositions","_isValidRecord","_convertToRegions","regions","message","isNotFound","results","isArray","sheet","cssRules","deleteRule","displayValue","rule","insertRule","currentIndex","TOUCH_CONFIG","scrollCallbacks","initializeTouchState","detectTouchDevice","setupTouchEvents","callbacks","setTouchStartOffset","touchState","enabled","_updateTouchElementsPointerEvents","_ensureLinkElementsEnabled","startX","startTime","lastY","lastX","distance","isScrolling","maxTouchPoints","_handleTouchStart","capture","_handleTouchMove","_handleTouchEnd","_handleTapCompleted","pointerEvents","_isValidTouchTarget","currentTarget","_resetTouchState","_analyzeTouchGesture","currentY","currentX","deltaX","sqrt","isScroll","Date","now","isTap","touch","clientX","gesture","ConditionItemValueView","_handleDelete","FrequencyCountValueView","_bars","_createScaleElements","frequencyGraph","scaleTemplate","_updateBarVisualization","requestUpdate","_setNormalBarMode","_setInvertBarMode","_buildDatasetQuery","_buildGenotypeQuery","_buildInvertedDatasetQuery","_buildNormalDatasetQuery","_buildRangeValues","placeholder","_inputRef","_handleLoad","changed","_handleInput","_handleForm","_handleResetClick","HTMLDivElement","SearchButton","EXAMPLES","SEARCH_FIELD_CONFIG","suggestAPIURL","suggestAPIQueryParam","titleMappings","CHROMOSOME_PATTERN","host","test","updateTerm","_term","currentConditions","reset","_hideSuggestions","selectSuggestion","suggestion","selectExample","example","executeCurrentSearch","executeButtonSearch","controller","handleSuggestionEnter","handleExampleSelected","handleInputTerm","handleTermEnter","handleSearchButtonClick","handleInputStart","handleInputReset","SimpleSearchExamples","examples","handleClick","_handleSearchButtonClick","_eventHandlers","_handleExampleSelected","_controller","SimpleSearchController","SimpleSearchEventHandlers","eventHandlers","ScrollIntoView","_getElementFromPart","_scrollParentToChild","_isElementViewable","childRect","viewableArea","bottom","_calculateScrollDirection","scrollTop","scrollBot","shouldScrollTop","scrollCalc","scrollAmount","scrollIntoView","SearchFieldSuggestionsList","suggestData","highlightedSuggestionIndex","itemIdKey","itemLabelKey","subTextKey","hasApiResponse","_handleSelect","unsafeHTML","highlight","DEFAULT_VALUE_MAPPINGS","createCompleteSearchFieldOptions","hideSuggestions","showSuggestions","suppressSuggestions","hasUserInput","currentSuggestionIndex","currentSuggestionColumnIndex","_suggestionKeysArrayInternal","handleUpDownKeys","_keyboardHandler","handleSuggestionSelected","_selectionHandler","handleInput","_inputHandler","handleFocusIn","handleFocusOut","hideSuggestionsMethod","searchWithoutSuggestion","searchWithoutSelect","selectCurrentSuggestion","currentSuggestion","_suggestionKeysArray","resetKeyboardSelection","executeSearchWithoutSuggestion","closeSuggestions","hideControllerSuggestions","showControllerSuggestions","clearControllerSuggestData","clearSuggestData","resetSelection","_searchFieldOptionsInternal","SearchFieldController","SuggestionKeyboardHandler","SuggestionSelectionHandler","InputEventHandler","apiTask","_searchFieldOptions","setSuggestURL","_handleStepThroughColumns","keyIndex","inputValue","resetInputState","shouldShowSuggestions","_getSuggestURL","_initializeApiTask","Task","dependencies","dataToReturn","_handleArrowLeft","_handleArrowRight","_handleArrowUp","_handleArrowDown","_handleEnter","_handleEscape","_formatSuggestionValue","_hasMultipleSuggestionColumns","_escapeString","str","escapedValue","handleHistoryChange","searchMode","isStoreUpdating","_deepCopy","isEqual","is","valueCopy","records","updatedResults","fill","recordIndex","origin","timeoutId","Response","reflectSimpleSearchConditionToURI","reflectAdvancedSearchConditionToURI","URLSearchParams","conditionKey","conditionValue","_setSimpleSearchConditions","resetConditions","temp","newSearchConditions","masterSearchConditions","diffConditions","conditionMap","masterCondition","filteredValues","itemKey","itemValue","isFromHistory","updatedConditions","currentTerm","newUrl","pathname","history","pushState","initializeSearchMode"],"sourceRoot":""}