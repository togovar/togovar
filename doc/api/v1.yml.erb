openapi: 3.0.3

servers:
  - url: <%= "#{ENV['TOGOVAR_FRONTEND_API_URL']}/api" %>

info:
  title: TogoVar API
  version: "0.9.1"
  description: TogoVar API version 0.9.1 specification

paths:
  /search/variant:
    post:
      tags:
        - search
      parameters:
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/Stat'
        - $ref: '#/components/parameters/Data'
      requestBody:
        $ref: '#/components/requestBodies/SearchVariant'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/SearchVariant'
        '400':
          $ref: '#/components/responses/bad_request'
        '500':
          $ref: '#/components/responses/internal_server_error'
        '501':
          $ref: '#/components/responses/not_implemented'

  /search/gene:
    get:
      tags:
        - search
      parameters:
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/GeneTerm'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/SearchGene'
        '400':
          description: >
            `Bad Request`<br/>
            Your query contains grammatical mistakes. See errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '500':
          description: >
            `Internal Server Error`<br/>
            Unexpected errors occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '501':
          description: >
            `Not Implemented`<br/>
            Responder for given mime type are not implemented.
            Provide the correct accept header (e.g. `Accept: application/json`).
          content:
            text/plain:
              schema:
                type: string
                example: Not implemented
    post:
      tags:
        - search
      parameters:
        - $ref: '#/components/parameters/Pretty'
      requestBody:
        $ref: '#/components/requestBodies/SearchGene'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/SearchGene'
        '400':
          description: >
            `Bad Request`<br/>
            Your query contains grammatical mistakes. See errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '500':
          description: >
            `Internal Server Error`<br/>
            Unexpected errors occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '501':
          description: >
            `Not Implemented`<br/>
            Responder for given mime type are not implemented.
            Provide the correct accept header (e.g. `Accept: application/json`).
          content:
            text/plain:
              schema:
                type: string
                example: Not implemented

  /search/disease:
    get:
      tags:
        - search
      parameters:
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/DiseaseTerm'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/SearchDisease'
        '400':
          description: >
            `Bad Request`<br/>
            Your query contains grammatical mistakes. See errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '500':
          description: >
            `Internal Server Error`<br/>
            Unexpected errors occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '501':
          description: >
            `Not Implemented`<br/>
            Responder for given mime type are not implemented.
            Provide the correct accept header (e.g. `Accept: application/json`).
          content:
            text/plain:
              schema:
                type: string
                example: Not implemented
    post:
      tags:
        - search
      parameters:
        - $ref: '#/components/parameters/Pretty'
      requestBody:
        $ref: '#/components/requestBodies/SearchDisease'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/SearchDisease'
        '400':
          description: >
            `Bad Request`<br/>
            Your query contains grammatical mistakes. See errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '500':
          description: >
            `Internal Server Error`<br/>
            Unexpected errors occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '501':
          description: >
            `Not Implemented`<br/>
            Responder for given mime type are not implemented.
            Provide the correct accept header (e.g. `Accept: application/json`).
          content:
            text/plain:
              schema:
                type: string
                example: Not implemented

  /inspect/disease:
    get:
      tags:
        - inspect
      parameters:
        - $ref: '#/components/parameters/Pretty'
        - $ref: '#/components/parameters/DiseaseMondo'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/InspectDisease'
        '400':
          description: >
            `Bad Request`<br/>
            Your query contains grammatical mistakes. See errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '500':
          description: >
            `Internal Server Error`<br/>
            Unexpected errors occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '501':
          description: >
            `Not Implemented`<br/>
            Responder for given mime type are not implemented.
            Provide the correct accept header (e.g. `Accept: application/json`).
          content:
            text/plain:
              schema:
                type: string
                example: Not implemented
    post:
      tags:
        - inspect
      parameters:
        - $ref: '#/components/parameters/Pretty'
      requestBody:
        $ref: '#/components/requestBodies/InspectDisease'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/InspectDisease'
        '400':
          description: >
            `Bad Request`<br/>
            Your query contains grammatical mistakes. See errors in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '500':
          description: >
            `Internal Server Error`<br/>
            Unexpected errors occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/Error'
        '501':
          description: >
            `Not Implemented`<br/>
            Responder for given mime type are not implemented.
            Provide the correct accept header (e.g. `Accept: application/json`).
          content:
            text/plain:
              schema:
                type: string
                example: Not implemented

  /download/variant:
    post:
      tags:
        - download
      requestBody:
        $ref: '#/components/requestBodies/SearchVariant'
      responses:
        '200':
          description: >
            `OK`
          content:
            application/json:
              schema:
                $ref: '#/components/definitions/DownloadVariant'
            text/csv:
              schema:
                type: string
            text/plain:
              schema:
                type: string
        '400':
          $ref: '#/components/responses/bad_request'
        '500':
          $ref: '#/components/responses/internal_server_error'
        '501':
          $ref: '#/components/responses/not_implemented'

components:
  parameters:
    Pretty:
      in: query
      name: pretty
      description: If set, response body will be nicely formatted.
      schema:
        type: boolean
        nullable: true

    Stat:
      in: query
      name: stat
      description: If set to `0`, do not collect statistics
      schema:
        type: integer
        nullable: true
        enum:
          - 1
          - 0

    Data:
      in: query
      name: data
      description: If set to `0`, do not return result records
      schema:
        type: integer
        nullable: true
        enum:
          - 1
          - 0

    GeneTerm:
      in: query
      name: term
      description: A term to search
      schema:
        type: string
      required: true
      example: ALDH2

    DiseaseTerm:
      in: query
      name: term
      description: A term to search
      schema:
        type: string
      required: true
      example: breast ovarian cancer

    DiseaseMondo:
      in: query
      name: node
      description: A node ID
      schema:
        type: string
      required: false
      example: MONDO_0003582

  requestBodies:
    SearchVariant:
      description: Schema for searching variant
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              version:
                type: string
                description: (Optional) Set version number if you would like to use old version.
                enum:
                  - "1"
              formatter:
                type: string
                description: (Optional) Formatter for response data.
                enum:
                  - "html"
              query:
                oneOf:
                  - $ref: '#/components/schemas/ID'
                  - $ref: '#/components/schemas/Location'
                  - $ref: '#/components/schemas/VariantType'
                  - $ref: '#/components/schemas/VariantConsequence'
                  - $ref: '#/components/schemas/VariantFrequency'
                  - $ref: '#/components/schemas/ClinicalSignificance'
                  - $ref: '#/components/schemas/Sift'
                  - $ref: '#/components/schemas/Polyphen'
                  - $ref: '#/components/schemas/AlphaMissense'
                  - $ref: '#/components/schemas/Gene'
                  - $ref: '#/components/schemas/Disease'
                  - $ref: '#/components/schemas/And'
                  - $ref: '#/components/schemas/Or'
              limit:
                type: integer
                description: (Optional) Default is 100.
                minimum: 0
                maximum: 1000
              offset:
                oneOf:
                  - type: integer
                    minimum: 0
                    maximum: 10000
                  - type: array
                    description: >
                      Set [{chromosome}, {position}, {reference}, {alternative}] in case you would like to
                      paginate over 10,000 records. {reference} and {alternative} can be omitted.
                    minItems: 2
                    maxItems: 4
                    items:
                      type: string
              column:
                type: array
                description: >
                  This option is only valid for the download API.
                items:
                  type: string
                  enum:
                    - id
                    - rs
                    - position
                    - ref_alt
                    - type
                    - gene
                    - frequency
                    - consequence
                    - condition
                    - sift
                    - polyphen
                    - alphamissense

          examples:
            Example1:
              $ref: '#/components/examples/SearchVariant-1'
            Example2:
              $ref: '#/components/examples/SearchVariant-2'
            Example3:
              $ref: '#/components/examples/SearchVariant-3'
            Example4:
              $ref: '#/components/examples/SearchVariant-4'
            Example5:
              $ref: '#/components/examples/SearchVariant-5'
            Example6:
              $ref: '#/components/examples/SearchVariant-6'
            Example7:
              $ref: '#/components/examples/SearchVariant-7'
            Example8:
              $ref: '#/components/examples/SearchVariant-8'
            Example9:
              $ref: '#/components/examples/SearchVariant-9'
            Example10:
              $ref: '#/components/examples/SearchVariant-10'
            Example11:
              $ref: '#/components/examples/SearchVariant-11'

    SearchGene:
      description: Schema for searching gene
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              term:
                type: string
                description: A term to search
                required: true
                example: ALDH2

    SearchDisease:
      description: Schema for searching disease
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              term:
                type: string
                description: A term to search
                required: true
                example: breast ovarian cancer

    InspectDisease:
      description: Schema for inspecting disease
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              node:
                type: string
                description: A node ID
                required: false
                example: MONDO_0003582

  responses:
    bad_request:
      description: >
        `Bad Request`<br/>
        Your query contains grammatical mistakes. See errors in the response.
      content:
        application/json:
          schema:
            $ref: '#/components/definitions/Error'
    internal_server_error:
      description: >
        `Internal Server Error`<br/>
        Unexpected errors occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/definitions/Error'
    not_implemented:
      description: >
        `Not Implemented`<br/>
        Responder for given mime type are not implemented.
        Provide the correct accept header (e.g. `Accept: application/json`).
      content:
        text/plain:
          schema:
            type: string
            example: Not implemented

  schemas:
    ID:
      type: object
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: array
          items:
            type: string
            description: tgv ID

    Location:
      type: object
      additionalProperties: false
      required:
        - location
      properties:
        location:
          type: object
          additionalProperties: false
          required:
            - chromosome
            - position
          properties:
            chromosome:
              type: string
              description: chromosome name
              enum:
                - "1"
                - "2"
                - "3"
                - "4"
                - "5"
                - "6"
                - "7"
                - "8"
                - "9"
                - "10"
                - "11"
                - "12"
                - "13"
                - "14"
                - "15"
                - "16"
                - "17"
                - "18"
                - "19"
                - "20"
                - "21"
                - "22"
                - X
                - Y
                - MT
            position:
              oneOf:
                - type: integer
                - $ref: '#/components/schemas/Range'

    VariantType:
      type: object
      additionalProperties: false
      required:
        - type
      properties:
        type:
          type: object
          additionalProperties: false
          required:
            - relation
            - terms
          properties:
            relation:
              type: string
              description: >
                Available values
                 * `eq` - Equals to any of term in the list
                 * `ne` - Not equals to all of term in the list
              enum:
                - eq
                - ne

            terms:
              type: array
              items:
                type: string
                description: >
                  Available values
                  <% Rails.application.config.application.dig(:query_params, :type).each do |x| %>
                  <%= "* `#{x[:key]}` - #{x[:label]}" %>
                  <% end %>
                enum:
                  <% Rails.application.config.application.dig(:query_params, :type).each do |x| %>
                  <%= "- #{x[:key]}" %>
                  <% end %>
                  - snv
                  - ins
                  - del
                  - indel
                  - sub

    VariantConsequence:
      type: object
      additionalProperties: false
      required:
        - consequence
      properties:
        consequence:
          type: object
          additionalProperties: false
          required:
            - relation
            - terms
          properties:
            relation:
              type: string
              description: >
                Available values
                 * `eq` - Equals to any of term in the list
                 * `ne` - Not equals to all of term in the list
              enum:
                - eq
                - ne

            terms:
              type: array
              items:
                type: string
                description: >
                  Both SO terms and its label are acceptable
                  <% Rails.application.config.application.dig(:query_params, :consequence).each do |x| %>
                  <%= "* `#{x[:key]}` - #{x[:label]}" %>
                  <% end %>

                  see [this documentation](https://ensembl.org/info/genome/variation/prediction/predicted_data.html) for details

                enum:
                  <% Rails.application.config.application.dig(:query_params, :consequence).each do |x| %>
                  <%= "- #{x[:key]}" %>
                  <% end %>
                  - transcript_ablation
                  - splice_acceptor_variant
                  - splice_donor_variant
                  - stop_gained
                  - frameshift_variant
                  - stop_lost
                  - start_lost
                  - transcript_amplification
                  - inframe_insertion
                  - inframe_deletion
                  - missense_variant
                  - protein_altering_variant
                  - splice_region_variant
                  - incomplete_terminal_codon_variant
                  - start_retained_variant
                  - stop_retained_variant
                  - synonymous_variant
                  - coding_sequence_variant
                  - mature_miRNA_variant
                  - 5_prime_UTR_variant
                  - 3_prime_UTR_variant
                  - non_coding_transcript_exon_variant
                  - intron_variant
                  - NMD_transcript_variant
                  - non_coding_transcript_variant
                  - upstream_gene_variant
                  - downstream_gene_variant
                  - TFBS_ablation
                  - TFBS_amplification
                  - TF_binding_site_variant
                  - regulatory_region_ablation
                  - regulatory_region_amplification
                  - feature_elongation
                  - regulatory_region_variant
                  - feature_truncation
                  - intergenic_variant

    VariantFrequency:
      type: object
      additionalProperties: false
      required:
        - frequency
      properties:
        frequency:
          type: object
          additionalProperties: false
          required:
            - frequency
          oneOf:
            - type: object
              additionalProperties: false
              required:
                - frequency
              properties:
                dataset:
                  $ref: '#/components/schemas/Dataset'
                frequency:
                  $ref: '#/components/schemas/Range'
                filtered:
                  type: boolean
                  description: if `true`, exclude variants with a FILTER flag other than PASS

            - type: object
              additionalProperties: false
              required:
                - count
              properties:
                dataset:
                  $ref: '#/components/schemas/Dataset'
                count:
                  $ref: '#/components/schemas/Range'
                filtered:
                  type: boolean
                  description: if `true`, exclude variants with a FILTER flag other than PASS

    ClinicalSignificance:
      type: object
      additionalProperties: false
      required:
        - significance
      properties:
        significance:
          type: object
          additionalProperties: false
          required:
            - relation
            - terms
          properties:
            relation:
              type: string
              description: >
                Available values
                 * `eq` - Equals to any of term in the list
                 * `ne` - Not equals to all of term in the list
              enum:
                - eq
                - ne

            terms:
              type: array
              items:
                type: string
                description: >
                  Both short keys and its label are acceptable
                  <% Rails.application.config.application.dig(:query_params, :significance).each do |x| %>
                  <%= "* `#{x[:key]}` - #{x[:label]}" %>
                  <% end %>
                enum:
                  <% Rails.application.config.application.dig(:query_params, :significance).each do |x| %>
                  <%= "- #{x[:key]}" %>
                  <% end %>
                  <% Rails.application.config.application.dig(:query_params, :significance).each do |x| %>
                  <%= "- #{x[:id]}" %>
                  <% end %>

            source:
              type: array
              items:
                type: string
                description: >
                  Available values
                  <% Rails.application.config.application.dig(:datasets, :condition).each do |x| %>
                  <%= "* `#{x[:id]}` - #{x.dig(:api, :description)}" %>
                  <% end %>
                enum:
                  <% Rails.application.config.application.dig(:datasets, :condition).each do |x| %>
                  <%= "- #{x[:id]}" %>
                  <% end %>

    Sift:
      type: object
      additionalProperties: false
      required:
        - sift
      properties:
        sift:
          type: object
          additionalProperties: false
          required:
            - score
          properties:
            score:
              oneOf:
                - $ref: '#/components/schemas/Range'
                - title: Terms
                  type: array
                  items:
                    type: string
                    description: >
                      Available values
                       * `unassigned`
                    enum:
                      - unassigned

    Polyphen:
      type: object
      additionalProperties: false
      required:
        - polyphen
      properties:
        polyphen:
          type: object
          additionalProperties: false
          required:
            - score
          properties:
            score:
              oneOf:
                - $ref: '#/components/schemas/Range'
                - title: Terms
                  type: array
                  items:
                    type: string
                    description: >
                      Available values
                       * `unassigned`
                       * `unknown`
                    enum:
                      - unassigned
                      - unknown

    AlphaMissense:
      type: object
      additionalProperties: false
      required:
        - alphamissense
      properties:
        alphamissense:
          type: object
          additionalProperties: false
          required:
            - score
          properties:
            score:
              oneOf:
                - $ref: '#/components/schemas/Range'
                - title: Terms
                  type: array
                  items:
                    type: string
                    description: >
                      Available values
                       * `unassigned`
                    enum:
                      - unassigned

    Gene:
      type: object
      additionalProperties: false
      required:
        - gene
      properties:
        gene:
          type: object
          additionalProperties: false
          required:
            - relation
            - terms
          properties:
            relation:
              type: string
              description: >
                Available values
                 * `eq` - Equals to any of term in the list
                 * `ne` - Not equals to all of term in the list
              enum:
                - eq
                - ne

            terms:
              type: array
              items:
                type: integer
                description: HGNC ID

    Disease:
      type: object
      additionalProperties: false
      required:
        - disease
      properties:
        disease:
          type: object
          additionalProperties: false
          required:
            - relation
            - terms
          properties:
            relation:
              type: string
              description: >
                Available values
                 * `eq` - Equals to any of term in the list
                 * `ne` - Not equals to all of term in the list
              enum:
                - eq
                - ne
            terms:
              type: array
              items:
                type: string
                description: MedGen ID or Mondo ID
            sub_concepts:
              type: boolean
              description: "Include diseases of subordinate concepts in the Mondo Disease Ontology (default: true)"
              example: true
            source:
              type: array
              items:
                type: string
                description: >
                  Available values
                  <% Rails.application.config.application.dig(:datasets, :condition).each do |x| %>
                  <%= "* `#{x[:id]}` - #{x.dig(:api, :description)}" %>
                  <% end %>
                enum:
                  <% Rails.application.config.application.dig(:datasets, :condition).each do |x| %>
                  <%= "- #{x[:id]}" %>
                  <% end %>

    Dataset:
      type: object
      additionalProperties: false
      required:
        - name
      properties:
        name:
          type: string
          description: >
            Available values
            <% (config = Rails.application.config.application.dig(:datasets, :frequency)).each do |x| %>
            <%= "* `#{x[:id]}` - #{x.dig(:api, :description)}" %>
            <% end %>
          enum:
          <% (@current_user ? Variation.accessible_datasets(@current_user)[:frequency] : config).each do |x| %>
            <%= "- #{x[:id]}" %>
            <% if (groups = x[:groups]).present? %>
              <% groups.each do |g| %>
            <%= "- #{g.is_a?(Hash) ? g[:id] : g}" %>
              <% end %>
            <% end %>
          <% end %>

    Range:
      description: >
        Available keys
         * `gte` - Greater than or equal to
         * `te` - Greater than
         * `lte` - Less than or equal to
         * `le` - Less than
      oneOf:
        - type: object
          description: Both-closed<br/>(a, b) = {x | a &le; x &le; b}
          additionalProperties: false
          required:
            - gte
            - lte
          properties:
            gte:
              type: number
            lte:
              type: number
        - type: object
          description: Both-open<br/>(a, b) = {x | a &lt; x &lt; b}
          additionalProperties: false
          required:
            - gt
            - lt
          properties:
            gt:
              type: number
            lt:
              type: number
        - type: object
          description: Left-open, right-closed<br/>(a, b) = {x | a &lt; x &le; b}
          additionalProperties: false
          required:
            - gt
            - lte
          properties:
            gt:
              type: number
            lte:
              type: number
        - type: object
          description: Left-closed, right-open<br/>(a, b) = {x | a &le; x &lt; b}
          additionalProperties: false
          required:
            - gte
            - lt
          properties:
            gte:
              type: number
            lt:
              type: number
        - type: object
          description: Left-closed, right-unbounded<br/>(a, +&infin;) = {x | x &ge; a}
          additionalProperties: false
          required:
            - gte
          properties:
            gte:
              type: number
        - type: object
          description: Left-open, right-unbounded<br/>(a, +&infin;) = {x | x &gt; a}
          additionalProperties: false
          required:
            - gt
          properties:
            gt:
              type: number
        - type: object
          description: Right-closed, left-unbounded<br/>(-&infin;, b) = {x | x &le; b}
          additionalProperties: false
          required:
            - lte
          properties:
            lte:
              type: number
        - type: object
          description: Right-open, left-unbounded<br/>(-&infin;, b) = {x | x &lt; b}
          additionalProperties: false
          required:
            - lt
          properties:
            lt:
              type: number

    And:
      type: object
      additionalProperties: false
      required:
        - and
      properties:
        and:
          type: array
          minItems: 2
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/ID'
              - $ref: '#/components/schemas/Location'
              - $ref: '#/components/schemas/VariantType'
              - $ref: '#/components/schemas/VariantConsequence'
              - $ref: '#/components/schemas/VariantFrequency'
              - $ref: '#/components/schemas/ClinicalSignificance'
              - $ref: '#/components/schemas/Sift'
              - $ref: '#/components/schemas/Polyphen'
              - $ref: '#/components/schemas/AlphaMissense'
              - $ref: '#/components/schemas/Gene'
              - $ref: '#/components/schemas/Disease'
              - $ref: '#/components/schemas/And'
              - $ref: '#/components/schemas/Or'

    Or:
      type: object
      additionalProperties: false
      required:
        - or
      properties:
        or:
          type: array
          minItems: 2
          items:
            type: object
            oneOf:
              - $ref: '#/components/schemas/ID'
              - $ref: '#/components/schemas/Location'
              - $ref: '#/components/schemas/VariantType'
              - $ref: '#/components/schemas/VariantConsequence'
              - $ref: '#/components/schemas/VariantFrequency'
              - $ref: '#/components/schemas/ClinicalSignificance'
              - $ref: '#/components/schemas/Sift'
              - $ref: '#/components/schemas/Polyphen'
              - $ref: '#/components/schemas/AlphaMissense'
              - $ref: '#/components/schemas/Gene'
              - $ref: '#/components/schemas/Disease'
              - $ref: '#/components/schemas/And'
              - $ref: '#/components/schemas/Or'

  definitions:
    SearchVariant:
      type: object
      properties:
        scroll:
          type: object
          properties:
            offset:
              type: integer
            limit:
              type: integer
            max_rows:
              type: integer

        statistics:
          type: object
          properties:
            total:
              type: integer
            filtered:
              type: integer
            dataset:
              type: object
              properties:
                dataset_name:
                  type: integer
            type:
              type: object
              properties:
                so_term:
                  type: integer
            significance:
              type: object
              properties:
                significance_key:
                  type: integer
            consequence:
              type: object
              properties:
                so_term:
                  type: integer

        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              chromosome:
                type: string
              start:
                type: integer
              stop:
                type: integer
              reference:
                type: string
              alternative:
                type: string
              most_severe_consequence:
                type: string
              sift:
                type: number
              polyphen:
                type: number
              existing_variations:
                type: array
                items:
                  type: string
              external_link:
                type: array
                items:
                  type: object
                  properties:
                    db_name:
                      type: array
                      items:
                        type: string
              significance:
                type: array
                items:
                  type: object
                  properties:
                    condition:
                      type: string
                    interpretations:
                      type: array
                      items:
                        type: string
              transcripts:
                type: object
                properties:
                  transcript_id:
                    type: string
                  gene_id:
                    type: string
                  consequence:
                    type: array
                    items:
                      type: string
                  sift:
                    type: number
                  polyphen:
                    type: number
                  hgnc_id:
                    type: integer
                  symbol:
                    type: object
                    properties:
                      source:
                        type: string
                      label:
                        type: string
                  hgvs_p:
                    type: string
                  hgvs_c:
                    type: string
                  hgvs_g:
                    type: string
              frequencies:
                type: object
                properties:
                  source:
                    type: string
                  filter:
                    type: array
                    items:
                      type: string
                  quality:
                    type: number
                  allele:
                    type: object
                    properties:
                      number:
                        type: integer
                      count:
                        type: integer
                      frequency:
                        type: number
                  genotype:
                    type: object
                    properties:
                      ref_homo_count:
                        type: integer
                      hetero_count:
                        type: integer
                      alt_homo_count:
                        type: integer

    DownloadVariant:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              tgv_id:
                type: string
              rs:
                type: array
                items:
                  type: string
              chromosome:
                type: string
              position<%= "_#{ENV.fetch('TOGOVAR_REFERENCE').downcase}" %>:
                type: integer
              reference:
                type: string
              alternate:
                type: string
              type:
                type: string
              gene:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: string
                  synonyms:
                    type: array
                    items:
                      type: string
              consequence:
                type: array
                items:
                  type: string
              condition:
                type: array
                items:
                  type: object
              sift_qualitative_prediction:
                type: string
              sift_score:
                type: number
              polyphen2_qualitative_prediction:
                type: string
              polyphen_score:
                type: number
              alphamissense_pathogenicity:
                type: string
              alphamissense_score:
                type: number
              jga_wgs_allele_alt:
                type: number
              jga_wgs_allele_total:
                type: number
              jga_wgs_alt_allele_freq:
                type: number
              jga_wgs_qc_status:
                type: array
                items:
                  type: string
              jga_wes_allele_alt:
                type: number
              jga_wes_allele_total:
                type: number
              jga_wes_alt_allele_freq:
                type: number
              jga_wes_qc_status:
                type: array
                items:
                  type: string
              jga_snp_allele_alt:
                type: number
              jga_snp_allele_total:
                type: number
              jga_snp_alt_allele_freq:
                type: number
              jga_snp_genotype_alt_alt:
                type: number
              jga_snp_genotype_ref_alt:
                type: number
              jga_snp_genotype_ref_ref:
                type: number
              jga_snp_qc_status:
                type: array
                items:
                  type: string
              tommo_allele_alt:
                type: number
              tommo_allele_total:
                type: number
              tommo_alt_allele_freq:
                type: number
              tommo_qc_status:
                type: array
                items:
                  type: string
              hgvd_allele_alt:
                type: number
              hgvd_allele_total:
                type: number
              hgvd_alt_allele_freq:
                type: number
              hgvd_qc_status:
                type: array
                items:
                  type: string
              gem_j_wga_allele_alt:
                type: number
              gem_j_wga_allele_total:
                type: number
              gem_j_wga_alt_allele_freq:
                type: number
              gem_j_wga_qc_status:
                type: array
                items:
                  type: string
              gnomad_genomes_allele_alt:
                type: number
              gnomad_genomes_allele_total:
                type: number
              gnomad_genomes_alt_allele_freq:
                type: number
              gnomad_genomes_qc_status:
                type: array
                items:
                  type: string
<% if ENV['TOGOVAR_REFERENCE'] == 'GRCh37' %>
              gnomad_exomes_allele_alt:
                type: number
              gnomad_exomes_allele_total:
                type: number
              gnomad_exomes_alt_allele_freq:
                type: number
              gnomad_exomes_qc_status:
                type: array
                items:
                  type: string
<% end %>

    SearchGene:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 404
          symbol:
            type: string
            example: ALDH2
          name:
            type: string
            example: aldehyde dehydrogenase 2 family member
          alias_of:
            type: string
            example: null
          highlight:
            type: string
            example: <em>ALDH2</em>

    SearchDisease:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: MONDO_0003582
          cui:
            type: string
            example: C0677776
          label:
            type: string
            example: Hereditary breast and ovarian cancer syndrome
          highlight:
            type: string
            example: Hereditary <em>breast</em> and <em>ovarian</em> <em>cancer</em> syndrome

    InspectDisease:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
            example: MONDO_0003582
          cui:
            type: string
            example: C0677776
          label:
            type: string
            example: Hereditary breast and ovarian cancer syndrome
          root:
            type: boolean
            example: false
          leaf:
            type: boolean
            example: false
          parents:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: MONDO_0016248
                cui:
                  type: string
                  example: CN201036
                label:
                  type: string
                  example: Familial ovarian cancer
                root:
                  type: boolean
                  example: false
          children:
            type: array
            items:
              type: object
              properties:
                id:
                  type: string
                  example: MONDO_0012933
                cui:
                  type: string
                  example: C2675520
                label:
                  type: string
                  example: Breast-ovarian cancer, familial 2
                leaf:
                  type: boolean
                  example: true

    Error:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
            example: "error message"

  examples:
    SearchVariant-1:
      summary: List variants whose class is any of insertion, deletion and indel.
      value:
        query:
          type:
            relation: eq
            terms:
              - ins
              - del
              - indel

    SearchVariant-2:
      summary: List variants by identifiers (tgv, rs)
      value:
        query:
          id:
            - tgv421843
            - rs114202595

    SearchVariant-3:
      summary: List variants exist on an exact position
      value:
        query:
          location:
            chromosome: "16"
            position: 48258198

    SearchVariant-4:
      summary: List variants exist in a certain range
      value:
        query:
          location:
            chromosome: "10"
            position:
              gte: 73270743
              lte: 73376976

    SearchVariant-5:
      summary: List variants range from 0.05 to 0.95 in frequency in JGA-WES.
      value:
        query:
          or:
            - frequency:
                dataset:
                  name: jga_wes
                frequency:
                  gte: 0
                  lte: 0.05
                filtered: true
            - frequency:
                dataset:
                  name: jga_wes
                frequency:
                  gte: 0.95
                  lte: 1.0
                filtered: true

    SearchVariant-6:
      summary: List variants exist on ALDH2 (Aldehyde Dehydrogenase 2 family member).
      value:
        query:
          gene:
            relation: eq
            terms:
              - 404

    SearchVariant-7:
      summary: List variants associated with C2675520 (Breast-ovarian cancer, familial 2).
      value:
        query:
          disease:
            relation: eq
            terms:
              - C2675520

    SearchVariant-8:
      summary: List variants associated with MONDO_0003582 (hereditary breast ovarian cancer syndrome).
      value:
        query:
          disease:
            relation: eq
            terms:
              - MONDO_0003582

    SearchVariant-9:
      summary: Paginate result over 10,000 records.
      value:
        offset:
          - "12"
          - "112204719"
          - G
          - A
        limit: 100

    SearchVariant-10:
      summary: List variants by prediction score
      value:
        query:
          and:
            - sift:
                score:
                  gte: 0
                  lt: 0.05
            - polyphen:
                score:
                  gt: 0.908
                  lte: 1
            - alphamissense:
                score:
                  gt: 0.564
                  lte: 1

    SearchVariant-11:
      summary: List variants by prediction score unassigned or unknown
      value:
        query:
          and:
            - sift:
                score:
                  - unassigned
            - polyphen:
                score:
                  - unassigned
                  - unknown
            - alphamissense:
                score:
                  - unassigned
